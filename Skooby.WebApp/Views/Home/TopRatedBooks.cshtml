@model IEnumerable<ASI.Basecode.Services.Models.BookViewModel>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Top Books Page";
}

@section styles {
    <link rel="stylesheet" href="~/css/dashboard.css" />
    <link rel="stylesheet" href="~/css/style.css" />
    <link rel="stylesheet" href="~/css/newbooks.css" />
    <link rel="stylesheet" href="~/css/pagination.css" />
}

<style>

    .sidebar-content {
        height: auto;
        background-color: white;
        padding: 20px;
        border-radius: 10px;
        overflow: auto;
        position: -webkit-sticky;
        position: sticky;
        top: 10%;
        box-shadow: 1px 1px 15px rgba(161, 182, 253, 0.825);
    }
    .top-books-container {
        width: 740px;
        height: 450px;
    }

    .page-link {
        padding: 0 !important
    }
</style>

<section class="skooby-section skooby-book-section">
    <div class="books-setion-container">
        <h1 class="books-section-title">Top Rated Tales Await</h1>
        <h3 class="books-section-subtitle">Read the best of the best!</h3>
    </div>

    <div class="container-wrapper">
        <div class="section-wrapper content-wrapper">
            <h4 class="books-section-title">Top Rated Books</h4>
            <hr />
            <div class="top-books-container" id="book-wrapper">

                <div class="book-wrapper">
                    @{
                        var recentBooks = Model;
                    }
                    @foreach (var book in recentBooks)
                    {
                        <div class="book-content">
                            <a href="@Url.Action("ViewBook", "Home", new { id = book.Id })">
                                <div class="book-image-preview">
                                    <img class="book-image" src="@(String.IsNullOrEmpty(book.Image) ? "/img/book-image-filler.png" : book.Image)" alt="@book.Name" />
                                </div>
                            </a>
                            <div class="book-info-card" id="per-book-info-@book.Id">
                                <h5 class="book-title book-text">@book.Name</h5>
                                <p class="author-name book-text">by @string.Join(", ", book.AuthorNames) • @book.PublishedOn.Year</p>
                                <p class="book-description book-text">@book.Description</p>
                            </div>
                        </div>
                    }

                </div>
            </div>
            <div class="pagination-container"> 
                <div class="pagination">
                    @if (ViewBag.CurrentPage > 5)
                    {
                        int previousViewLastPage = ((ViewBag.CurrentPage - 1) / 5) * 5;

                        <a href="@Url.Action("TopRatedBooks", "Home", new { pageNo = previousViewLastPage })" class="prev-next">&lt;</a>
                    }

                    @{
                        int startPage = ((ViewBag.CurrentPage - 1) / 5) * 5 + 1;
                        int endPage = Math.Min(startPage + 4, ViewBag.TotalPages);
                    }

                    @for (int i = startPage; i <= endPage; i++)
                    {
                        if (i == ViewBag.CurrentPage)
                        {
                            <span class="current-page">@i</span>
                        }
                        else
                        {
                            <a href="@Url.Action("TopRatedBooks", "Home", new { pageNo = i })" class="page-link">@i</a>
                        }
                    }
                    @if (ViewBag.CurrentPage <= (ViewBag.TotalPages - (ViewBag.TotalPages % 5)) && ViewBag.TotalPages > 5)
                    {
                        <span>...</span>
                    }

                    @if (ViewBag.CurrentPage <= (ViewBag.TotalPages - (ViewBag.TotalPages % 5)) && ViewBag.TotalPages > 5)
                    {

                        int nextViewFirstPage = ViewBag.CurrentPage < 6 ? 6 : ((ViewBag.CurrentPage - 1) / 5) * 5 + 6;

                        <a href="@Url.Action("TopRatedBooks", "Home", new { pageNo = nextViewFirstPage })" class="prev-next">&gt;</a>
                    }
                </div>
            </div>
        </div>

        <div class="sidebar-container">
            <div class="sidebar-content">
                <h2 class="sidebar-title">Filter</h2>
                <form class="d-flex filter-searchbar" role="search" method="get">
                    <input class="form-control me-2 search-input" name="searchTerm" type="search" placeholder="Search"
                           aria-label="Search">
                    <button class="btn btn-outline-success search-button" type="submit">Search</button>
                </form>
                <div>
                    <a href="@Url.Action("NewBooks", "Home", new{pageNo = 1})" class="btn-text">What's New?</a>
                </div>
                <div>
                    <a href="@Url.Action("TopRatedBooks", "Home",  new{pageNo = 1})" class="btn-text">Top Rated</a>
                </div>

                <hr class="filter-divider" />
                <h3 class="filter-genretitle">Genres</h3>
                @{
                    var allGenres = Model.SelectMany(book => book.GenreNames).Distinct().OrderBy(genre => genre).ToList();
                    var visibleGenres = allGenres.Take(14).ToList();
                    var remainingGenres = allGenres.Skip(14).ToList();
                }
                <div class="filter-category-container" id="filterCategoryContainer">


                    @foreach (var genre in visibleGenres)
                    {
                        <a href="#" class="genre-link" data-genre="@genre">
                            <p class="filter-category-titles">@genre</p>
                        </a>
                    }


                </div>
                @if (remainingGenres.Any())
                {

                    <div class=" Seemore">
                        <a href="#" id="seeMoreLink">
                            <p class="filter-category">See More</p>
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</section>
 

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $(".book-content").hover(
            function () {
                $(this).find(".book-info-card").show();
            },
            function () {
                $(this).find(".book-info-card").hide();
            }
        );
    });
</script>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

@* JQuery Script for deletion (calls delete method in controller as http) *@
<script>
    $(document).ready(function () {
        $(".btn-danger").click(function () {
            var url = $(this).data("url");
            if (confirm("Are you sure you want to delete this book?")) {
                $.post(url, function (data) {
                    location.reload();
                }).fail(function () {
                    alert('Unable to delete.');
                });
            }
        });
    });
</script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
        crossorigin="anonymous"></script>