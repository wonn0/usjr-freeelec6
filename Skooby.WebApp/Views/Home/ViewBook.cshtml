@model ASI.Basecode.Services.Models.BookDetailsViewModel
<style>
    p#textarea-rating-section {
        top: 55em;
        position: absolute;
        opacity: 0;
    }

    .review-textarea {
        min-height: 300px !important;
        border-radius: 5px;
        padding: 10px;
        width: 100%;
        border: 1px solid #ced4da;
    }


    .no-data-text {
        color: grey;
    }

         .viewbook-book-content {
             width: 150px !important;
        text-align: center;
        width: -webkit-fill-available;
        padding-bottom: 20px;
        margin: 0 10px;
    }

    .viewbook-book-image-preview {
        width: 150px;
        max-height: 200px;
        margin: 0 auto;
        display: block;
        justify-content: center;
        align-items: center;
        overflow: hidden;
    }
        .viewbook-book-image {
        width: 150px; /* Set the desired width */
        height: 200px; /* Set the desired height */
        display: block;
        object-fit: cover;
        border-radius: 10px;
    }
    .viewbook-suggest-book-image {
        width: 150px;
        height: 200px;
        margin: 0 auto;
        display: block;
    }

    .viewbook-book-title {
        color: #FF7519;
        font-size: 16px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

        .viewbook-book-info-card {
        display: none;
        width: 300px;
        z-index: 1;
        background-color: white;
        color: black;
        border-radius: 10px;
        position: absolute;
        height: 194px;
        box-shadow: 2px 1px 8px 0px rgba(0,0,0,0.67);
        -webkit-box-shadow: 2px 1px 8px 0px rgba(0,0,0,0.67);
        -moz-box-shadow: 2px 1px 8px 0px rgba(0,0,0,0.67);

        /* Align contents to the left */
        text-align: left;
        padding: 10px; /* Add padding for better readability */
    }

    .viewbook-book-info-card h5,
    .viewbook-book-info-card p {
        margin: 5px 0; /* Adjust margin for better spacing */
    }

    .viewbook-book-image-preview:hover + .viewbook-book-info-card {
        display: block!important;
    }

    hr {
        border: none;
        height: .25px;
        background-color: var(--primary-color);
    }



</style>

@{
    ViewData["Title"] = "Home Page";
}
@section styles {
    <link rel="stylesheet" href="~/css/viewbook.css" />
    <link rel="stylesheet" href="~/css/style.css" />

}

@{
    double averageRating = 0;
    double roundedAverage = 0;

    if (Model.Reviews != null && Model.Reviews.Any())
    {
        averageRating = Model.Reviews.Average(r => r.Rating);
        roundedAverage = Math.Ceiling(averageRating);
    }
}


<section class="skooby-section skooby-viewbook" data-book-id="@Model.Book.Id">
    <div class="container-wrapper">
        <div class="image-container">
            <div class="image-content">

                <div class="book-image-preview">
                    <img class="book-image image-content-spacing" id="book-image"
                         src="@Url.Content(Model.Book.Image)" />

                    <a class="image-content-spacing btn btn-primary download-btn" href="#textarea-rating-section">
                        <i style="padding-right:10px;" class="fi fi-ss-bone"></i>Rate Me
                    </a>
                    @* <div class="btn-rate">
                    <a href="#textarea-container">test</a>
                    </div> *@
                </div>

            </div>
        </div>
        <div class="content-wrapper">
            <div class="book-container">
                <div class="book-content-wrapper">
                    <div class="book-content">

                        <h1 id="book-title">@Model.Book.Name</h1>
                        <p class="author-name" id="author-name">
                            by
                            @if (Model.Book.AuthorNames.Count == 1)
                            {
                                @Html.Raw(Model.Book.AuthorNames[0])
                            }
                            else if (Model.Book.AuthorNames.Count == 2)
                            {
                                @foreach (var authorName in Model.Book.AuthorNames)
                                {
                                    @Html.Raw(authorName)
                                    @if (authorName != Model.Book.AuthorNames.Last())
                                    {
                                        <text> and </text>
                                    }
                                }
                            }
                            else if (Model.Book.AuthorNames.Count > 2)
                            {
                                @foreach (var authorName in Model.Book.AuthorNames.Take(2))
                                {
                                    @Html.Raw(authorName + ", ")
                                }
                                @Html.Raw("and et al.")
                            }
                        </p>





                        <div class="rate-review-wrapper">
                            <div class="rate-review-wrapper">
                                <div class="stars info-spacing info-rating-main">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        <i class="fi fi-@(i <= roundedAverage ? "ss" : "rr")-bone star-rating-main"
                                           id="star-@(i)"></i>
                                    }
                                </div>
                                <h4 class="rate-value rr-spacing avg-rating" id="avg-rating">
                                    @averageRating.ToString("0.0")
                                </h4>
                            </div>

                            <div class="reviews-wrapper">
                                <p class="reviews-value rr-spacing">@(Model.Reviews.Count)</p>
                                <p>Barks</p>

                            </div>
                        </div>

                        <div class="book-description-content">
                            <p class="book-description" id="book-description">
                                @Model.Book.Description
                            </p>
                            @* <button type="submit" id="show-more-btn"
                            class="show-more-content-spacing btn btn-primary show-more-btn">
                            Show more <i class="fa-solid fa-chevron-down show-more"></i>
                            </button> *@
                        </div>
                        <div class="book-info">
                            <div class="info-wrapper">
                                <p class="info-spacing info-title">ISBN: </p>
                                <p id="isbn-value">@Model.Book.ISBN</p>
                            </div>

                            <div class="info-wrapper">
                                <p class="info-spacing info-title">Language: </p>
                                <p id="language-value">@Model.Book.Language</p>
                            </div>

                            <div class="info-wrapper">
                                <p class="info-spacing info-title" id="pages-value">Pages: @Model.Book.PageCount</p>
                            </div>
                            <div class="info-wrapper">
                                <p class="info-spacing info-title" id="published-value">First published on: </p>
                                <p>@Model.Book.PublishedOn</p>
                            </div>
                            <div class="info-wrapper">
                                <p class="info-spacing info-title" id="published-value">Genre: </p>
                                <p>
                                    @foreach (var genreName in Model.Book.GenreNames)
                                    {
                                        @genreName
                                    }
                                </p>
                            </div>
                        </div>


                        <div class="spacing">
                            <p>s</p>
                        </div>


                        <h2 class="section-title">
                            @if (Model.Book.AuthorNames.Count == 1)
                            {
                                @Html.Raw(Model.Book.AuthorNames[0] + "'s Other Works")
                            }
                            else if (Model.Book.AuthorNames.Count == 2)
                            {
                                @Html.Raw(Model.Book.AuthorNames[0] + " and " + Model.Book.AuthorNames[1] + "'s Other Works")
                            }
                            else if (Model.Book.AuthorNames.Count > 2)
                            {
                                @Html.Raw(string.Join(", ", Model.Book.AuthorNames.Take(2)) + " and et al. Other Works")
                            }
                        </h2>


                        <hr />


                        @if (Model.RelatedBooks != null && Model.RelatedBooks.Any())
                        {
                            
                                var relatedBooks = Model.RelatedBooks;
                            
                            <div class="book-container">
                                @foreach (var relatedBook in Model.RelatedBooks.Take(4))
                                {
                                    <div class="viewbook-book-content">
                                        <a href="@Url.Action("ViewBook", "Home", new { id = relatedBook.Id })">
                                            <div class="viewbook-book-image-preview">

                                                <img class="viewbook-book-image" src="@relatedBook.Image ?? /img/about-us.png" alt="@relatedBook.Name" />

                                            </div>
                                        </a>
                                        <div class="viewbook-book-info-card" id="per-book-info-@relatedBook.Id">

                                            <h5 class="viewbook-book-title viewbook-book-text">@relatedBook.Name</h5>
                                            <p class="viewbook-author-name viewbook-book-text">by @string.Join(", ", relatedBook.AuthorNames) • @relatedBook.PublishedOn.Year</p>
                                            <p class="viewbook-book-description viewbook-book-text">@relatedBook.Description</p>
                                        </div>
                                        <h6 class="viewbook-book-title viewbook-book-text">@relatedBook.Name</h6>
                                    </div>

                                }

                            </div> 

                            @if(relatedBooks.Count() > 4)
                            {
                                <div class="see-more-container">
                                    @{
                                        var authorName = Model.Book.AuthorNames;
                                    }
                                    <a href="@Url.Action("AuthorRelatedWorks", "Home", new { authors =  authorName, id = Model.Book.Id  })">
                                        <span id="seeMoreButton" class="see-more-button">
                                            See
                                            More
                                        </span>
                                    </a>
                                </div>
                            } 
                        }
                        else
                        {
                            <p class="no-data-text">No other works by this author found.</p>
                        }



                        <div class="spacing">
                            <p>s</p>
                        </div>
                        <hr />


                        <div class="textarea-container" id="textarea-container">
                            <div class="textarea-wrapper ">
                                <p id="textarea-rating-section">a</p>
                                <h4 class=" ">Your Rating</h4>
                                <div class="stars book-rate-spacing review-padding">
                                    <button class="star-btn" onmouseover="hoverStars(1)" onmouseout="resetStars()"
                                            onclick="setRating(1)">
                                        <i class="fi fi-rr-bone star-rating-image" id="star1"></i>
                                    </button>
                                    <button class="star-btn" onmouseover="hoverStars(2)" onmouseout="resetStars()"
                                            onclick="setRating(2)">
                                        <i class="fi fi-rr-bone star-rating-image" id="star2"></i>
                                    </button>
                                    <button class="star-btn" onmouseover="hoverStars(3)" onmouseout="resetStars()"
                                            onclick="setRating(3)">
                                        <i class="fi fi-rr-bone star-rating-image" id="star3"></i>
                                    </button>
                                    <button class="star-btn" onmouseover="hoverStars(4)" onmouseout="resetStars()"
                                            onclick="setRating(4)">
                                        <i class="fi fi-rr-bone star-rating-image" id="star4"></i>
                                    </button>
                                    <button class="star-btn" onmouseover="hoverStars(5)" onmouseout="resetStars()"
                                            onclick="setRating(5)">
                                        <i class="fi fi-rr-bone star-rating-image" id="star5"></i>
                                    </button>
                                </div>
                                <div class="container">
                                    <div class="row">
                                        <div class="col">
                                            <div class="form-group">

                                                <input placeholder="Your Name" class="form-control" />
                                                <span class="text-danger"></span>
                                            </div>
                                        </div>
                                        <div class="col">
                                            <div class="form-group">

                                                <input placeholder="Your Email" class="form-control" />
                                                <span class="text-danger"></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col">
                                            <div class="form-group">
                                                <textarea class="form-control review-textarea review-padding" rows="4"
                                                          cols="50" name="comment" form="usrform"
                                                          placeholder="What are your thoughts?">
</textarea>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                            <div class="textarea-btn-container">
                                <button type="submit"
                                        class="btn-padd btn btn-skooby review-padding"
                                        onclick="submitReview()">
                                    Create
                                </button>
                            </div>
                        </div>



                        <div class="spacing">
                            <p>s</p>
                        </div>


                        <div class="book-rating-container">
                            <div class="book-rating-wrapper">
                                <h3>Book Ratings</h3>
                                <div class="rate-review-wrapper element-book-rate">
                                    <div class="stars info-spacing element-book-rate">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            <i class="fi fi-@(i <= roundedAverage ? "ss" : "rr")-bone star-rating-secondary element-book-rate"
                                               id="star-@(i)"></i>
                                        }
                                    </div>

                                    <h6 class="rate-value rr-spacing element-book-rate avg-rating" id="avg-rating">
                                        @averageRating.ToString("0.0")
                                    </h6>

                                    <p class="element-book-rate">
                                        out of 5
                                    </p>
                                    <div class="reviews-wrapper element-book-rate">
                                        <p class="ebr-styling rr-spacing element-book-rate">•</p>
                                        <p class="ebr-styling reviews-value rr-spacing element-book-rate review-value"
                                           id="review-value">@(Model.Reviews.Count)</p>
                                        <p class=" ebr-styling element-book-rate">barks</p>
                                    </div>


                                </div>
                                <hr />
                            </div>
                            <div class="review-item-container">
                                @if (Model.Reviews != null && Model.Reviews.Any())
                                {
                                    foreach (var review in Model.Reviews)
                                    {
                                        <div class="review-item">
                                            <div class="name-rating-container">
                                                <h6 class="review-name"><strong>Barked by:</strong> @review.ReviewedBy</h6>
                                                <p class="review-rate"><strong></strong> @review.Rating</p>
                                            </div>
                                            <p class="reviewed-on">@review.ReviewedOn</p>
                                            <p class="review-description">@review.Description</p>

                                        </div>
                                    }
                                }
                                else
                                {
                                    <p class="no-data-text">No barks available for this book.</p>
                                }
                            </div>
                        </div>

                        <hr />

                        <div class="spacing">
                            <p>s</p>
                        </div>


                        <h2 class="section-title">Suggested For You</h2>
                        <hr />

                        @if (Model.AllBooks != null && Model.AllBooks.Any())
                        {
                            <div class="book-container">
                                @foreach (var book in Model.AllBooks.Take(4))
                                {
                                    <div class="viewbook-book-content">
                                        <a href="@Url.Action("ViewBook", "Home", new { id = book.Id })">
                                            <div class="viewbook-book-image-preview">

                                                <img class="viewbook-book-image" src="@book.Image ?? /img/about-us.png" alt="@book.Name" />

                                            </div>
                                        </a>
                                        <div class="viewbook-book-info-card" id="per-book-info-@book.Id">

                                            <h5 class="viewbook-book-title viewbook-book-text">@book.Name</h5>
                                            <p class="viewbook-author-name viewbook-book-text">by @string.Join(", ", book.AuthorNames) • @book.PublishedOn.Year</p>
                                            <p class="viewbook-book-description viewbook-book-text">@book.Description</p>
                                        </div>
                                        <h6 class="viewbook-book-title viewbook-book-text">@book.Name</h6>
                                    </div>
                                }

                            </div>
 
                            @if(Model.AllBooks.Count() > 4)
                            {
                                <div class="see-more-container">
                                    <a href="@Url.Action("SuggestedForU", "Home")">
                                        <span id="seeMoreButton" class="see-more-button">
                                            See More
                                        </span>
                                    </a>
                                </div>
                            } 
                        }
                        else
                        {
                            <p>No books available for suggestions.</p>
                        }




                    </div>

                </div>
            </div>
        </div>
    </div>
</section>


<!-- Your HTML and Razor code here -->

<script>
    // Global rating variable
    var currentRating = 0;

    document.addEventListener("DOMContentLoaded", function () {
        // Initialize stars event listeners
        initializeStarRating();

        // Event listener for the Create button
        document.querySelector(".textarea-btn-container button").addEventListener("click", function (event) {
            event.preventDefault(); // Prevent the default form submit action

        });
    });

    function initializeStarRating() {
        const stars = document.querySelectorAll('.star-btn');
        stars.forEach((star, index) => {
            star.addEventListener('mouseover', function () {
                highlightStars(index + 1);
            });
            star.addEventListener('mouseout', function () {
                highlightStars(currentRating);
            });
        });
    }

    window.setRating = function (rating) {
        currentRating = rating;
        highlightStars(rating);
    }

    function highlightStars(rating) {
        for (let i = 1; i <= 5; i++) {
            let star = document.getElementById('star' + i);
            star.className = i <= rating ? 'fi fi-ss-bone star-rating-image' : 'fi fi-rr-bone star-rating-image';
        }
    }

    function submitReview() {
        var bookId = document.querySelector('.skooby-section.skooby-viewbook').getAttribute('data-book-id');
        var name = document.querySelector("input[placeholder='Your Name']").value;
        var email = document.querySelector("input[placeholder='Your Email']").value;
        var comment = document.querySelector(".review-textarea").value;

        var reviewData = {
            Rating: currentRating,
            ReviewedBy: name,
            Email: email,
            Description: comment,
            BookId: bookId
        };

        console.log("Submitting review:", reviewData); // Log the review data for debugging

        fetch('/Home/AddReview', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(reviewData),
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                console.log('Success:', data);
                alert('Review submitted successfully!');
            })
            .catch((error) => {
                console.error('Error:', error);
                alert('Error submitting review');
            });
    }
</script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $(".viewbook-book-content").hover(
            function () {
                $(this).find(".viewbook-book-info-card").show();
            },
            function () {
                $(this).find(".viewbook-book-info-card").hide();
            }
        );
    });
</script>