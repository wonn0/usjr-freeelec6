@model ASI.Basecode.Services.Models.BookDetailsViewModel
<style>
    p#textarea-rating-section {
        top: 55em;
        position: absolute;
        opacity: 0;
    }

    .review-textarea {
        min-height: 300px !important;
        border-radius: 5px;
        padding: 10px;
        width: 100%;
        border: 1px solid #ced4da;
    }


    .no-data-text {
        color: grey;
    }
</style>

@{
    ViewData["Title"] = "Home Page";
}
@section styles {
    <link rel="stylesheet" href="~/css/viewbook.css" />
    <link rel="stylesheet" href="~/css/style.css" />
}

@{
    double averageRating = 0;
    double roundedAverage = 0;

    if (Model.Reviews != null && Model.Reviews.Any())
    {
        averageRating = Model.Reviews.Average(r => r.Rating);
        roundedAverage = Math.Ceiling(averageRating);
    }
}


<section class="skooby-section skooby-viewbook" data-book-id="@Model.Book.Id">
    <div class="container-wrapper">
        <div class="image-container">
            <div class="image-content">

                <div class="book-image-preview">
                    <img class="book-image image-content-spacing" id="book-image"
                        src="@Url.Content(Model.Book.Image)" />

                    <a class="image-content-spacing btn btn-primary download-btn" href="#textarea-rating-section"><i
                            style="padding-right:10px;" class="fi fi-ss-bone"></i>Rate Me</a>
                    @* <div class="btn-rate">
                    <a href="#textarea-container">test</a>
                    </div> *@
                </div>

            </div>
        </div>
        <div class="content-wrapper">
            <div class="book-container">
                <div class="book-content-wrapper">
                    <div class="book-content">

                        <h1 id="book-title">@Model.Book.Name</h1>
                        <p class="author-name" id="author-name">
                            by @foreach (var authorName in Model.Book.AuthorNames)
                            {
                                @authorName
                            }
                        </p>
                        <div class="rate-review-wrapper">
                            <div class="rate-review-wrapper">
                                <div class="stars info-spacing info-rating-main">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        <i class="fi fi-@(i <= roundedAverage ? "ss" : "rr")-bone star-rating-main"
                                            id="star-@(i)"></i>
                                    }
                                </div>
                                <h4 class="rate-value rr-spacing avg-rating" id="avg-rating">
                                    @averageRating.ToString("0.0")
                                </h4>
                            </div>

                            <div class="reviews-wrapper">
                                <p class="reviews-value rr-spacing">@(Model.Reviews.Count)</p>
                                <p>Barks</p>

                            </div>
                        </div>

                        <div class="book-description-content">
                            <p class="book-description" id="book-description">
                                @Model.Book.Description
                            </p>
                            @* <button type="submit" id="show-more-btn"
                            class="show-more-content-spacing btn btn-primary show-more-btn">
                            Show more <i class="fa-solid fa-chevron-down show-more"></i>
                            </button> *@
                        </div>
                        <div class="book-info">
                            <div class="info-wrapper">
                                <p class="info-spacing info-title">ISBN: </p>
                                <p id="isbn-value">@Model.Book.ISBN</p>
                            </div>

                            <div class="info-wrapper">
                                <p class="info-spacing info-title">Language: </p>
                                <p id="language-value">@Model.Book.Language</p>
                            </div>

                            <div class="info-wrapper">
                                <p class="info-spacing info-title" id="pages-value">Pages: @Model.Book.PageCount</p>
                            </div>
                            <div class="info-wrapper">
                                <p class="info-spacing info-title" id="published-value">First published on: </p>
                                <p>@Model.Book.PublishedOn</p>
                            </div>
                            <div class="info-wrapper">
                                <p class="info-spacing info-title" id="published-value">Genre: </p>
                                <p>
                                    @foreach (var genreName in Model.Book.GenreNames)
                                    {
                                        @genreName
                                    }
                                </p>
                            </div>
                        </div>


                        <div class="spacing">
                            <p>s</p>
                        </div>


                        <h2 class="section-title">
                            @foreach (var authorName in Model.Book.AuthorNames)
                            {
                                @authorName.ToUpperInvariant()
                            }'S Other Works
                        </h2>
                        <hr />


                        @if (Model.RelatedBooks != null && Model.RelatedBooks.Any())
                        {
                            <div class="book-container">
                                @foreach (var relatedBook in Model.RelatedBooks.Take(4))
                                {
                                    <div class="book">
                                        <a href="@Url.Action("ViewBook", "Home", new { id = relatedBook.Id })">
                                            <img src="@Url.Content(relatedBook.Image)" alt="@relatedBook.Name"
                                                class="book-images" />
                                        </a>

                                        <p class="book-title">@relatedBook.Name</p>
                                    </div>
                                }

                            </div>
                            <div class="see-more-container"> <button id="seeMoreButton" class="see-more-button">See
                                    More</button></div>
                        }
                        else
                        {
                            <p class="no-data-text">No other works by this author found.</p>
                        }

                        <hr />



                        <div class="spacing">
                            <p>s</p>
                        </div>


                        <div class="textarea-container" id="textarea-container">
                            <div class="textarea-wrapper ">
                                <p id="textarea-rating-section">a</p>
                                <h4 class=" ">Your Rating</h4>
                                <div class="stars book-rate-spacing review-padding">
                                    <button class="star-btn" onmouseover="hoverStars(1)" onmouseout="resetStars()"
                                        onclick="setRating(1)">
                                        <i class="fi fi-rr-bone star-rating-image" id="star1"></i>
                                    </button>
                                    <button class="star-btn" onmouseover="hoverStars(2)" onmouseout="resetStars()"
                                        onclick="setRating(2)">
                                        <i class="fi fi-rr-bone star-rating-image" id="star2"></i>
                                    </button>
                                    <button class="star-btn" onmouseover="hoverStars(3)" onmouseout="resetStars()"
                                        onclick="setRating(3)">
                                        <i class="fi fi-rr-bone star-rating-image" id="star3"></i>
                                    </button>
                                    <button class="star-btn" onmouseover="hoverStars(4)" onmouseout="resetStars()"
                                        onclick="setRating(4)">
                                        <i class="fi fi-rr-bone star-rating-image" id="star4"></i>
                                    </button>
                                    <button class="star-btn" onmouseover="hoverStars(5)" onmouseout="resetStars()"
                                        onclick="setRating(5)">
                                        <i class="fi fi-rr-bone star-rating-image" id="star5"></i>
                                    </button>
                                </div>
                                <div class="container">
                                    <div class="row">
                                        <div class="col">
                                            <div class="form-group">

                                                <input placeholder="Your Name" class="form-control" />
                                                <span class="text-danger"></span>
                                            </div>
                                        </div>
                                        <div class="col">
                                            <div class="form-group">

                                                <input placeholder="Your Email" class="form-control" />
                                                <span class="text-danger"></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col">
                                            <div class="form-group">
                                                <textarea class="form-control review-textarea review-padding" rows="4"
                                                    cols="50" name="comment" form="usrform"
                                                    placeholder="What are your thoughts?">
</textarea>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                            <div class="textarea-btn-container"><button type="submit"
                                    class="btn-padd btn btn-skooby review-padding"
                                    onclick="submitReview()">Create</button>
                            </div>
                        </div>



                        <div class="spacing">
                            <p>s</p>
                        </div>


                        <div class="book-rating-container">
                            <div class="book-rating-wrapper">
                                <h3>Book Ratings</h3>
                                <div class="rate-review-wrapper element-book-rate">
                                    <div class="stars info-spacing element-book-rate">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            <i class="fi fi-@(i <= roundedAverage ? "ss" : "rr")-bone star-rating-secondary element-book-rate"
                                                id="star-@(i)"></i>
                                        }
                                    </div>

                                    <h6 class="rate-value rr-spacing element-book-rate avg-rating" id="avg-rating">
                                        @averageRating.ToString("0.0")
                                    </h6>

                                    <p class="element-book-rate">
                                        out of 5
                                    </p>
                                    <div class="reviews-wrapper element-book-rate">
                                        <p class="ebr-styling rr-spacing element-book-rate">•</p>
                                        <p class="ebr-styling reviews-value rr-spacing element-book-rate review-value"
                                            id="review-value">@(Model.Reviews.Count)</p>
                                        <p class=" ebr-styling element-book-rate">barks</p>
                                    </div>


                                </div>
                                <hr />
                            </div>
                            <div class="review-item-container">
                                @if (Model.Reviews != null && Model.Reviews.Any())
                                {
                                    foreach (var review in Model.Reviews)
                                    {
                                        <div class="review-item">
                                            <div class="name-rating-container">
                                                <h6 class="review-name"><strong>Barked by:</strong> @review.ReviewedBy</h6>
                                                <p class="review-rate"><strong></strong> @review.Rating</p>
                                            </div>
                                            <p class="reviewed-on">@review.ReviewedOn</p>
                                            <p class="review-description">@review.Description</p>

                                        </div>
                                    }
                                }
                                else
                                {
                                    <p class="no-data-text">No barks available for this book.</p>
                                }
                            </div>
                        </div>

                        <hr />

                        <div class="spacing">
                            <p>s</p>
                        </div>


                        <h2 class="section-title">Suggested For You</h2>
                        <hr />

                        @if (Model.AllBooks != null && Model.AllBooks.Any())
                        {
                            <div class="book-container">
                                @foreach (var book in Model.AllBooks.Take(4))
                                {
                                    <div class="book">
                                        <a href="@Url.Action("ViewBook", "Home", new { id = book.Id })">
                                            <img src="@Url.Content(book.Image)" alt="@book.Name" class="book-images" />
                                        </a>
                                        <p class="book-title">@book.Name</p>

                                    </div>
                                }

                            </div>

                            <div class="see-more-container"> <button id="seeMoreButton" class="see-more-button">See
                                    More</button></div>
                        }
                        else
                        {
                            <p>No books available for suggestions.</p>
                        }




                    </div>

                </div>
            </div>
        </div>
    </div>
</section>


<!-- Your HTML and Razor code here -->

<script>
    // Global rating variable
    var currentRating = 0;

    document.addEventListener("DOMContentLoaded", function () {
        // Initialize stars event listeners
        initializeStarRating();

        // Event listener for the Create button
        document.querySelector(".textarea-btn-container button").addEventListener("click", function (event) {
            event.preventDefault(); // Prevent the default form submit action

        });
    });

    function initializeStarRating() {
        const stars = document.querySelectorAll('.star-btn');
        stars.forEach((star, index) => {
            star.addEventListener('mouseover', function () {
                highlightStars(index + 1);
            });
            star.addEventListener('mouseout', function () {
                highlightStars(currentRating);
            });
        });
    }

    window.setRating = function (rating) {
        currentRating = rating;
        highlightStars(rating);
    }

    function highlightStars(rating) {
        for (let i = 1; i <= 5; i++) {
            let star = document.getElementById('star' + i);
            star.className = i <= rating ? 'fi fi-ss-bone star-rating-image' : 'fi fi-rr-bone star-rating-image';
        }
    }

    function submitReview() {
        var bookId = document.querySelector('.skooby-section.skooby-viewbook').getAttribute('data-book-id');
        var name = document.querySelector("input[placeholder='Your Name']").value;
        var email = document.querySelector("input[placeholder='Your Email']").value;
        var comment = document.querySelector(".review-textarea").value;

        var reviewData = {
            Rating: currentRating,
            ReviewedBy: name,
            Email: email,
            Description: comment,
            BookId: bookId
        };

        console.log("Submitting review:", reviewData); // Log the review data for debugging

        fetch('/Home/AddReview', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(reviewData),
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                console.log('Success:', data);
                alert('Review submitted successfully!');
            })
            .catch((error) => {
                console.error('Error:', error);
                alert('Error submitting review');
            });
    }
</script>
