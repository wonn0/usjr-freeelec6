@model IEnumerable<ASI.Basecode.Services.Models.BookReviewViewModel>

@{
    ViewBag.ShowSideBar = true;
    ViewData["Title"] = "Reviews Management";
}

@section styles {
    <link rel="stylesheet" href="~/css/pagination.css" />

}
<style>
    .review-content {
        max-width: 100px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .pagination-container {
        padding-top: 41px;
        padding-bottom: 40px !important;
        width: 100%;
        margin: 0;
        text-align: center; /* Center the contents horizontally */
        display: flex; /* Enable flex container */
        justify-content: center; /* Center the contents horizontally within the flex container */
        align-items: center; /* Center the contents vertically within the flex container */
    }

    .page-link {
        padding: 0 !important
    }
    .table tbody tr:nth-child(odd) {
        background-color: #f3f3f3;
    }

    .table tbody tr:nth-child(even) {
        background-color: #fff;
    }
</style>

<h2 class="table-title">Review Management</h2>

<div class="table-container"> 
    <div class="container table-tools"> 
        <div class="row"> 
            <div class="col col-left">
                <div class="search-container">
                    <form class="search-container d-flex" asp-action="Index" method="get">
                        <input type="text" name="searchString" class=" me-2 search-input form-control"
                            placeholder="Search Reviews" />
                        <button class="btn btn-outline-success search-button" type="submit">Search</button> 
                    </form>
                </div>
            </div>
            <div class="col col-right">
                <a href="@Url.Action("Create", "Reviews")" class="btn btn-skooby btn-primary">Add New Review</a>

            </div>
        </div>

    </div>
     
        <table class="table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Reviewed By</th>
                    <th>Email</th>
                    <th>Book</th>
                    <th>Book ID</th>
                    <th>Rating</th>
                    <th>Reviewed On</th>
                    <th>Content</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var review in Model)
                {
                    <tr>
                        <td>@review.Id</td>
                        <td>@review.ReviewedBy</td>
                        <td>@review.Email</td>
                        <td>@review.BookName</td>
                        <td>@review.BookId</td>
                        <td>@review.Rating</td>
                        <td>@review.ReviewedOn</td>
                        <td class="review-content">@review.Description</td>
                        <td class="action-buttons">
                        <a href="@Url.Action("Edit", "Reviews", new { id = review.Id })" class="btn action-padding btn-success">Edit</a>
                            <button data-url="@Url.Action("Delete", "Reviews", new { id = review.Id })" type="button"
                                class="btn action-padding btn-danger">
                                Delete
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table> 
    @if (ViewBag.TotalPages > 1)
    {
        <div class="pagination-container">
            <!-- Pagination -->
            <div class="pagination">
                @if (ViewBag.CurrentPage > 5)
                {
                    int previousViewLastPage = ((ViewBag.CurrentPage - 1) / 5) * 5;

                    <a href="@Url.Action("Index", "Review", new { pageNo = previousViewLastPage })" class="prev-next">&lt;</a>
                }

                @{
                    int startPage = ((ViewBag.CurrentPage - 1) / 5) * 5 + 1;
                    int endPage = Math.Min(startPage + 4, ViewBag.TotalPages);
                }

                @for (int i = startPage; i <= endPage; i++)
                {
                    if (i == ViewBag.CurrentPage)
                    {
                        <span class="current-page">@i</span>
                    }
                    else
                    {
                        <a href="@Url.Action("Index", "Review", new { pageNo = i })" class="page-link">@i</a>
                    }
                }
                @if (ViewBag.CurrentPage <= (ViewBag.TotalPages - (ViewBag.TotalPages % 5)) && ViewBag.TotalPages > 5)
                {
                    <span>...</span>
                }

                @if (ViewBag.CurrentPage <= (ViewBag.TotalPages - (ViewBag.TotalPages % 5)) && ViewBag.TotalPages > 5)
                {

                    int nextViewFirstPage = ViewBag.CurrentPage < 6 ? 6 : ((ViewBag.CurrentPage - 1) / 5) * 5 + 6;

                    <a href="@Url.Action("Index", "Review", new { pageNo = nextViewFirstPage })" class="prev-next">&gt;</a>
                }
            </div>
        </div>
    }
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $(".btn-danger").click(function () {
            var url = $(this).data("url");
            if (confirm("Are you sure you want to delete this review?")) {
                $.post(url, function (data) {
                    location.reload();
                }).fail(function () {
                    alert('Unable to delete.');
                });
            }
        });
    });
</script>
