@model IEnumerable<ASI.Basecode.Services.Models.AuthorViewModel>

@{
    ViewBag.ShowSideBar = true;
    ViewData["Title"] = "Authors Management";
}

@section styles {
    <link rel="stylesheet" href="~/css/style.css" />
    <link rel="stylesheet" href="~/css/pagination.css" />
}


<style>
    .pagination-container {
        padding-top: 41px;
        padding-bottom: 40px !important;
        width: 100%;
        margin: 0;
        text-align: center; /* Center the contents horizontally */
        display: flex; /* Enable flex container */
        justify-content: center; /* Center the contents horizontally within the flex container */
        align-items: center; /* Center the contents vertically within the flex container */
    }

    .page-link {
        padding: 0 !important
    }
    .table tbody tr:nth-child(odd) {
        background-color: #f3f3f3;
    }

    .table tbody tr:nth-child(even) {
        background-color: #fff;
    }
</style>

<h2 class="table-title">Authors Management</h2>

<div class="table-container">
    <div class="container table-tools">

        <div class="row">

            <div class="col col-left">
                <div class="search-container">
                    <form class="search-container d-flex" role="search" method="get"
                        action="@Url.Action("Index", "Author")">
                        <input class="form-control me-2 search-input" type="search" placeholder="Search Authors"
                            aria-label="Search" name="searchQuery">
                        <button class="btn btn-outline-success search-button" type="submit">Search</button>
                    </form>

                </div>
            </div>
            <div class="col col-right">
                <a href="@Url.Action("Create", "Author")" class="btn btn-skooby btn-primary">Add New Author</a>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <table class="table">
                <thead>
                    <tr>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th>Actions</th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var author in Model)
                    {
                        <tr>
                            <td>@author.FirstName</td>
                            <td>@author.LastName</td>
                            <td>

                                <a href="@Url.Action("Edit", "Author", new { id = author.Id })"
                                    class="btn btn-success btn-primary">Edit</a>
                                <form action="@Url.Action("Delete", "Author")" method="post" style="display: inline;">
                                    <input type="hidden" name="id" value="@author.Id" />
                                    <input type="submit" value="Delete" class="btn btn-danger" />
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    @if (ViewBag.TotalPages > 1)
    {
        <div class="pagination-container">
            <!-- Pagination -->
            <div class="pagination">
                @if (ViewBag.CurrentPage > 5)
                {
                    int previousViewLastPage = ((ViewBag.CurrentPage - 1) / 5) * 5;

                    <a href="@Url.Action("Index", "Author", new { pageNo = previousViewLastPage })" class="prev-next">&lt;</a>
                }

                @{
                    int startPage = ((ViewBag.CurrentPage - 1) / 5) * 5 + 1;
                    int endPage = Math.Min(startPage + 4, ViewBag.TotalPages);
                }

                @for (int i = startPage; i <= endPage; i++)
                {
                    if (i == ViewBag.CurrentPage)
                    {
                        <span class="current-page">@i</span>
                    }
                    else
                    {
                        <a href="@Url.Action("Index", "Author", new { pageNo = i })" class="page-link">@i</a>
                    }
                }
                @if (ViewBag.CurrentPage <= (ViewBag.TotalPages - (ViewBag.TotalPages % 5)) && ViewBag.TotalPages > 5)
                {
                    <span>...</span>
                }

                @if (ViewBag.CurrentPage <= (ViewBag.TotalPages - (ViewBag.TotalPages % 5)) && ViewBag.TotalPages > 5)
                {

                    int nextViewFirstPage = ViewBag.CurrentPage < 6 ? 6 : ((ViewBag.CurrentPage - 1) / 5) * 5 + 6;

                    <a href="@Url.Action("Index", "Author", new { pageNo = nextViewFirstPage })" class="prev-next">&gt;</a>
                }
            </div>
        </div>
    }
</div>
