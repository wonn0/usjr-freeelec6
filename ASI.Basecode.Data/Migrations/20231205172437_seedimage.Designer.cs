// <auto-generated />
using System;
using ASI.Basecode.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASI.Basecode.Data.Migrations
{
    [DbContext(typeof(AsiBasecodeDBContext))]
    [Migration("20231205172437_seedimage")]
    partial class seedimage
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ASI.Basecode.Data.Models.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ExpiresUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IssuedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("ASI.Basecode.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Data.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Jane",
                            LastName = "Austen"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "George",
                            LastName = "Orwell"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Haruki",
                            LastName = "Murakami"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Toni",
                            LastName = "Morrison"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Leo",
                            LastName = "Tolstoy"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Gabriel García",
                            LastName = "Márquez"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "J.K.",
                            LastName = "Rowling"
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Charles",
                            LastName = "Dickens"
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "Chimamanda Ngozi",
                            LastName = "Adichie"
                        },
                        new
                        {
                            Id = 10,
                            FirstName = "Ernest",
                            LastName = "Hemingway"
                        },
                        new
                        {
                            Id = 11,
                            FirstName = "Fyodor",
                            LastName = "Dostoevsky"
                        },
                        new
                        {
                            Id = 12,
                            FirstName = "Isabel",
                            LastName = "Allende"
                        },
                        new
                        {
                            Id = 13,
                            FirstName = "Mark",
                            LastName = "Twain"
                        },
                        new
                        {
                            Id = 14,
                            FirstName = "Virginia",
                            LastName = "Woolf"
                        },
                        new
                        {
                            Id = 15,
                            FirstName = "James",
                            LastName = "Baldwin"
                        },
                        new
                        {
                            Id = 16,
                            FirstName = "Agatha",
                            LastName = "Christie"
                        },
                        new
                        {
                            Id = 17,
                            FirstName = "J.R.R.",
                            LastName = "Tolkien"
                        },
                        new
                        {
                            Id = 18,
                            FirstName = "Margaret",
                            LastName = "Atwood"
                        },
                        new
                        {
                            Id = 19,
                            FirstName = "Kazuo",
                            LastName = "Ishiguro"
                        },
                        new
                        {
                            Id = 20,
                            FirstName = "Paulo",
                            LastName = "Coelho"
                        },
                        new
                        {
                            Id = 21,
                            FirstName = "Mary",
                            LastName = "Shelley"
                        },
                        new
                        {
                            Id = 22,
                            FirstName = "Salman",
                            LastName = "Rushdie"
                        },
                        new
                        {
                            Id = 23,
                            FirstName = "H.P.",
                            LastName = "Lovecraft"
                        },
                        new
                        {
                            Id = 24,
                            FirstName = "Emily",
                            LastName = "Brontë"
                        },
                        new
                        {
                            Id = 25,
                            FirstName = "Edgar Allan",
                            LastName = "Poe"
                        },
                        new
                        {
                            Id = 26,
                            FirstName = "Langston",
                            LastName = "Hughes"
                        },
                        new
                        {
                            Id = 27,
                            FirstName = "Khaled",
                            LastName = "Hosseini"
                        },
                        new
                        {
                            Id = 28,
                            FirstName = "Oscar",
                            LastName = "Wilde"
                        },
                        new
                        {
                            Id = 29,
                            FirstName = "Stephen",
                            LastName = "King"
                        },
                        new
                        {
                            Id = 30,
                            FirstName = "Maya",
                            LastName = "Angelou"
                        },
                        new
                        {
                            Id = 31,
                            FirstName = "Roald",
                            LastName = "Dahl"
                        },
                        new
                        {
                            Id = 32,
                            FirstName = "Dan",
                            LastName = "Brown"
                        },
                        new
                        {
                            Id = 33,
                            FirstName = "Neil",
                            LastName = "Gaiman"
                        },
                        new
                        {
                            Id = 34,
                            FirstName = "Sylvia",
                            LastName = "Plath"
                        },
                        new
                        {
                            Id = 35,
                            FirstName = "Ian",
                            LastName = "McEwan"
                        },
                        new
                        {
                            Id = 36,
                            FirstName = "Orhan",
                            LastName = "Pamuk"
                        },
                        new
                        {
                            Id = 37,
                            FirstName = "Zadie",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 38,
                            FirstName = "Alice",
                            LastName = "Walker"
                        },
                        new
                        {
                            Id = 39,
                            FirstName = "Kurt",
                            LastName = "Vonnegut"
                        },
                        new
                        {
                            Id = 40,
                            FirstName = "Louise",
                            LastName = "Erdrich"
                        },
                        new
                        {
                            Id = 41,
                            FirstName = "Cormac",
                            LastName = "McCarthy"
                        },
                        new
                        {
                            Id = 42,
                            FirstName = "Philip K.",
                            LastName = "Dick"
                        },
                        new
                        {
                            Id = 43,
                            FirstName = "John",
                            LastName = "Steinbeck"
                        },
                        new
                        {
                            Id = 44,
                            FirstName = "Herman",
                            LastName = "Melville"
                        },
                        new
                        {
                            Id = 45,
                            FirstName = "Charles",
                            LastName = "Bukowski"
                        },
                        new
                        {
                            Id = 46,
                            FirstName = "William",
                            LastName = "Faulkner"
                        },
                        new
                        {
                            Id = 47,
                            FirstName = "Ayn",
                            LastName = "Rand"
                        },
                        new
                        {
                            Id = 48,
                            FirstName = "Gustave",
                            LastName = "Flaubert"
                        },
                        new
                        {
                            Id = 49,
                            FirstName = "Ken",
                            LastName = "Follett"
                        },
                        new
                        {
                            Id = 50,
                            FirstName = "Arthur Conan",
                            LastName = "Doyle"
                        });
                });

            modelBuilder.Entity("Data.Models.AuthorBook", b =>
                {
                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.HasKey("AuthorId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("AuthorBook");

                    b.HasData(
                        new
                        {
                            AuthorId = 17,
                            BookId = 1
                        },
                        new
                        {
                            AuthorId = 46,
                            BookId = 2
                        },
                        new
                        {
                            AuthorId = 16,
                            BookId = 2
                        },
                        new
                        {
                            AuthorId = 1,
                            BookId = 2
                        },
                        new
                        {
                            AuthorId = 46,
                            BookId = 3
                        },
                        new
                        {
                            AuthorId = 16,
                            BookId = 3
                        },
                        new
                        {
                            AuthorId = 50,
                            BookId = 4
                        },
                        new
                        {
                            AuthorId = 7,
                            BookId = 5
                        },
                        new
                        {
                            AuthorId = 36,
                            BookId = 6
                        },
                        new
                        {
                            AuthorId = 18,
                            BookId = 6
                        },
                        new
                        {
                            AuthorId = 22,
                            BookId = 7
                        },
                        new
                        {
                            AuthorId = 10,
                            BookId = 7
                        },
                        new
                        {
                            AuthorId = 5,
                            BookId = 7
                        },
                        new
                        {
                            AuthorId = 44,
                            BookId = 8
                        },
                        new
                        {
                            AuthorId = 7,
                            BookId = 8
                        },
                        new
                        {
                            AuthorId = 12,
                            BookId = 9
                        },
                        new
                        {
                            AuthorId = 38,
                            BookId = 9
                        },
                        new
                        {
                            AuthorId = 38,
                            BookId = 10
                        },
                        new
                        {
                            AuthorId = 42,
                            BookId = 10
                        },
                        new
                        {
                            AuthorId = 7,
                            BookId = 11
                        },
                        new
                        {
                            AuthorId = 19,
                            BookId = 12
                        },
                        new
                        {
                            AuthorId = 23,
                            BookId = 12
                        },
                        new
                        {
                            AuthorId = 12,
                            BookId = 13
                        },
                        new
                        {
                            AuthorId = 43,
                            BookId = 13
                        },
                        new
                        {
                            AuthorId = 40,
                            BookId = 14
                        },
                        new
                        {
                            AuthorId = 13,
                            BookId = 15
                        },
                        new
                        {
                            AuthorId = 50,
                            BookId = 15
                        },
                        new
                        {
                            AuthorId = 37,
                            BookId = 16
                        },
                        new
                        {
                            AuthorId = 42,
                            BookId = 16
                        },
                        new
                        {
                            AuthorId = 33,
                            BookId = 16
                        },
                        new
                        {
                            AuthorId = 46,
                            BookId = 17
                        },
                        new
                        {
                            AuthorId = 4,
                            BookId = 17
                        },
                        new
                        {
                            AuthorId = 17,
                            BookId = 18
                        },
                        new
                        {
                            AuthorId = 22,
                            BookId = 19
                        },
                        new
                        {
                            AuthorId = 15,
                            BookId = 20
                        },
                        new
                        {
                            AuthorId = 49,
                            BookId = 20
                        },
                        new
                        {
                            AuthorId = 39,
                            BookId = 21
                        },
                        new
                        {
                            AuthorId = 11,
                            BookId = 21
                        },
                        new
                        {
                            AuthorId = 8,
                            BookId = 21
                        },
                        new
                        {
                            AuthorId = 6,
                            BookId = 22
                        },
                        new
                        {
                            AuthorId = 31,
                            BookId = 22
                        },
                        new
                        {
                            AuthorId = 15,
                            BookId = 23
                        },
                        new
                        {
                            AuthorId = 25,
                            BookId = 23
                        },
                        new
                        {
                            AuthorId = 1,
                            BookId = 24
                        },
                        new
                        {
                            AuthorId = 23,
                            BookId = 24
                        },
                        new
                        {
                            AuthorId = 32,
                            BookId = 25
                        },
                        new
                        {
                            AuthorId = 20,
                            BookId = 25
                        },
                        new
                        {
                            AuthorId = 37,
                            BookId = 25
                        },
                        new
                        {
                            AuthorId = 1,
                            BookId = 26
                        },
                        new
                        {
                            AuthorId = 50,
                            BookId = 27
                        },
                        new
                        {
                            AuthorId = 47,
                            BookId = 27
                        },
                        new
                        {
                            AuthorId = 23,
                            BookId = 27
                        },
                        new
                        {
                            AuthorId = 4,
                            BookId = 28
                        },
                        new
                        {
                            AuthorId = 33,
                            BookId = 28
                        },
                        new
                        {
                            AuthorId = 49,
                            BookId = 28
                        },
                        new
                        {
                            AuthorId = 33,
                            BookId = 29
                        },
                        new
                        {
                            AuthorId = 42,
                            BookId = 29
                        },
                        new
                        {
                            AuthorId = 28,
                            BookId = 29
                        },
                        new
                        {
                            AuthorId = 31,
                            BookId = 30
                        },
                        new
                        {
                            AuthorId = 30,
                            BookId = 30
                        },
                        new
                        {
                            AuthorId = 1,
                            BookId = 31
                        },
                        new
                        {
                            AuthorId = 19,
                            BookId = 31
                        },
                        new
                        {
                            AuthorId = 36,
                            BookId = 32
                        },
                        new
                        {
                            AuthorId = 12,
                            BookId = 32
                        },
                        new
                        {
                            AuthorId = 7,
                            BookId = 33
                        },
                        new
                        {
                            AuthorId = 37,
                            BookId = 33
                        },
                        new
                        {
                            AuthorId = 26,
                            BookId = 33
                        },
                        new
                        {
                            AuthorId = 17,
                            BookId = 34
                        },
                        new
                        {
                            AuthorId = 4,
                            BookId = 35
                        },
                        new
                        {
                            AuthorId = 43,
                            BookId = 35
                        },
                        new
                        {
                            AuthorId = 10,
                            BookId = 35
                        },
                        new
                        {
                            AuthorId = 20,
                            BookId = 36
                        },
                        new
                        {
                            AuthorId = 49,
                            BookId = 37
                        },
                        new
                        {
                            AuthorId = 20,
                            BookId = 37
                        },
                        new
                        {
                            AuthorId = 30,
                            BookId = 37
                        },
                        new
                        {
                            AuthorId = 25,
                            BookId = 38
                        },
                        new
                        {
                            AuthorId = 19,
                            BookId = 39
                        },
                        new
                        {
                            AuthorId = 37,
                            BookId = 40
                        },
                        new
                        {
                            AuthorId = 9,
                            BookId = 40
                        },
                        new
                        {
                            AuthorId = 45,
                            BookId = 40
                        },
                        new
                        {
                            AuthorId = 14,
                            BookId = 41
                        },
                        new
                        {
                            AuthorId = 12,
                            BookId = 41
                        },
                        new
                        {
                            AuthorId = 48,
                            BookId = 41
                        },
                        new
                        {
                            AuthorId = 50,
                            BookId = 42
                        },
                        new
                        {
                            AuthorId = 35,
                            BookId = 42
                        },
                        new
                        {
                            AuthorId = 23,
                            BookId = 43
                        },
                        new
                        {
                            AuthorId = 47,
                            BookId = 44
                        },
                        new
                        {
                            AuthorId = 48,
                            BookId = 45
                        },
                        new
                        {
                            AuthorId = 24,
                            BookId = 45
                        },
                        new
                        {
                            AuthorId = 25,
                            BookId = 45
                        },
                        new
                        {
                            AuthorId = 47,
                            BookId = 46
                        },
                        new
                        {
                            AuthorId = 34,
                            BookId = 47
                        },
                        new
                        {
                            AuthorId = 43,
                            BookId = 47
                        },
                        new
                        {
                            AuthorId = 7,
                            BookId = 48
                        },
                        new
                        {
                            AuthorId = 12,
                            BookId = 48
                        },
                        new
                        {
                            AuthorId = 27,
                            BookId = 48
                        },
                        new
                        {
                            AuthorId = 40,
                            BookId = 49
                        },
                        new
                        {
                            AuthorId = 22,
                            BookId = 49
                        },
                        new
                        {
                            AuthorId = 11,
                            BookId = 49
                        },
                        new
                        {
                            AuthorId = 50,
                            BookId = 50
                        });
                });

            modelBuilder.Entity("Data.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PageCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublishedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(3500),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-9560-4274",
                            Image = "https://d1csarkz8obe9u.cloudfront.net/posterpreviews/contemporary-fiction-night-time-book-cover-design-template-1be47835c3058eb42211574e0c4ed8bf_screen.jpg?ts=1698210220",
                            Language = "English",
                            Name = "The Oracle's Last Prophecy",
                            PageCount = 204,
                            PublishedOn = new DateTime(2014, 12, 12, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(3485),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(3501)
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(3691),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-4772-7718",
                            Image = "https://1stwebdesigner.com/wp-content/uploads/2011/05/the-great-gatsby.jpg",
                            Language = "English",
                            Name = "Voices from the Hollow Mountains",
                            PageCount = 264,
                            PublishedOn = new DateTime(2021, 9, 11, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(3688),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(3692)
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(3887),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-8282-9716",
                            Image = "https://i0.wp.com/allaboutbookcovers.com/wp-content/uploads/2022/06/CourtOfThorns-copy.jpg?fit=1350%2C2025&ssl=1",
                            Language = "English",
                            Name = "Dance of the Fireflies",
                            PageCount = 182,
                            PublishedOn = new DateTime(2020, 3, 26, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(3885),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(3888)
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(3983),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-1432-2531",
                            Image = "https://1stwebdesigner.com/wp-content/uploads/2011/05/the-great-gatsby.jpg",
                            Language = "English",
                            Name = "In the Heart of the Storm",
                            PageCount = 335,
                            PublishedOn = new DateTime(2020, 2, 24, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(3981),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(3984)
                        },
                        new
                        {
                            Id = 5,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(4058),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-4169-6240",
                            Image = "https://d1csarkz8obe9u.cloudfront.net/posterpreviews/contemporary-fiction-night-time-book-cover-design-template-1be47835c3058eb42211574e0c4ed8bf_screen.jpg?ts=1698210220",
                            Language = "English",
                            Name = "Dance of the Fireflies",
                            PageCount = 460,
                            PublishedOn = new DateTime(2014, 12, 27, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(4055),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(4058)
                        },
                        new
                        {
                            Id = 6,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(4246),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-1057-5939",
                            Image = "https://1stwebdesigner.com/wp-content/uploads/2011/05/the-great-gatsby.jpg",
                            Language = "English",
                            Name = "The Labyrinth of Lost Souls",
                            PageCount = 470,
                            PublishedOn = new DateTime(2016, 5, 17, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(4243),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(4247)
                        },
                        new
                        {
                            Id = 7,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(4361),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-6649-5781",
                            Image = "https://www.adobe.com/express/create/cover/media_1316972d23c5f2032e101572da69ae4aec3259fed.jpeg?width=400&format=jpeg&optimize=medium",
                            Language = "English",
                            Name = "The Last Voyage of the Star Sailor",
                            PageCount = 280,
                            PublishedOn = new DateTime(2014, 9, 24, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(4360),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(4362)
                        },
                        new
                        {
                            Id = 8,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(4485),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-8107-8427",
                            Image = "https://d1csarkz8obe9u.cloudfront.net/posterpreviews/contemporary-fiction-night-time-book-cover-design-template-1be47835c3058eb42211574e0c4ed8bf_screen.jpg?ts=1698210220",
                            Language = "English",
                            Name = "The Oracle's Last Prophecy",
                            PageCount = 317,
                            PublishedOn = new DateTime(2015, 10, 23, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(4483),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(4486)
                        },
                        new
                        {
                            Id = 9,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(4688),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-5429-3412",
                            Image = "https://1stwebdesigner.com/wp-content/uploads/2011/05/the-great-gatsby.jpg",
                            Language = "English",
                            Name = "Echoes in the Starless Sky",
                            PageCount = 221,
                            PublishedOn = new DateTime(2021, 6, 26, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(4686),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(4689)
                        },
                        new
                        {
                            Id = 10,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(4796),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-4080-9738",
                            Image = "https://i0.wp.com/allaboutbookcovers.com/wp-content/uploads/2022/06/CourtOfThorns-copy.jpg?fit=1350%2C2025&ssl=1",
                            Language = "English",
                            Name = "Twilight of the Celestial Court",
                            PageCount = 271,
                            PublishedOn = new DateTime(2021, 11, 5, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(4794),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(4797)
                        },
                        new
                        {
                            Id = 11,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(4901),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-3497-7461",
                            Image = "https://www.adobe.com/express/create/cover/media_1316972d23c5f2032e101572da69ae4aec3259fed.jpeg?width=400&format=jpeg&optimize=medium",
                            Language = "English",
                            Name = "The Architect's Legacy",
                            PageCount = 317,
                            PublishedOn = new DateTime(2018, 1, 31, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(4899),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(4902)
                        },
                        new
                        {
                            Id = 12,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(5132),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-6774-6418",
                            Image = "https://www.adobe.com/express/create/cover/media_1316972d23c5f2032e101572da69ae4aec3259fed.jpeg?width=400&format=jpeg&optimize=medium",
                            Language = "English",
                            Name = "Dance of the Fireflies",
                            PageCount = 145,
                            PublishedOn = new DateTime(2015, 11, 30, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(5130),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(5133)
                        },
                        new
                        {
                            Id = 13,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(5247),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7389-9676",
                            Image = "https://compote.slate.com/images/4262aedd-78f0-4669-a1b9-c7d08c67897a.jpeg?crop=693%2C1040%2Cx0%2Cy0",
                            Language = "English",
                            Name = "The Magician's Reflection",
                            PageCount = 210,
                            PublishedOn = new DateTime(2017, 5, 24, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(5245),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(5248)
                        },
                        new
                        {
                            Id = 14,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(5426),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-4498-1250",
                            Image = "https://www.adobe.com/express/create/cover/media_1316972d23c5f2032e101572da69ae4aec3259fed.jpeg?width=400&format=jpeg&optimize=medium",
                            Language = "English",
                            Name = "Sands of the Forgotten Empire",
                            PageCount = 496,
                            PublishedOn = new DateTime(2014, 9, 8, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(5424),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(5426)
                        },
                        new
                        {
                            Id = 15,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(5508),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-3100-3622",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTP-NlVbe_m7VER_lfAVbKpyo2Shp9Wv6pLMg&usqp=CAU",
                            Language = "English",
                            Name = "The Oracle's Last Prophecy",
                            PageCount = 460,
                            PublishedOn = new DateTime(2016, 9, 8, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(5506),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(5509)
                        },
                        new
                        {
                            Id = 16,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(5637),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-9575-2587",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTP-NlVbe_m7VER_lfAVbKpyo2Shp9Wv6pLMg&usqp=CAU",
                            Language = "English",
                            Name = "The Oracle's Last Prophecy",
                            PageCount = 154,
                            PublishedOn = new DateTime(2018, 2, 28, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(5634),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(5638)
                        },
                        new
                        {
                            Id = 17,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(5820),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-2741-5943",
                            Image = "https://www.adobe.com/express/create/cover/media_1316972d23c5f2032e101572da69ae4aec3259fed.jpeg?width=400&format=jpeg&optimize=medium",
                            Language = "English",
                            Name = "Veil of the Northern Lights",
                            PageCount = 486,
                            PublishedOn = new DateTime(2017, 5, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(5818),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(5821)
                        },
                        new
                        {
                            Id = 18,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(5920),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-8970-5603",
                            Image = "https://compote.slate.com/images/4262aedd-78f0-4669-a1b9-c7d08c67897a.jpeg?crop=693%2C1040%2Cx0%2Cy0",
                            Language = "English",
                            Name = "Whispers from the Other Side",
                            PageCount = 109,
                            PublishedOn = new DateTime(2022, 11, 12, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(5918),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(5921)
                        },
                        new
                        {
                            Id = 19,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(5989),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-9357-8745",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRSDQnigiVI5kU-UYO_Ourb8H5uaXUP-FYYZ7SFSqMSPTb3ZcCxg2rBwRqcINTKAp7uVNQ&usqp=CAU",
                            Language = "English",
                            Name = "The Phoenix's Requiem",
                            PageCount = 237,
                            PublishedOn = new DateTime(2017, 10, 26, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(5986),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(5989)
                        },
                        new
                        {
                            Id = 20,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(6167),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-5248-6786",
                            Image = "https://1stwebdesigner.com/wp-content/uploads/2011/05/the-great-gatsby.jpg",
                            Language = "English",
                            Name = "The Architect's Legacy",
                            PageCount = 230,
                            PublishedOn = new DateTime(2018, 8, 2, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(6165),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(6168)
                        },
                        new
                        {
                            Id = 21,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(6269),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-9378-3231",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRSDQnigiVI5kU-UYO_Ourb8H5uaXUP-FYYZ7SFSqMSPTb3ZcCxg2rBwRqcINTKAp7uVNQ&usqp=CAU",
                            Language = "English",
                            Name = "The Silver Key of Dreams",
                            PageCount = 234,
                            PublishedOn = new DateTime(2016, 1, 5, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(6268),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(6270)
                        },
                        new
                        {
                            Id = 22,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(6402),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-1500-9177",
                            Image = "https://compote.slate.com/images/4262aedd-78f0-4669-a1b9-c7d08c67897a.jpeg?crop=693%2C1040%2Cx0%2Cy0",
                            Language = "English",
                            Name = "The Dragon's Heir",
                            PageCount = 142,
                            PublishedOn = new DateTime(2014, 10, 28, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(6399),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(6403)
                        },
                        new
                        {
                            Id = 23,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(6578),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-3367-7965",
                            Image = "https://compote.slate.com/images/4262aedd-78f0-4669-a1b9-c7d08c67897a.jpeg?crop=693%2C1040%2Cx0%2Cy0",
                            Language = "English",
                            Name = "The Oracle's Last Prophecy",
                            PageCount = 190,
                            PublishedOn = new DateTime(2018, 1, 24, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(6576),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(6579)
                        },
                        new
                        {
                            Id = 24,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(6652),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-1011-1487",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRSDQnigiVI5kU-UYO_Ourb8H5uaXUP-FYYZ7SFSqMSPTb3ZcCxg2rBwRqcINTKAp7uVNQ&usqp=CAU",
                            Language = "English",
                            Name = "The Forgotten Chronicles",
                            PageCount = 403,
                            PublishedOn = new DateTime(2016, 12, 22, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(6649),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(6653)
                        },
                        new
                        {
                            Id = 25,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(6769),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-6400-5778",
                            Image = "https://bukovero.com/wp-content/uploads/2016/07/Harry_Potter_and_the_Cursed_Child_Special_Rehearsal_Edition_Book_Cover.jpg",
                            Language = "English",
                            Name = "Echoes in the Starless Sky",
                            PageCount = 498,
                            PublishedOn = new DateTime(2020, 12, 3, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(6768),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(6770)
                        },
                        new
                        {
                            Id = 26,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(6943),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-6194-3917",
                            Image = "https://www.adobe.com/express/create/cover/media_1316972d23c5f2032e101572da69ae4aec3259fed.jpeg?width=400&format=jpeg&optimize=medium",
                            Language = "English",
                            Name = "Voices from the Hollow Mountains",
                            PageCount = 189,
                            PublishedOn = new DateTime(2020, 5, 11, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(6941),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(6943)
                        },
                        new
                        {
                            Id = 27,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(7013),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7720-5769",
                            Image = "https://d1csarkz8obe9u.cloudfront.net/posterpreviews/contemporary-fiction-night-time-book-cover-design-template-1be47835c3058eb42211574e0c4ed8bf_screen.jpg?ts=1698210220",
                            Language = "English",
                            Name = "The Alchemist's Shadow",
                            PageCount = 388,
                            PublishedOn = new DateTime(2022, 1, 22, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(7011),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(7014)
                        },
                        new
                        {
                            Id = 28,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(7172),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-1244-6631",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSCBozk3sxY9-hx2apV246Aop5hzCKe1Yoe2I_bVICUPiXNu5IXSaeKY0rWJt5qOVEYMRo&usqp=CAU",
                            Language = "English",
                            Name = "The Magician's Reflection",
                            PageCount = 175,
                            PublishedOn = new DateTime(2022, 1, 28, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(7170),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(7173)
                        },
                        new
                        {
                            Id = 29,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(7276),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-4452-3439",
                            Image = "https://d1csarkz8obe9u.cloudfront.net/posterpreviews/contemporary-fiction-night-time-book-cover-design-template-1be47835c3058eb42211574e0c4ed8bf_screen.jpg?ts=1698210220",
                            Language = "English",
                            Name = "The Magician's Reflection",
                            PageCount = 443,
                            PublishedOn = new DateTime(2019, 7, 29, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(7274),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(7277)
                        },
                        new
                        {
                            Id = 30,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(7409),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-2720-3805",
                            Image = "https://www.adobe.com/express/create/cover/media_1316972d23c5f2032e101572da69ae4aec3259fed.jpeg?width=400&format=jpeg&optimize=medium",
                            Language = "English",
                            Name = "The Last Symphony of Autumn",
                            PageCount = 207,
                            PublishedOn = new DateTime(2015, 8, 7, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(7406),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(7410)
                        },
                        new
                        {
                            Id = 31,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(7597),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7582-1864",
                            Image = "https://1stwebdesigner.com/wp-content/uploads/2011/05/the-great-gatsby.jpg",
                            Language = "English",
                            Name = "The Architect's Legacy",
                            PageCount = 298,
                            PublishedOn = new DateTime(2018, 7, 12, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(7595),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(7598)
                        },
                        new
                        {
                            Id = 32,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(7700),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-6028-2519",
                            Image = "https://encrypted-tbn0.gstatic.com/images?qcd=tbn:ANd9GcRWlgwga9KKQCQo2tPQ1-vkIEdIFX9Dp7OJwg&usqp=CAU",
                            Language = "English",
                            Name = "Dance of the Fireflies",
                            PageCount = 141,
                            PublishedOn = new DateTime(2020, 5, 16, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(7698),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(7701)
                        },
                        new
                        {
                            Id = 33,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(7800),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-3077-5626",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSCBozk3sxY9-hx2apV246Aop5hzCKe1Yoe2I_bVICUPiXNu5IXSaeKY0rWJt5qOVEYMRo&usqp=CAU",
                            Language = "English",
                            Name = "In the Heart of the Storm",
                            PageCount = 336,
                            PublishedOn = new DateTime(2014, 6, 25, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(7798),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(7801)
                        },
                        new
                        {
                            Id = 34,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(7991),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-8420-8691",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSCBozk3sxY9-hx2apV246Aop5hzCKe1Yoe2I_bVICUPiXNu5IXSaeKY0rWJt5qOVEYMRo&usqp=CAU",
                            Language = "English",
                            Name = "Shadows over Valoria",
                            PageCount = 296,
                            PublishedOn = new DateTime(2014, 5, 27, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(7989),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(7992)
                        },
                        new
                        {
                            Id = 35,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(8060),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-8428-8588",
                            Image = "https://compote.slate.com/images/4262aedd-78f0-4669-a1b9-c7d08c67897a.jpeg?crop=693%2C1040%2Cx0%2Cy0",
                            Language = "English",
                            Name = "Twilight of the Celestial Court",
                            PageCount = 259,
                            PublishedOn = new DateTime(2018, 7, 14, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(8058),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(8061)
                        },
                        new
                        {
                            Id = 36,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(8141),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-8799-5694",
                            Image = "https://1stwebdesigner.com/wp-content/uploads/2011/05/the-great-gatsby.jpg",
                            Language = "English",
                            Name = "The Ivory Tower of Secrets",
                            PageCount = 374,
                            PublishedOn = new DateTime(2018, 9, 30, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(8138),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(8142)
                        },
                        new
                        {
                            Id = 37,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(8287),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-4204-4420",
                            Image = "https://encrypted-tbn0.gstatic.com/images?qcd=tbn:ANd9GcRWlgwga9KKQCQo2tPQ1-vkIEdIFX9Dp7OJwg&usqp=CAU",
                            Language = "English",
                            Name = "Beneath the Crimson Moon",
                            PageCount = 427,
                            PublishedOn = new DateTime(2020, 2, 2, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(8285),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(8288)
                        },
                        new
                        {
                            Id = 38,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(8396),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-2365-3184",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTP-NlVbe_m7VER_lfAVbKpyo2Shp9Wv6pLMg&usqp=CAU",
                            Language = "English",
                            Name = "The Emerald Conundrum",
                            PageCount = 125,
                            PublishedOn = new DateTime(2019, 1, 1, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(8394),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(8397)
                        },
                        new
                        {
                            Id = 39,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(8543),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-6648-3086",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSCBozk3sxY9-hx2apV246Aop5hzCKe1Yoe2I_bVICUPiXNu5IXSaeKY0rWJt5qOVEYMRo&usqp=CAU",
                            Language = "English",
                            Name = "The Magician's Reflection",
                            PageCount = 228,
                            PublishedOn = new DateTime(2021, 12, 27, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(8541),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(8544)
                        },
                        new
                        {
                            Id = 40,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(8626),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-8510-9497",
                            Image = "https://i0.wp.com/allaboutbookcovers.com/wp-content/uploads/2022/06/CourtOfThorns-copy.jpg?fit=1350%2C2025&ssl=1",
                            Language = "English",
                            Name = "Secrets of the Jade Labyrinth",
                            PageCount = 139,
                            PublishedOn = new DateTime(2022, 6, 24, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(8624),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(8626)
                        },
                        new
                        {
                            Id = 41,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(8713),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-4325-2137",
                            Image = "https://www.adobe.com/express/create/cover/media_1316972d23c5f2032e101572da69ae4aec3259fed.jpeg?width=400&format=jpeg&optimize=medium",
                            Language = "English",
                            Name = "The Last Voyage of the Star Sailor",
                            PageCount = 228,
                            PublishedOn = new DateTime(2015, 10, 17, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(8711),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(8714)
                        },
                        new
                        {
                            Id = 42,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(8911),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-5653-9034",
                            Image = "https://d1csarkz8obe9u.cloudfront.net/posterpreviews/contemporary-fiction-night-time-book-cover-design-template-1be47835c3058eb42211574e0c4ed8bf_screen.jpg?ts=1698210220",
                            Language = "English",
                            Name = "Voices from the Hollow Mountains",
                            PageCount = 210,
                            PublishedOn = new DateTime(2020, 5, 19, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(8909),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(8912)
                        },
                        new
                        {
                            Id = 43,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(9000),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-2262-7409",
                            Image = "https://bukovero.com/wp-content/uploads/2016/07/Harry_Potter_and_the_Cursed_Child_Special_Rehearsal_Edition_Book_Cover.jpg",
                            Language = "English",
                            Name = "The Painter's Paradox",
                            PageCount = 434,
                            PublishedOn = new DateTime(2017, 1, 12, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(8997),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(9001)
                        },
                        new
                        {
                            Id = 44,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(9076),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-3464-2782",
                            Image = "https://d1csarkz8obe9u.cloudfront.net/posterpreviews/contemporary-fiction-night-time-book-cover-design-template-1be47835c3058eb42211574e0c4ed8bf_screen.jpg?ts=1698210220",
                            Language = "English",
                            Name = "The Rose of the Wastelands",
                            PageCount = 158,
                            PublishedOn = new DateTime(2020, 3, 21, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(9073),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(9077)
                        },
                        new
                        {
                            Id = 45,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(9216),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-2455-9279",
                            Image = "https://i0.wp.com/allaboutbookcovers.com/wp-content/uploads/2022/06/CourtOfThorns-copy.jpg?fit=1350%2C2025&ssl=1",
                            Language = "English",
                            Name = "The Meridian of Fate",
                            PageCount = 331,
                            PublishedOn = new DateTime(2022, 10, 4, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(9214),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(9217)
                        },
                        new
                        {
                            Id = 46,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(9294),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-6858-7720",
                            Image = "https://1stwebdesigner.com/wp-content/uploads/2011/05/the-great-gatsby.jpg",
                            Language = "English",
                            Name = "Beyond the Shadow Realm",
                            PageCount = 297,
                            PublishedOn = new DateTime(2016, 1, 28, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(9293),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(9295)
                        },
                        new
                        {
                            Id = 47,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(9366),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-6202-4670",
                            Image = "https://bukovero.com/wp-content/uploads/2016/07/Harry_Potter_and_the_Cursed_Child_Special_Rehearsal_Edition_Book_Cover.jpg",
                            Language = "English",
                            Name = "The Last Symphony of Autumn",
                            PageCount = 337,
                            PublishedOn = new DateTime(2021, 8, 11, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(9364),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(9367)
                        },
                        new
                        {
                            Id = 48,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(9517),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-2301-7832",
                            Image = "https://encrypted-tbn0.gstatic.com/images?qcd=tbn:ANd9GcRWlgwga9KKQCQo2tPQ1-vkIEdIFX9Dp7OJwg&usqp=CAU",
                            Language = "English",
                            Name = "In the Heart of the Storm",
                            PageCount = 418,
                            PublishedOn = new DateTime(2014, 11, 9, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(9515),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(9518)
                        },
                        new
                        {
                            Id = 49,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(9597),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-4165-7512",
                            Image = "https://compote.slate.com/images/4262aedd-78f0-4669-a1b9-c7d08c67897a.jpeg?crop=693%2C1040%2Cx0%2Cy0",
                            Language = "English",
                            Name = "The Alchemist's Shadow",
                            PageCount = 457,
                            PublishedOn = new DateTime(2018, 9, 28, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(9595),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(9598)
                        },
                        new
                        {
                            Id = 50,
                            Created = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(9706),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-6921-1170",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSCBozk3sxY9-hx2apV246Aop5hzCKe1Yoe2I_bVICUPiXNu5IXSaeKY0rWJt5qOVEYMRo&usqp=CAU",
                            Language = "English",
                            Name = "The Sorceress's Labyrinth",
                            PageCount = 365,
                            PublishedOn = new DateTime(2016, 9, 20, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(9704),
                            Updated = new DateTime(2023, 12, 6, 1, 24, 37, 431, DateTimeKind.Local).AddTicks(9707)
                        });
                });

            modelBuilder.Entity("Data.Models.BookGenre", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.HasKey("BookId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("BookGenre");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            GenreId = 6
                        },
                        new
                        {
                            BookId = 2,
                            GenreId = 45
                        },
                        new
                        {
                            BookId = 2,
                            GenreId = 22
                        },
                        new
                        {
                            BookId = 3,
                            GenreId = 42
                        },
                        new
                        {
                            BookId = 4,
                            GenreId = 50
                        },
                        new
                        {
                            BookId = 5,
                            GenreId = 16
                        },
                        new
                        {
                            BookId = 5,
                            GenreId = 5
                        },
                        new
                        {
                            BookId = 6,
                            GenreId = 34
                        },
                        new
                        {
                            BookId = 6,
                            GenreId = 39
                        },
                        new
                        {
                            BookId = 7,
                            GenreId = 30
                        },
                        new
                        {
                            BookId = 7,
                            GenreId = 39
                        },
                        new
                        {
                            BookId = 8,
                            GenreId = 35
                        },
                        new
                        {
                            BookId = 9,
                            GenreId = 6
                        },
                        new
                        {
                            BookId = 9,
                            GenreId = 39
                        },
                        new
                        {
                            BookId = 10,
                            GenreId = 29
                        },
                        new
                        {
                            BookId = 11,
                            GenreId = 10
                        },
                        new
                        {
                            BookId = 12,
                            GenreId = 3
                        },
                        new
                        {
                            BookId = 12,
                            GenreId = 19
                        },
                        new
                        {
                            BookId = 13,
                            GenreId = 21
                        },
                        new
                        {
                            BookId = 13,
                            GenreId = 19
                        },
                        new
                        {
                            BookId = 14,
                            GenreId = 17
                        },
                        new
                        {
                            BookId = 14,
                            GenreId = 13
                        },
                        new
                        {
                            BookId = 15,
                            GenreId = 13
                        },
                        new
                        {
                            BookId = 15,
                            GenreId = 42
                        },
                        new
                        {
                            BookId = 16,
                            GenreId = 6
                        },
                        new
                        {
                            BookId = 16,
                            GenreId = 34
                        },
                        new
                        {
                            BookId = 17,
                            GenreId = 41
                        },
                        new
                        {
                            BookId = 17,
                            GenreId = 49
                        },
                        new
                        {
                            BookId = 18,
                            GenreId = 26
                        },
                        new
                        {
                            BookId = 19,
                            GenreId = 43
                        },
                        new
                        {
                            BookId = 19,
                            GenreId = 1
                        },
                        new
                        {
                            BookId = 20,
                            GenreId = 29
                        },
                        new
                        {
                            BookId = 21,
                            GenreId = 50
                        },
                        new
                        {
                            BookId = 21,
                            GenreId = 48
                        },
                        new
                        {
                            BookId = 22,
                            GenreId = 28
                        },
                        new
                        {
                            BookId = 23,
                            GenreId = 39
                        },
                        new
                        {
                            BookId = 24,
                            GenreId = 7
                        },
                        new
                        {
                            BookId = 24,
                            GenreId = 16
                        },
                        new
                        {
                            BookId = 25,
                            GenreId = 9
                        },
                        new
                        {
                            BookId = 25,
                            GenreId = 6
                        },
                        new
                        {
                            BookId = 26,
                            GenreId = 22
                        },
                        new
                        {
                            BookId = 27,
                            GenreId = 24
                        },
                        new
                        {
                            BookId = 28,
                            GenreId = 4
                        },
                        new
                        {
                            BookId = 28,
                            GenreId = 2
                        },
                        new
                        {
                            BookId = 29,
                            GenreId = 21
                        },
                        new
                        {
                            BookId = 29,
                            GenreId = 38
                        },
                        new
                        {
                            BookId = 30,
                            GenreId = 40
                        },
                        new
                        {
                            BookId = 31,
                            GenreId = 5
                        },
                        new
                        {
                            BookId = 31,
                            GenreId = 40
                        },
                        new
                        {
                            BookId = 32,
                            GenreId = 13
                        },
                        new
                        {
                            BookId = 32,
                            GenreId = 25
                        },
                        new
                        {
                            BookId = 33,
                            GenreId = 3
                        },
                        new
                        {
                            BookId = 34,
                            GenreId = 18
                        },
                        new
                        {
                            BookId = 35,
                            GenreId = 17
                        },
                        new
                        {
                            BookId = 36,
                            GenreId = 19
                        },
                        new
                        {
                            BookId = 36,
                            GenreId = 34
                        },
                        new
                        {
                            BookId = 37,
                            GenreId = 21
                        },
                        new
                        {
                            BookId = 37,
                            GenreId = 26
                        },
                        new
                        {
                            BookId = 38,
                            GenreId = 46
                        },
                        new
                        {
                            BookId = 38,
                            GenreId = 33
                        },
                        new
                        {
                            BookId = 39,
                            GenreId = 29
                        },
                        new
                        {
                            BookId = 39,
                            GenreId = 4
                        },
                        new
                        {
                            BookId = 40,
                            GenreId = 23
                        },
                        new
                        {
                            BookId = 41,
                            GenreId = 37
                        },
                        new
                        {
                            BookId = 41,
                            GenreId = 42
                        },
                        new
                        {
                            BookId = 42,
                            GenreId = 16
                        },
                        new
                        {
                            BookId = 43,
                            GenreId = 8
                        },
                        new
                        {
                            BookId = 43,
                            GenreId = 25
                        },
                        new
                        {
                            BookId = 44,
                            GenreId = 2
                        },
                        new
                        {
                            BookId = 44,
                            GenreId = 38
                        },
                        new
                        {
                            BookId = 45,
                            GenreId = 43
                        },
                        new
                        {
                            BookId = 46,
                            GenreId = 29
                        },
                        new
                        {
                            BookId = 47,
                            GenreId = 23
                        },
                        new
                        {
                            BookId = 48,
                            GenreId = 22
                        },
                        new
                        {
                            BookId = 49,
                            GenreId = 24
                        },
                        new
                        {
                            BookId = 50,
                            GenreId = 39
                        },
                        new
                        {
                            BookId = 50,
                            GenreId = 34
                        });
                });

            modelBuilder.Entity("Data.Models.BookReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("ReviewedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReviewedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("BookReviews");
                });

            modelBuilder.Entity("Data.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Historical Fiction"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Young Adult"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Children’s Literature"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Literary Fiction"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Dystopian"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Crime"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Suspense"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Cyberpunk"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Magical Realism"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Gothic"
                        },
                        new
                        {
                            Id = 18,
                            Name = "War"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Post-Apocalyptic"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Western"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Satire"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Biography"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Autobiography"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Self-Help"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Travel"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Cooking"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Health & Fitness"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Graphic Novel"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Poetry"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Play"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Essays"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Journalism"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Steampunk"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Paranormal"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Urban Fantasy"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Epic"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Non-Fiction"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Contemporary"
                        },
                        new
                        {
                            Id = 39,
                            Name = "Classic"
                        },
                        new
                        {
                            Id = 40,
                            Name = "Humor"
                        },
                        new
                        {
                            Id = 41,
                            Name = "Memoir"
                        },
                        new
                        {
                            Id = 42,
                            Name = "Philosophy"
                        },
                        new
                        {
                            Id = 43,
                            Name = "Religion"
                        },
                        new
                        {
                            Id = 44,
                            Name = "True Crime"
                        },
                        new
                        {
                            Id = 45,
                            Name = "Academic"
                        },
                        new
                        {
                            Id = 46,
                            Name = "Self-Improvement"
                        },
                        new
                        {
                            Id = 47,
                            Name = "Chick Lit"
                        },
                        new
                        {
                            Id = 48,
                            Name = "LGBT Literature"
                        },
                        new
                        {
                            Id = 49,
                            Name = "Fairy Tales"
                        },
                        new
                        {
                            Id = 50,
                            Name = "Bildungsroman"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Data.Models.AuthorBook", b =>
                {
                    b.HasOne("Data.Models.Author", "Author")
                        .WithMany("AuthorBooks")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.Book", "Book")
                        .WithMany("AuthorBooks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("Data.Models.BookGenre", b =>
                {
                    b.HasOne("Data.Models.Book", "Book")
                        .WithMany("BookGenres")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.Genre", "Genre")
                        .WithMany("BookGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Data.Models.BookReview", b =>
                {
                    b.HasOne("Data.Models.Book", "Book")
                        .WithMany("BookReviews")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Models.Author", b =>
                {
                    b.Navigation("AuthorBooks");
                });

            modelBuilder.Entity("Data.Models.Book", b =>
                {
                    b.Navigation("AuthorBooks");

                    b.Navigation("BookGenres");

                    b.Navigation("BookReviews");
                });

            modelBuilder.Entity("Data.Models.Genre", b =>
                {
                    b.Navigation("BookGenres");
                });
#pragma warning restore 612, 618
        }
    }
}
