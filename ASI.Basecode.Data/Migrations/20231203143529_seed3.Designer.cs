// <auto-generated />
using System;
using ASI.Basecode.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASI.Basecode.Data.Migrations
{
    [DbContext(typeof(AsiBasecodeDBContext))]
    [Migration("20231203143529_seed3")]
    partial class seed3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ASI.Basecode.Data.Models.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ExpiresUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IssuedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("ASI.Basecode.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Data.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Jane",
                            LastName = "Austen"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "George",
                            LastName = "Orwell"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Haruki",
                            LastName = "Murakami"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Toni",
                            LastName = "Morrison"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Leo",
                            LastName = "Tolstoy"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Gabriel García",
                            LastName = "Márquez"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "J.K.",
                            LastName = "Rowling"
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Charles",
                            LastName = "Dickens"
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "Chimamanda Ngozi",
                            LastName = "Adichie"
                        },
                        new
                        {
                            Id = 10,
                            FirstName = "Ernest",
                            LastName = "Hemingway"
                        },
                        new
                        {
                            Id = 11,
                            FirstName = "Fyodor",
                            LastName = "Dostoevsky"
                        },
                        new
                        {
                            Id = 12,
                            FirstName = "Isabel",
                            LastName = "Allende"
                        },
                        new
                        {
                            Id = 13,
                            FirstName = "Mark",
                            LastName = "Twain"
                        },
                        new
                        {
                            Id = 14,
                            FirstName = "Virginia",
                            LastName = "Woolf"
                        },
                        new
                        {
                            Id = 15,
                            FirstName = "James",
                            LastName = "Baldwin"
                        },
                        new
                        {
                            Id = 16,
                            FirstName = "Agatha",
                            LastName = "Christie"
                        },
                        new
                        {
                            Id = 17,
                            FirstName = "J.R.R.",
                            LastName = "Tolkien"
                        },
                        new
                        {
                            Id = 18,
                            FirstName = "Margaret",
                            LastName = "Atwood"
                        },
                        new
                        {
                            Id = 19,
                            FirstName = "Kazuo",
                            LastName = "Ishiguro"
                        },
                        new
                        {
                            Id = 20,
                            FirstName = "Paulo",
                            LastName = "Coelho"
                        },
                        new
                        {
                            Id = 21,
                            FirstName = "Mary",
                            LastName = "Shelley"
                        },
                        new
                        {
                            Id = 22,
                            FirstName = "Salman",
                            LastName = "Rushdie"
                        },
                        new
                        {
                            Id = 23,
                            FirstName = "H.P.",
                            LastName = "Lovecraft"
                        },
                        new
                        {
                            Id = 24,
                            FirstName = "Emily",
                            LastName = "Brontë"
                        },
                        new
                        {
                            Id = 25,
                            FirstName = "Edgar Allan",
                            LastName = "Poe"
                        },
                        new
                        {
                            Id = 26,
                            FirstName = "Langston",
                            LastName = "Hughes"
                        },
                        new
                        {
                            Id = 27,
                            FirstName = "Khaled",
                            LastName = "Hosseini"
                        },
                        new
                        {
                            Id = 28,
                            FirstName = "Oscar",
                            LastName = "Wilde"
                        },
                        new
                        {
                            Id = 29,
                            FirstName = "Stephen",
                            LastName = "King"
                        },
                        new
                        {
                            Id = 30,
                            FirstName = "Maya",
                            LastName = "Angelou"
                        },
                        new
                        {
                            Id = 31,
                            FirstName = "Roald",
                            LastName = "Dahl"
                        },
                        new
                        {
                            Id = 32,
                            FirstName = "Dan",
                            LastName = "Brown"
                        },
                        new
                        {
                            Id = 33,
                            FirstName = "Neil",
                            LastName = "Gaiman"
                        },
                        new
                        {
                            Id = 34,
                            FirstName = "Sylvia",
                            LastName = "Plath"
                        },
                        new
                        {
                            Id = 35,
                            FirstName = "Ian",
                            LastName = "McEwan"
                        },
                        new
                        {
                            Id = 36,
                            FirstName = "Orhan",
                            LastName = "Pamuk"
                        },
                        new
                        {
                            Id = 37,
                            FirstName = "Zadie",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 38,
                            FirstName = "Alice",
                            LastName = "Walker"
                        },
                        new
                        {
                            Id = 39,
                            FirstName = "Kurt",
                            LastName = "Vonnegut"
                        },
                        new
                        {
                            Id = 40,
                            FirstName = "Louise",
                            LastName = "Erdrich"
                        },
                        new
                        {
                            Id = 41,
                            FirstName = "Cormac",
                            LastName = "McCarthy"
                        },
                        new
                        {
                            Id = 42,
                            FirstName = "Philip K.",
                            LastName = "Dick"
                        },
                        new
                        {
                            Id = 43,
                            FirstName = "John",
                            LastName = "Steinbeck"
                        },
                        new
                        {
                            Id = 44,
                            FirstName = "Herman",
                            LastName = "Melville"
                        },
                        new
                        {
                            Id = 45,
                            FirstName = "Charles",
                            LastName = "Bukowski"
                        },
                        new
                        {
                            Id = 46,
                            FirstName = "William",
                            LastName = "Faulkner"
                        },
                        new
                        {
                            Id = 47,
                            FirstName = "Ayn",
                            LastName = "Rand"
                        },
                        new
                        {
                            Id = 48,
                            FirstName = "Gustave",
                            LastName = "Flaubert"
                        },
                        new
                        {
                            Id = 49,
                            FirstName = "Ken",
                            LastName = "Follett"
                        },
                        new
                        {
                            Id = 50,
                            FirstName = "Arthur Conan",
                            LastName = "Doyle"
                        });
                });

            modelBuilder.Entity("Data.Models.AuthorBook", b =>
                {
                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.HasKey("AuthorId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("AuthorBook");

                    b.HasData(
                        new
                        {
                            AuthorId = 38,
                            BookId = 1
                        },
                        new
                        {
                            AuthorId = 44,
                            BookId = 1
                        },
                        new
                        {
                            AuthorId = 41,
                            BookId = 1
                        },
                        new
                        {
                            AuthorId = 29,
                            BookId = 2
                        },
                        new
                        {
                            AuthorId = 41,
                            BookId = 2
                        },
                        new
                        {
                            AuthorId = 40,
                            BookId = 3
                        },
                        new
                        {
                            AuthorId = 16,
                            BookId = 3
                        },
                        new
                        {
                            AuthorId = 42,
                            BookId = 4
                        },
                        new
                        {
                            AuthorId = 23,
                            BookId = 4
                        },
                        new
                        {
                            AuthorId = 14,
                            BookId = 5
                        },
                        new
                        {
                            AuthorId = 37,
                            BookId = 6
                        },
                        new
                        {
                            AuthorId = 20,
                            BookId = 6
                        },
                        new
                        {
                            AuthorId = 11,
                            BookId = 7
                        },
                        new
                        {
                            AuthorId = 18,
                            BookId = 7
                        },
                        new
                        {
                            AuthorId = 19,
                            BookId = 7
                        },
                        new
                        {
                            AuthorId = 1,
                            BookId = 8
                        },
                        new
                        {
                            AuthorId = 2,
                            BookId = 8
                        },
                        new
                        {
                            AuthorId = 21,
                            BookId = 8
                        },
                        new
                        {
                            AuthorId = 17,
                            BookId = 9
                        },
                        new
                        {
                            AuthorId = 35,
                            BookId = 10
                        },
                        new
                        {
                            AuthorId = 39,
                            BookId = 11
                        },
                        new
                        {
                            AuthorId = 4,
                            BookId = 11
                        },
                        new
                        {
                            AuthorId = 17,
                            BookId = 11
                        },
                        new
                        {
                            AuthorId = 23,
                            BookId = 12
                        },
                        new
                        {
                            AuthorId = 7,
                            BookId = 12
                        },
                        new
                        {
                            AuthorId = 43,
                            BookId = 12
                        },
                        new
                        {
                            AuthorId = 19,
                            BookId = 13
                        },
                        new
                        {
                            AuthorId = 22,
                            BookId = 13
                        },
                        new
                        {
                            AuthorId = 43,
                            BookId = 14
                        },
                        new
                        {
                            AuthorId = 39,
                            BookId = 15
                        },
                        new
                        {
                            AuthorId = 4,
                            BookId = 15
                        },
                        new
                        {
                            AuthorId = 21,
                            BookId = 16
                        },
                        new
                        {
                            AuthorId = 1,
                            BookId = 16
                        },
                        new
                        {
                            AuthorId = 3,
                            BookId = 17
                        },
                        new
                        {
                            AuthorId = 24,
                            BookId = 18
                        },
                        new
                        {
                            AuthorId = 49,
                            BookId = 18
                        },
                        new
                        {
                            AuthorId = 33,
                            BookId = 19
                        },
                        new
                        {
                            AuthorId = 16,
                            BookId = 19
                        },
                        new
                        {
                            AuthorId = 50,
                            BookId = 20
                        },
                        new
                        {
                            AuthorId = 14,
                            BookId = 21
                        },
                        new
                        {
                            AuthorId = 19,
                            BookId = 21
                        },
                        new
                        {
                            AuthorId = 43,
                            BookId = 22
                        },
                        new
                        {
                            AuthorId = 17,
                            BookId = 22
                        },
                        new
                        {
                            AuthorId = 5,
                            BookId = 22
                        },
                        new
                        {
                            AuthorId = 13,
                            BookId = 23
                        },
                        new
                        {
                            AuthorId = 3,
                            BookId = 24
                        },
                        new
                        {
                            AuthorId = 30,
                            BookId = 24
                        },
                        new
                        {
                            AuthorId = 15,
                            BookId = 24
                        },
                        new
                        {
                            AuthorId = 22,
                            BookId = 25
                        },
                        new
                        {
                            AuthorId = 13,
                            BookId = 25
                        },
                        new
                        {
                            AuthorId = 13,
                            BookId = 26
                        },
                        new
                        {
                            AuthorId = 34,
                            BookId = 26
                        },
                        new
                        {
                            AuthorId = 42,
                            BookId = 26
                        },
                        new
                        {
                            AuthorId = 29,
                            BookId = 27
                        },
                        new
                        {
                            AuthorId = 35,
                            BookId = 27
                        },
                        new
                        {
                            AuthorId = 22,
                            BookId = 27
                        },
                        new
                        {
                            AuthorId = 46,
                            BookId = 28
                        },
                        new
                        {
                            AuthorId = 15,
                            BookId = 28
                        },
                        new
                        {
                            AuthorId = 5,
                            BookId = 29
                        },
                        new
                        {
                            AuthorId = 30,
                            BookId = 29
                        },
                        new
                        {
                            AuthorId = 36,
                            BookId = 30
                        },
                        new
                        {
                            AuthorId = 27,
                            BookId = 30
                        },
                        new
                        {
                            AuthorId = 30,
                            BookId = 30
                        },
                        new
                        {
                            AuthorId = 31,
                            BookId = 31
                        },
                        new
                        {
                            AuthorId = 25,
                            BookId = 31
                        },
                        new
                        {
                            AuthorId = 49,
                            BookId = 32
                        },
                        new
                        {
                            AuthorId = 8,
                            BookId = 33
                        },
                        new
                        {
                            AuthorId = 41,
                            BookId = 34
                        },
                        new
                        {
                            AuthorId = 47,
                            BookId = 34
                        },
                        new
                        {
                            AuthorId = 11,
                            BookId = 35
                        },
                        new
                        {
                            AuthorId = 41,
                            BookId = 35
                        },
                        new
                        {
                            AuthorId = 46,
                            BookId = 35
                        },
                        new
                        {
                            AuthorId = 43,
                            BookId = 36
                        },
                        new
                        {
                            AuthorId = 12,
                            BookId = 37
                        },
                        new
                        {
                            AuthorId = 40,
                            BookId = 37
                        },
                        new
                        {
                            AuthorId = 46,
                            BookId = 38
                        },
                        new
                        {
                            AuthorId = 6,
                            BookId = 38
                        },
                        new
                        {
                            AuthorId = 5,
                            BookId = 39
                        },
                        new
                        {
                            AuthorId = 44,
                            BookId = 39
                        },
                        new
                        {
                            AuthorId = 42,
                            BookId = 39
                        },
                        new
                        {
                            AuthorId = 1,
                            BookId = 40
                        },
                        new
                        {
                            AuthorId = 11,
                            BookId = 40
                        },
                        new
                        {
                            AuthorId = 46,
                            BookId = 41
                        },
                        new
                        {
                            AuthorId = 27,
                            BookId = 41
                        },
                        new
                        {
                            AuthorId = 36,
                            BookId = 41
                        },
                        new
                        {
                            AuthorId = 50,
                            BookId = 42
                        },
                        new
                        {
                            AuthorId = 25,
                            BookId = 42
                        },
                        new
                        {
                            AuthorId = 47,
                            BookId = 42
                        },
                        new
                        {
                            AuthorId = 9,
                            BookId = 43
                        },
                        new
                        {
                            AuthorId = 37,
                            BookId = 44
                        },
                        new
                        {
                            AuthorId = 35,
                            BookId = 44
                        },
                        new
                        {
                            AuthorId = 20,
                            BookId = 44
                        },
                        new
                        {
                            AuthorId = 25,
                            BookId = 45
                        },
                        new
                        {
                            AuthorId = 29,
                            BookId = 45
                        },
                        new
                        {
                            AuthorId = 22,
                            BookId = 45
                        },
                        new
                        {
                            AuthorId = 43,
                            BookId = 46
                        },
                        new
                        {
                            AuthorId = 12,
                            BookId = 46
                        },
                        new
                        {
                            AuthorId = 21,
                            BookId = 46
                        },
                        new
                        {
                            AuthorId = 31,
                            BookId = 47
                        },
                        new
                        {
                            AuthorId = 30,
                            BookId = 48
                        },
                        new
                        {
                            AuthorId = 9,
                            BookId = 48
                        },
                        new
                        {
                            AuthorId = 27,
                            BookId = 49
                        },
                        new
                        {
                            AuthorId = 2,
                            BookId = 49
                        },
                        new
                        {
                            AuthorId = 28,
                            BookId = 50
                        },
                        new
                        {
                            AuthorId = 17,
                            BookId = 50
                        });
                });

            modelBuilder.Entity("Data.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PageCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublishedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(7551),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-3080-3672",
                            Language = "English",
                            Name = "Voices from the Hollow Mountains",
                            PageCount = 376,
                            PublishedOn = new DateTime(2021, 11, 7, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(7542),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(7552)
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(7669),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-3317-2448",
                            Language = "English",
                            Name = "Secrets of the Jade Labyrinth",
                            PageCount = 137,
                            PublishedOn = new DateTime(2022, 1, 1, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(7669),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(7670)
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(7742),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-8509-5654",
                            Language = "English",
                            Name = "Voices from the Hollow Mountains",
                            PageCount = 100,
                            PublishedOn = new DateTime(2020, 4, 7, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(7741),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(7742)
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(7787),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-4066-9757",
                            Language = "English",
                            Name = "The Garden of Timeless Secrets",
                            PageCount = 354,
                            PublishedOn = new DateTime(2022, 1, 5, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(7787),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(7788)
                        },
                        new
                        {
                            Id = 5,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(7823),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-3462-5251",
                            Language = "English",
                            Name = "The Dragon's Heir",
                            PageCount = 181,
                            PublishedOn = new DateTime(2020, 7, 17, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(7822),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(7824)
                        },
                        new
                        {
                            Id = 6,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(7870),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-2656-7963",
                            Language = "English",
                            Name = "The Labyrinth of Lost Souls",
                            PageCount = 334,
                            PublishedOn = new DateTime(2014, 11, 22, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(7869),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(7870)
                        },
                        new
                        {
                            Id = 7,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(7907),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-3498-5513",
                            Language = "English",
                            Name = "The Secret of the Astral Plane",
                            PageCount = 288,
                            PublishedOn = new DateTime(2016, 8, 17, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(7906),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(7907)
                        },
                        new
                        {
                            Id = 8,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(7942),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-1732-7585",
                            Language = "English",
                            Name = "The Oracle's Last Prophecy",
                            PageCount = 163,
                            PublishedOn = new DateTime(2017, 1, 26, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(7941),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(7943)
                        },
                        new
                        {
                            Id = 9,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(7998),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-6249-5456",
                            Language = "English",
                            Name = "Shadows over Valoria",
                            PageCount = 431,
                            PublishedOn = new DateTime(2021, 11, 23, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(7997),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(7998)
                        },
                        new
                        {
                            Id = 10,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8021),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-5365-6958",
                            Language = "English",
                            Name = "Abyss of the Starry Depths",
                            PageCount = 342,
                            PublishedOn = new DateTime(2015, 6, 29, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8020),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8021)
                        },
                        new
                        {
                            Id = 11,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8052),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-1076-3932",
                            Language = "English",
                            Name = "The Clockmaker's Illusion",
                            PageCount = 214,
                            PublishedOn = new DateTime(2014, 5, 26, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8052),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8053)
                        },
                        new
                        {
                            Id = 12,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8134),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7016-3013",
                            Language = "English",
                            Name = "The Rose of the Wastelands",
                            PageCount = 399,
                            PublishedOn = new DateTime(2014, 8, 31, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8134),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8135)
                        },
                        new
                        {
                            Id = 13,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8174),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-8445-7958",
                            Language = "English",
                            Name = "The Hidden Kingdom Beyond the Mountains",
                            PageCount = 299,
                            PublishedOn = new DateTime(2021, 10, 7, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8173),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8174)
                        },
                        new
                        {
                            Id = 14,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8235),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7704-3377",
                            Language = "English",
                            Name = "The Painter's Paradox",
                            PageCount = 361,
                            PublishedOn = new DateTime(2022, 7, 17, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8234),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8235)
                        },
                        new
                        {
                            Id = 15,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8259),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-5888-5509",
                            Language = "English",
                            Name = "The Last Voyage of the Star Sailor",
                            PageCount = 450,
                            PublishedOn = new DateTime(2014, 11, 18, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8258),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8260)
                        },
                        new
                        {
                            Id = 16,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8293),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-6985-4864",
                            Language = "English",
                            Name = "The Labyrinth of Lost Souls",
                            PageCount = 398,
                            PublishedOn = new DateTime(2022, 1, 18, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8292),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8293)
                        },
                        new
                        {
                            Id = 17,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8342),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-2782-1139",
                            Language = "English",
                            Name = "The Secret of the Astral Plane",
                            PageCount = 185,
                            PublishedOn = new DateTime(2014, 11, 8, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8341),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8342)
                        },
                        new
                        {
                            Id = 18,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8371),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-6722-5614",
                            Language = "English",
                            Name = "Tales from the Sapphire Sea",
                            PageCount = 432,
                            PublishedOn = new DateTime(2014, 11, 15, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8371),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8372)
                        },
                        new
                        {
                            Id = 19,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8403),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-9085-9733",
                            Language = "English",
                            Name = "Chronicle of the Shattered Lands",
                            PageCount = 226,
                            PublishedOn = new DateTime(2015, 11, 12, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8402),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8403)
                        },
                        new
                        {
                            Id = 20,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8470),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-2936-3394",
                            Language = "English",
                            Name = "In the Heart of the Storm",
                            PageCount = 483,
                            PublishedOn = new DateTime(2019, 11, 4, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8470),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8471)
                        },
                        new
                        {
                            Id = 21,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8495),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-1517-3620",
                            Language = "English",
                            Name = "The Sorceress's Labyrinth",
                            PageCount = 383,
                            PublishedOn = new DateTime(2016, 11, 25, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8494),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8495)
                        },
                        new
                        {
                            Id = 22,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8540),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-5855-3784",
                            Language = "English",
                            Name = "The Labyrinth of Lost Souls",
                            PageCount = 356,
                            PublishedOn = new DateTime(2021, 4, 21, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8539),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8540)
                        },
                        new
                        {
                            Id = 23,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8606),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-9244-7693",
                            Language = "English",
                            Name = "Ghosts of the Ancient Manor",
                            PageCount = 319,
                            PublishedOn = new DateTime(2019, 2, 2, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8605),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8606)
                        },
                        new
                        {
                            Id = 24,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8637),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-3955-3145",
                            Language = "English",
                            Name = "The Painter's Paradox",
                            PageCount = 177,
                            PublishedOn = new DateTime(2021, 9, 23, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8637),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8638)
                        },
                        new
                        {
                            Id = 25,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8680),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-3863-2127",
                            Language = "English",
                            Name = "Mysteries at the Edge of the Universe",
                            PageCount = 489,
                            PublishedOn = new DateTime(2018, 11, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8679),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8681)
                        },
                        new
                        {
                            Id = 26,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8737),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-8637-3886",
                            Language = "English",
                            Name = "The Silver Key of Dreams",
                            PageCount = 113,
                            PublishedOn = new DateTime(2020, 3, 25, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8736),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8737)
                        },
                        new
                        {
                            Id = 27,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8767),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-9028-8812",
                            Language = "English",
                            Name = "The Clockmaker's Illusion",
                            PageCount = 369,
                            PublishedOn = new DateTime(2016, 6, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8766),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8767)
                        },
                        new
                        {
                            Id = 28,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8804),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-4745-1511",
                            Language = "English",
                            Name = "The Rose of the Wastelands",
                            PageCount = 356,
                            PublishedOn = new DateTime(2015, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8804),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8805)
                        },
                        new
                        {
                            Id = 29,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8859),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-1275-6765",
                            Language = "English",
                            Name = "The Dragon's Heir",
                            PageCount = 400,
                            PublishedOn = new DateTime(2017, 3, 15, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8858),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8859)
                        },
                        new
                        {
                            Id = 30,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8904),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-9738-7777",
                            Language = "English",
                            Name = "The Architect's Legacy",
                            PageCount = 498,
                            PublishedOn = new DateTime(2020, 6, 1, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8903),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8905)
                        },
                        new
                        {
                            Id = 31,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8931),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-4996-1324",
                            Language = "English",
                            Name = "Sorrows of the Last Warlock",
                            PageCount = 129,
                            PublishedOn = new DateTime(2018, 10, 15, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8931),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8932)
                        },
                        new
                        {
                            Id = 32,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8989),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-6392-7870",
                            Language = "English",
                            Name = "Twilight of the Celestial Court",
                            PageCount = 437,
                            PublishedOn = new DateTime(2019, 10, 30, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8988),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(8989)
                        },
                        new
                        {
                            Id = 33,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9018),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7698-9381",
                            Language = "English",
                            Name = "Sands of the Forgotten Empire",
                            PageCount = 382,
                            PublishedOn = new DateTime(2017, 10, 20, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9017),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9018)
                        },
                        new
                        {
                            Id = 34,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9046),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-5042-6557",
                            Language = "English",
                            Name = "Whispers from the Other Side",
                            PageCount = 241,
                            PublishedOn = new DateTime(2016, 3, 26, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9045),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9046)
                        },
                        new
                        {
                            Id = 35,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9112),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7325-3066",
                            Language = "English",
                            Name = "The Painter's Paradox",
                            PageCount = 449,
                            PublishedOn = new DateTime(2016, 5, 16, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9112),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9113)
                        },
                        new
                        {
                            Id = 36,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9143),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-5156-3559",
                            Language = "English",
                            Name = "Dreams of the Sunken City",
                            PageCount = 242,
                            PublishedOn = new DateTime(2017, 11, 5, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9142),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9143)
                        },
                        new
                        {
                            Id = 37,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9170),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7641-8462",
                            Language = "English",
                            Name = "The Alchemist's Shadow",
                            PageCount = 245,
                            PublishedOn = new DateTime(2020, 10, 24, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9170),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9171)
                        },
                        new
                        {
                            Id = 38,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9225),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7916-5514",
                            Language = "English",
                            Name = "In the Heart of the Storm",
                            PageCount = 434,
                            PublishedOn = new DateTime(2015, 4, 27, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9224),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9225)
                        },
                        new
                        {
                            Id = 39,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9255),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-3195-8325",
                            Language = "English",
                            Name = "Legends of the Celestial Atlas",
                            PageCount = 371,
                            PublishedOn = new DateTime(2015, 2, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9254),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9256)
                        },
                        new
                        {
                            Id = 40,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9287),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-6090-7542",
                            Language = "English",
                            Name = "The Enigma of the Crystal Towers",
                            PageCount = 236,
                            PublishedOn = new DateTime(2015, 6, 14, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9286),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9287)
                        },
                        new
                        {
                            Id = 41,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9356),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-6953-8528",
                            Language = "English",
                            Name = "Voices from the Hollow Mountains",
                            PageCount = 127,
                            PublishedOn = new DateTime(2016, 3, 12, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9355),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9357)
                        },
                        new
                        {
                            Id = 42,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9382),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-6557-1559",
                            Language = "English",
                            Name = "The Rose of the Wastelands",
                            PageCount = 263,
                            PublishedOn = new DateTime(2014, 9, 16, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9382),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9383)
                        },
                        new
                        {
                            Id = 43,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9427),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-1060-8497",
                            Language = "English",
                            Name = "The Heirloom of Forgotten Times",
                            PageCount = 214,
                            PublishedOn = new DateTime(2018, 7, 14, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9426),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9427)
                        },
                        new
                        {
                            Id = 44,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9472),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-2954-7125",
                            Language = "English",
                            Name = "Abyss of the Starry Depths",
                            PageCount = 238,
                            PublishedOn = new DateTime(2017, 6, 20, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9472),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9473)
                        },
                        new
                        {
                            Id = 45,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9509),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-5658-4837",
                            Language = "English",
                            Name = "The Last Symphony of Autumn",
                            PageCount = 260,
                            PublishedOn = new DateTime(2022, 10, 21, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9509),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9510)
                        },
                        new
                        {
                            Id = 46,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9564),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-2035-4223",
                            Language = "English",
                            Name = "Chronicles of the Silver Mist",
                            PageCount = 173,
                            PublishedOn = new DateTime(2022, 6, 16, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9563),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9564)
                        },
                        new
                        {
                            Id = 47,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9603),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-5021-7756",
                            Language = "English",
                            Name = "Legends of the Celestial Atlas",
                            PageCount = 368,
                            PublishedOn = new DateTime(2021, 6, 18, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9603),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9604)
                        },
                        new
                        {
                            Id = 48,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9630),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-5196-2119",
                            Language = "English",
                            Name = "The Ivory Tower of Secrets",
                            PageCount = 185,
                            PublishedOn = new DateTime(2019, 1, 25, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9629),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9630)
                        },
                        new
                        {
                            Id = 49,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9659),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-5715-8897",
                            Language = "English",
                            Name = "Tales from the Sapphire Sea",
                            PageCount = 260,
                            PublishedOn = new DateTime(2014, 11, 10, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9659),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9660)
                        },
                        new
                        {
                            Id = 50,
                            Created = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9717),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-2676-6274",
                            Language = "English",
                            Name = "Sorrows of the Last Warlock",
                            PageCount = 417,
                            PublishedOn = new DateTime(2014, 10, 9, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9717),
                            Updated = new DateTime(2023, 12, 3, 22, 35, 29, 428, DateTimeKind.Local).AddTicks(9718)
                        });
                });

            modelBuilder.Entity("Data.Models.BookGenre", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.HasKey("BookId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("BookGenre");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            GenreId = 2
                        },
                        new
                        {
                            BookId = 2,
                            GenreId = 39
                        },
                        new
                        {
                            BookId = 2,
                            GenreId = 32
                        },
                        new
                        {
                            BookId = 3,
                            GenreId = 16
                        },
                        new
                        {
                            BookId = 4,
                            GenreId = 9
                        },
                        new
                        {
                            BookId = 5,
                            GenreId = 16
                        },
                        new
                        {
                            BookId = 6,
                            GenreId = 13
                        },
                        new
                        {
                            BookId = 7,
                            GenreId = 49
                        },
                        new
                        {
                            BookId = 8,
                            GenreId = 19
                        },
                        new
                        {
                            BookId = 9,
                            GenreId = 37
                        },
                        new
                        {
                            BookId = 10,
                            GenreId = 6
                        },
                        new
                        {
                            BookId = 10,
                            GenreId = 5
                        },
                        new
                        {
                            BookId = 11,
                            GenreId = 44
                        },
                        new
                        {
                            BookId = 11,
                            GenreId = 34
                        },
                        new
                        {
                            BookId = 12,
                            GenreId = 23
                        },
                        new
                        {
                            BookId = 12,
                            GenreId = 42
                        },
                        new
                        {
                            BookId = 13,
                            GenreId = 47
                        },
                        new
                        {
                            BookId = 13,
                            GenreId = 27
                        },
                        new
                        {
                            BookId = 14,
                            GenreId = 8
                        },
                        new
                        {
                            BookId = 15,
                            GenreId = 47
                        },
                        new
                        {
                            BookId = 16,
                            GenreId = 2
                        },
                        new
                        {
                            BookId = 17,
                            GenreId = 17
                        },
                        new
                        {
                            BookId = 17,
                            GenreId = 39
                        },
                        new
                        {
                            BookId = 18,
                            GenreId = 33
                        },
                        new
                        {
                            BookId = 19,
                            GenreId = 25
                        },
                        new
                        {
                            BookId = 19,
                            GenreId = 38
                        },
                        new
                        {
                            BookId = 20,
                            GenreId = 25
                        },
                        new
                        {
                            BookId = 21,
                            GenreId = 11
                        },
                        new
                        {
                            BookId = 21,
                            GenreId = 36
                        },
                        new
                        {
                            BookId = 22,
                            GenreId = 49
                        },
                        new
                        {
                            BookId = 22,
                            GenreId = 47
                        },
                        new
                        {
                            BookId = 23,
                            GenreId = 32
                        },
                        new
                        {
                            BookId = 23,
                            GenreId = 17
                        },
                        new
                        {
                            BookId = 24,
                            GenreId = 17
                        },
                        new
                        {
                            BookId = 24,
                            GenreId = 45
                        },
                        new
                        {
                            BookId = 25,
                            GenreId = 8
                        },
                        new
                        {
                            BookId = 26,
                            GenreId = 41
                        },
                        new
                        {
                            BookId = 27,
                            GenreId = 49
                        },
                        new
                        {
                            BookId = 27,
                            GenreId = 10
                        },
                        new
                        {
                            BookId = 28,
                            GenreId = 8
                        },
                        new
                        {
                            BookId = 29,
                            GenreId = 19
                        },
                        new
                        {
                            BookId = 29,
                            GenreId = 29
                        },
                        new
                        {
                            BookId = 30,
                            GenreId = 45
                        },
                        new
                        {
                            BookId = 31,
                            GenreId = 11
                        },
                        new
                        {
                            BookId = 31,
                            GenreId = 41
                        },
                        new
                        {
                            BookId = 32,
                            GenreId = 26
                        },
                        new
                        {
                            BookId = 32,
                            GenreId = 6
                        },
                        new
                        {
                            BookId = 33,
                            GenreId = 35
                        },
                        new
                        {
                            BookId = 33,
                            GenreId = 18
                        },
                        new
                        {
                            BookId = 34,
                            GenreId = 20
                        },
                        new
                        {
                            BookId = 34,
                            GenreId = 5
                        },
                        new
                        {
                            BookId = 35,
                            GenreId = 13
                        },
                        new
                        {
                            BookId = 35,
                            GenreId = 14
                        },
                        new
                        {
                            BookId = 36,
                            GenreId = 18
                        },
                        new
                        {
                            BookId = 36,
                            GenreId = 39
                        },
                        new
                        {
                            BookId = 37,
                            GenreId = 39
                        },
                        new
                        {
                            BookId = 38,
                            GenreId = 7
                        },
                        new
                        {
                            BookId = 39,
                            GenreId = 1
                        },
                        new
                        {
                            BookId = 40,
                            GenreId = 3
                        },
                        new
                        {
                            BookId = 40,
                            GenreId = 16
                        },
                        new
                        {
                            BookId = 41,
                            GenreId = 33
                        },
                        new
                        {
                            BookId = 42,
                            GenreId = 16
                        },
                        new
                        {
                            BookId = 42,
                            GenreId = 12
                        },
                        new
                        {
                            BookId = 43,
                            GenreId = 25
                        },
                        new
                        {
                            BookId = 44,
                            GenreId = 27
                        },
                        new
                        {
                            BookId = 44,
                            GenreId = 22
                        },
                        new
                        {
                            BookId = 45,
                            GenreId = 1
                        },
                        new
                        {
                            BookId = 46,
                            GenreId = 7
                        },
                        new
                        {
                            BookId = 46,
                            GenreId = 49
                        },
                        new
                        {
                            BookId = 47,
                            GenreId = 12
                        },
                        new
                        {
                            BookId = 47,
                            GenreId = 16
                        },
                        new
                        {
                            BookId = 48,
                            GenreId = 27
                        },
                        new
                        {
                            BookId = 49,
                            GenreId = 4
                        },
                        new
                        {
                            BookId = 50,
                            GenreId = 24
                        },
                        new
                        {
                            BookId = 50,
                            GenreId = 16
                        });
                });

            modelBuilder.Entity("Data.Models.BookReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("ReviewedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReviewedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("BookReviews");
                });

            modelBuilder.Entity("Data.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Historical Fiction"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Young Adult"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Children’s Literature"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Literary Fiction"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Dystopian"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Crime"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Suspense"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Cyberpunk"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Magical Realism"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Gothic"
                        },
                        new
                        {
                            Id = 18,
                            Name = "War"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Post-Apocalyptic"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Western"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Satire"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Biography"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Autobiography"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Self-Help"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Travel"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Cooking"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Health & Fitness"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Graphic Novel"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Poetry"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Play"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Essays"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Journalism"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Steampunk"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Paranormal"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Urban Fantasy"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Epic"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Non-Fiction"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Contemporary"
                        },
                        new
                        {
                            Id = 39,
                            Name = "Classic"
                        },
                        new
                        {
                            Id = 40,
                            Name = "Humor"
                        },
                        new
                        {
                            Id = 41,
                            Name = "Memoir"
                        },
                        new
                        {
                            Id = 42,
                            Name = "Philosophy"
                        },
                        new
                        {
                            Id = 43,
                            Name = "Religion"
                        },
                        new
                        {
                            Id = 44,
                            Name = "True Crime"
                        },
                        new
                        {
                            Id = 45,
                            Name = "Academic"
                        },
                        new
                        {
                            Id = 46,
                            Name = "Self-Improvement"
                        },
                        new
                        {
                            Id = 47,
                            Name = "Chick Lit"
                        },
                        new
                        {
                            Id = 48,
                            Name = "LGBT Literature"
                        },
                        new
                        {
                            Id = 49,
                            Name = "Fairy Tales"
                        },
                        new
                        {
                            Id = 50,
                            Name = "Bildungsroman"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Data.Models.AuthorBook", b =>
                {
                    b.HasOne("Data.Models.Author", "Author")
                        .WithMany("AuthorBooks")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.Book", "Book")
                        .WithMany("AuthorBooks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("Data.Models.BookGenre", b =>
                {
                    b.HasOne("Data.Models.Book", "Book")
                        .WithMany("BookGenres")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.Genre", "Genre")
                        .WithMany("BookGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Data.Models.BookReview", b =>
                {
                    b.HasOne("Data.Models.Book", "Book")
                        .WithMany("BookReviews")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Models.Author", b =>
                {
                    b.Navigation("AuthorBooks");
                });

            modelBuilder.Entity("Data.Models.Book", b =>
                {
                    b.Navigation("AuthorBooks");

                    b.Navigation("BookGenres");

                    b.Navigation("BookReviews");
                });

            modelBuilder.Entity("Data.Models.Genre", b =>
                {
                    b.Navigation("BookGenres");
                });
#pragma warning restore 612, 618
        }
    }
}
