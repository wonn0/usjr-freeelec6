// <auto-generated />
using System;
using ASI.Basecode.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASI.Basecode.Data.Migrations
{
    [DbContext(typeof(AsiBasecodeDBContext))]
    [Migration("20231203142349_seed")]
    partial class seed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ASI.Basecode.Data.Models.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ExpiresUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IssuedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("Data.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Jane",
                            LastName = "Austen"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "George",
                            LastName = "Orwell"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Haruki",
                            LastName = "Murakami"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Toni",
                            LastName = "Morrison"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Leo",
                            LastName = "Tolstoy"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Gabriel García",
                            LastName = "Márquez"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "J.K.",
                            LastName = "Rowling"
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Charles",
                            LastName = "Dickens"
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "Chimamanda Ngozi",
                            LastName = "Adichie"
                        },
                        new
                        {
                            Id = 10,
                            FirstName = "Ernest",
                            LastName = "Hemingway"
                        },
                        new
                        {
                            Id = 11,
                            FirstName = "Fyodor",
                            LastName = "Dostoevsky"
                        },
                        new
                        {
                            Id = 12,
                            FirstName = "Isabel",
                            LastName = "Allende"
                        },
                        new
                        {
                            Id = 13,
                            FirstName = "Mark",
                            LastName = "Twain"
                        },
                        new
                        {
                            Id = 14,
                            FirstName = "Virginia",
                            LastName = "Woolf"
                        },
                        new
                        {
                            Id = 15,
                            FirstName = "James",
                            LastName = "Baldwin"
                        },
                        new
                        {
                            Id = 16,
                            FirstName = "Agatha",
                            LastName = "Christie"
                        },
                        new
                        {
                            Id = 17,
                            FirstName = "J.R.R.",
                            LastName = "Tolkien"
                        },
                        new
                        {
                            Id = 18,
                            FirstName = "Margaret",
                            LastName = "Atwood"
                        },
                        new
                        {
                            Id = 19,
                            FirstName = "Kazuo",
                            LastName = "Ishiguro"
                        },
                        new
                        {
                            Id = 20,
                            FirstName = "Paulo",
                            LastName = "Coelho"
                        },
                        new
                        {
                            Id = 21,
                            FirstName = "Mary",
                            LastName = "Shelley"
                        },
                        new
                        {
                            Id = 22,
                            FirstName = "Salman",
                            LastName = "Rushdie"
                        },
                        new
                        {
                            Id = 23,
                            FirstName = "H.P.",
                            LastName = "Lovecraft"
                        },
                        new
                        {
                            Id = 24,
                            FirstName = "Emily",
                            LastName = "Brontë"
                        },
                        new
                        {
                            Id = 25,
                            FirstName = "Edgar Allan",
                            LastName = "Poe"
                        },
                        new
                        {
                            Id = 26,
                            FirstName = "Langston",
                            LastName = "Hughes"
                        },
                        new
                        {
                            Id = 27,
                            FirstName = "Khaled",
                            LastName = "Hosseini"
                        },
                        new
                        {
                            Id = 28,
                            FirstName = "Oscar",
                            LastName = "Wilde"
                        },
                        new
                        {
                            Id = 29,
                            FirstName = "Stephen",
                            LastName = "King"
                        },
                        new
                        {
                            Id = 30,
                            FirstName = "Maya",
                            LastName = "Angelou"
                        },
                        new
                        {
                            Id = 31,
                            FirstName = "Roald",
                            LastName = "Dahl"
                        },
                        new
                        {
                            Id = 32,
                            FirstName = "Dan",
                            LastName = "Brown"
                        },
                        new
                        {
                            Id = 33,
                            FirstName = "Neil",
                            LastName = "Gaiman"
                        },
                        new
                        {
                            Id = 34,
                            FirstName = "Sylvia",
                            LastName = "Plath"
                        },
                        new
                        {
                            Id = 35,
                            FirstName = "Ian",
                            LastName = "McEwan"
                        },
                        new
                        {
                            Id = 36,
                            FirstName = "Orhan",
                            LastName = "Pamuk"
                        },
                        new
                        {
                            Id = 37,
                            FirstName = "Zadie",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 38,
                            FirstName = "Alice",
                            LastName = "Walker"
                        },
                        new
                        {
                            Id = 39,
                            FirstName = "Kurt",
                            LastName = "Vonnegut"
                        },
                        new
                        {
                            Id = 40,
                            FirstName = "Louise",
                            LastName = "Erdrich"
                        },
                        new
                        {
                            Id = 41,
                            FirstName = "Cormac",
                            LastName = "McCarthy"
                        },
                        new
                        {
                            Id = 42,
                            FirstName = "Philip K.",
                            LastName = "Dick"
                        },
                        new
                        {
                            Id = 43,
                            FirstName = "John",
                            LastName = "Steinbeck"
                        },
                        new
                        {
                            Id = 44,
                            FirstName = "Herman",
                            LastName = "Melville"
                        },
                        new
                        {
                            Id = 45,
                            FirstName = "Charles",
                            LastName = "Bukowski"
                        },
                        new
                        {
                            Id = 46,
                            FirstName = "William",
                            LastName = "Faulkner"
                        },
                        new
                        {
                            Id = 47,
                            FirstName = "Ayn",
                            LastName = "Rand"
                        },
                        new
                        {
                            Id = 48,
                            FirstName = "Gustave",
                            LastName = "Flaubert"
                        },
                        new
                        {
                            Id = 49,
                            FirstName = "Ken",
                            LastName = "Follett"
                        },
                        new
                        {
                            Id = 50,
                            FirstName = "Arthur Conan",
                            LastName = "Doyle"
                        });
                });

            modelBuilder.Entity("Data.Models.AuthorBook", b =>
                {
                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.HasKey("AuthorId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("AuthorBook");

                    b.HasData(
                        new
                        {
                            AuthorId = 31,
                            BookId = 1
                        },
                        new
                        {
                            AuthorId = 39,
                            BookId = 2
                        },
                        new
                        {
                            AuthorId = 30,
                            BookId = 2
                        },
                        new
                        {
                            AuthorId = 48,
                            BookId = 2
                        },
                        new
                        {
                            AuthorId = 16,
                            BookId = 3
                        },
                        new
                        {
                            AuthorId = 12,
                            BookId = 3
                        },
                        new
                        {
                            AuthorId = 9,
                            BookId = 3
                        },
                        new
                        {
                            AuthorId = 20,
                            BookId = 4
                        },
                        new
                        {
                            AuthorId = 21,
                            BookId = 5
                        },
                        new
                        {
                            AuthorId = 23,
                            BookId = 5
                        },
                        new
                        {
                            AuthorId = 12,
                            BookId = 6
                        },
                        new
                        {
                            AuthorId = 15,
                            BookId = 6
                        },
                        new
                        {
                            AuthorId = 26,
                            BookId = 6
                        },
                        new
                        {
                            AuthorId = 30,
                            BookId = 7
                        },
                        new
                        {
                            AuthorId = 29,
                            BookId = 7
                        },
                        new
                        {
                            AuthorId = 46,
                            BookId = 7
                        },
                        new
                        {
                            AuthorId = 19,
                            BookId = 8
                        },
                        new
                        {
                            AuthorId = 43,
                            BookId = 8
                        },
                        new
                        {
                            AuthorId = 10,
                            BookId = 8
                        },
                        new
                        {
                            AuthorId = 7,
                            BookId = 9
                        },
                        new
                        {
                            AuthorId = 32,
                            BookId = 9
                        },
                        new
                        {
                            AuthorId = 45,
                            BookId = 10
                        },
                        new
                        {
                            AuthorId = 22,
                            BookId = 10
                        },
                        new
                        {
                            AuthorId = 38,
                            BookId = 11
                        },
                        new
                        {
                            AuthorId = 24,
                            BookId = 12
                        },
                        new
                        {
                            AuthorId = 29,
                            BookId = 12
                        },
                        new
                        {
                            AuthorId = 8,
                            BookId = 13
                        },
                        new
                        {
                            AuthorId = 1,
                            BookId = 13
                        },
                        new
                        {
                            AuthorId = 32,
                            BookId = 14
                        },
                        new
                        {
                            AuthorId = 36,
                            BookId = 15
                        },
                        new
                        {
                            AuthorId = 26,
                            BookId = 16
                        },
                        new
                        {
                            AuthorId = 32,
                            BookId = 16
                        },
                        new
                        {
                            AuthorId = 16,
                            BookId = 17
                        },
                        new
                        {
                            AuthorId = 31,
                            BookId = 17
                        },
                        new
                        {
                            AuthorId = 36,
                            BookId = 17
                        },
                        new
                        {
                            AuthorId = 8,
                            BookId = 18
                        },
                        new
                        {
                            AuthorId = 2,
                            BookId = 19
                        },
                        new
                        {
                            AuthorId = 32,
                            BookId = 19
                        },
                        new
                        {
                            AuthorId = 1,
                            BookId = 20
                        },
                        new
                        {
                            AuthorId = 28,
                            BookId = 21
                        },
                        new
                        {
                            AuthorId = 18,
                            BookId = 22
                        },
                        new
                        {
                            AuthorId = 28,
                            BookId = 22
                        },
                        new
                        {
                            AuthorId = 44,
                            BookId = 23
                        },
                        new
                        {
                            AuthorId = 27,
                            BookId = 24
                        },
                        new
                        {
                            AuthorId = 4,
                            BookId = 24
                        },
                        new
                        {
                            AuthorId = 8,
                            BookId = 25
                        },
                        new
                        {
                            AuthorId = 26,
                            BookId = 25
                        },
                        new
                        {
                            AuthorId = 3,
                            BookId = 26
                        },
                        new
                        {
                            AuthorId = 47,
                            BookId = 26
                        },
                        new
                        {
                            AuthorId = 10,
                            BookId = 26
                        },
                        new
                        {
                            AuthorId = 50,
                            BookId = 27
                        },
                        new
                        {
                            AuthorId = 19,
                            BookId = 27
                        },
                        new
                        {
                            AuthorId = 33,
                            BookId = 28
                        },
                        new
                        {
                            AuthorId = 6,
                            BookId = 29
                        },
                        new
                        {
                            AuthorId = 24,
                            BookId = 29
                        },
                        new
                        {
                            AuthorId = 12,
                            BookId = 29
                        },
                        new
                        {
                            AuthorId = 28,
                            BookId = 30
                        },
                        new
                        {
                            AuthorId = 21,
                            BookId = 30
                        },
                        new
                        {
                            AuthorId = 5,
                            BookId = 30
                        },
                        new
                        {
                            AuthorId = 2,
                            BookId = 31
                        },
                        new
                        {
                            AuthorId = 2,
                            BookId = 32
                        },
                        new
                        {
                            AuthorId = 34,
                            BookId = 33
                        },
                        new
                        {
                            AuthorId = 2,
                            BookId = 33
                        },
                        new
                        {
                            AuthorId = 22,
                            BookId = 34
                        },
                        new
                        {
                            AuthorId = 41,
                            BookId = 34
                        },
                        new
                        {
                            AuthorId = 38,
                            BookId = 35
                        },
                        new
                        {
                            AuthorId = 37,
                            BookId = 35
                        },
                        new
                        {
                            AuthorId = 9,
                            BookId = 36
                        },
                        new
                        {
                            AuthorId = 2,
                            BookId = 37
                        },
                        new
                        {
                            AuthorId = 29,
                            BookId = 37
                        },
                        new
                        {
                            AuthorId = 44,
                            BookId = 38
                        },
                        new
                        {
                            AuthorId = 31,
                            BookId = 39
                        },
                        new
                        {
                            AuthorId = 40,
                            BookId = 39
                        },
                        new
                        {
                            AuthorId = 46,
                            BookId = 40
                        },
                        new
                        {
                            AuthorId = 27,
                            BookId = 41
                        },
                        new
                        {
                            AuthorId = 18,
                            BookId = 41
                        },
                        new
                        {
                            AuthorId = 35,
                            BookId = 41
                        },
                        new
                        {
                            AuthorId = 47,
                            BookId = 42
                        },
                        new
                        {
                            AuthorId = 22,
                            BookId = 42
                        },
                        new
                        {
                            AuthorId = 24,
                            BookId = 42
                        },
                        new
                        {
                            AuthorId = 49,
                            BookId = 43
                        },
                        new
                        {
                            AuthorId = 24,
                            BookId = 43
                        },
                        new
                        {
                            AuthorId = 24,
                            BookId = 44
                        },
                        new
                        {
                            AuthorId = 15,
                            BookId = 44
                        },
                        new
                        {
                            AuthorId = 20,
                            BookId = 45
                        },
                        new
                        {
                            AuthorId = 45,
                            BookId = 45
                        },
                        new
                        {
                            AuthorId = 10,
                            BookId = 46
                        },
                        new
                        {
                            AuthorId = 5,
                            BookId = 47
                        },
                        new
                        {
                            AuthorId = 4,
                            BookId = 48
                        },
                        new
                        {
                            AuthorId = 48,
                            BookId = 49
                        },
                        new
                        {
                            AuthorId = 29,
                            BookId = 49
                        },
                        new
                        {
                            AuthorId = 21,
                            BookId = 49
                        },
                        new
                        {
                            AuthorId = 38,
                            BookId = 50
                        },
                        new
                        {
                            AuthorId = 16,
                            BookId = 50
                        });
                });

            modelBuilder.Entity("Data.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PageCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublishedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(7972),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-4649-9344",
                            Language = "English",
                            Name = "The Meridian of Fate",
                            PageCount = 211,
                            PublishedOn = new DateTime(2021, 7, 17, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(7961),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(7972)
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8135),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7697-4323",
                            Language = "English",
                            Name = "The Last Symphony of Autumn",
                            PageCount = 427,
                            PublishedOn = new DateTime(2015, 4, 2, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8134),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8135)
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8181),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-8305-1746",
                            Language = "English",
                            Name = "Eclipses of the Past",
                            PageCount = 171,
                            PublishedOn = new DateTime(2021, 9, 16, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8180),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8181)
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8229),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-2240-8957",
                            Language = "English",
                            Name = "The Labyrinth of Lost Souls",
                            PageCount = 125,
                            PublishedOn = new DateTime(2015, 11, 5, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8228),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8229)
                        },
                        new
                        {
                            Id = 5,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8310),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7031-4467",
                            Language = "English",
                            Name = "Lost in the Whispering Forest",
                            PageCount = 270,
                            PublishedOn = new DateTime(2019, 6, 28, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8309),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8310)
                        },
                        new
                        {
                            Id = 6,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8352),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7986-3560",
                            Language = "English",
                            Name = "The Midnight Carousel",
                            PageCount = 302,
                            PublishedOn = new DateTime(2015, 9, 1, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8351),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8353)
                        },
                        new
                        {
                            Id = 7,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8393),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-3134-8034",
                            Language = "English",
                            Name = "Sorrows of the Last Warlock",
                            PageCount = 241,
                            PublishedOn = new DateTime(2014, 12, 6, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8393),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8393)
                        },
                        new
                        {
                            Id = 8,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8459),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7334-4291",
                            Language = "English",
                            Name = "The Labyrinth of Lost Souls",
                            PageCount = 446,
                            PublishedOn = new DateTime(2017, 10, 24, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8458),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8459)
                        },
                        new
                        {
                            Id = 9,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8500),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-2221-7704",
                            Language = "English",
                            Name = "The Scribe's Enigma",
                            PageCount = 344,
                            PublishedOn = new DateTime(2017, 10, 2, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8500),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8501)
                        },
                        new
                        {
                            Id = 10,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8537),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-3582-2998",
                            Language = "English",
                            Name = "Tales from the Sapphire Sea",
                            PageCount = 401,
                            PublishedOn = new DateTime(2014, 5, 30, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8536),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8537)
                        },
                        new
                        {
                            Id = 11,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8600),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-1112-9897",
                            Language = "English",
                            Name = "Veil of the Northern Lights",
                            PageCount = 418,
                            PublishedOn = new DateTime(2014, 12, 17, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8599),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8600)
                        },
                        new
                        {
                            Id = 12,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8625),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-2919-5221",
                            Language = "English",
                            Name = "Beyond the Shadow Realm",
                            PageCount = 368,
                            PublishedOn = new DateTime(2017, 11, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8624),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8625)
                        },
                        new
                        {
                            Id = 13,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8658),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-8910-3160",
                            Language = "English",
                            Name = "Chronicle of the Shattered Lands",
                            PageCount = 207,
                            PublishedOn = new DateTime(2017, 3, 23, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8657),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8658)
                        },
                        new
                        {
                            Id = 14,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8719),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-9345-7132",
                            Language = "English",
                            Name = "The Enigma of the Crystal Towers",
                            PageCount = 267,
                            PublishedOn = new DateTime(2015, 1, 2, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8718),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8719)
                        },
                        new
                        {
                            Id = 15,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8744),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-5065-6146",
                            Language = "English",
                            Name = "In the Heart of the Storm",
                            PageCount = 222,
                            PublishedOn = new DateTime(2015, 12, 9, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8743),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8744)
                        },
                        new
                        {
                            Id = 16,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8768),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-6200-9718",
                            Language = "English",
                            Name = "The Sorceress's Labyrinth",
                            PageCount = 383,
                            PublishedOn = new DateTime(2021, 2, 20, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8767),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8768)
                        },
                        new
                        {
                            Id = 17,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8838),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-2207-3653",
                            Language = "English",
                            Name = "Tales from the Sapphire Sea",
                            PageCount = 391,
                            PublishedOn = new DateTime(2019, 1, 6, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8837),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8838)
                        },
                        new
                        {
                            Id = 18,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8877),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-1875-4686",
                            Language = "English",
                            Name = "Chronicles of the Silver Mist",
                            PageCount = 127,
                            PublishedOn = new DateTime(2015, 3, 26, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8876),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8877)
                        },
                        new
                        {
                            Id = 19,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8901),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-1026-9438",
                            Language = "English",
                            Name = "The Midnight Carousel",
                            PageCount = 410,
                            PublishedOn = new DateTime(2022, 10, 25, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8900),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8901)
                        },
                        new
                        {
                            Id = 20,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8967),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-6447-7019",
                            Language = "English",
                            Name = "The Last Voyage of the Star Sailor",
                            PageCount = 255,
                            PublishedOn = new DateTime(2020, 6, 15, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8967),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8968)
                        },
                        new
                        {
                            Id = 21,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8991),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-5009-8801",
                            Language = "English",
                            Name = "The Heirloom of Forgotten Times",
                            PageCount = 459,
                            PublishedOn = new DateTime(2017, 8, 1, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8990),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(8991)
                        },
                        new
                        {
                            Id = 22,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9019),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-5781-6793",
                            Language = "English",
                            Name = "The Last Voyage of the Star Sailor",
                            PageCount = 284,
                            PublishedOn = new DateTime(2022, 3, 23, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9018),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9019)
                        },
                        new
                        {
                            Id = 23,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9088),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7206-5947",
                            Language = "English",
                            Name = "Twilight of the Celestial Court",
                            PageCount = 196,
                            PublishedOn = new DateTime(2022, 7, 6, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9088),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9089)
                        },
                        new
                        {
                            Id = 24,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9112),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-9230-2181",
                            Language = "English",
                            Name = "The Clockmaker's Illusion",
                            PageCount = 155,
                            PublishedOn = new DateTime(2018, 9, 15, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9111),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9112)
                        },
                        new
                        {
                            Id = 25,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9148),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-1000-7262",
                            Language = "English",
                            Name = "Mysteries at the Edge of the Universe",
                            PageCount = 458,
                            PublishedOn = new DateTime(2014, 5, 24, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9147),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9148)
                        },
                        new
                        {
                            Id = 26,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9211),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-1617-3668",
                            Language = "English",
                            Name = "The Last Symphony of Autumn",
                            PageCount = 271,
                            PublishedOn = new DateTime(2017, 12, 30, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9210),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9211)
                        },
                        new
                        {
                            Id = 27,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9242),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-6894-4884",
                            Language = "English",
                            Name = "Lost in the Whispering Forest",
                            PageCount = 157,
                            PublishedOn = new DateTime(2021, 9, 4, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9242),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9243)
                        },
                        new
                        {
                            Id = 28,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9280),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-6062-8487",
                            Language = "English",
                            Name = "Abyss of the Starry Depths",
                            PageCount = 313,
                            PublishedOn = new DateTime(2020, 5, 29, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9280),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9281)
                        },
                        new
                        {
                            Id = 29,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9360),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-1737-6759",
                            Language = "English",
                            Name = "The Dragon's Heir",
                            PageCount = 101,
                            PublishedOn = new DateTime(2016, 7, 6, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9360),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9361)
                        },
                        new
                        {
                            Id = 30,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9397),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-1771-4936",
                            Language = "English",
                            Name = "Shadows over Valoria",
                            PageCount = 329,
                            PublishedOn = new DateTime(2019, 5, 29, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9396),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9397)
                        },
                        new
                        {
                            Id = 31,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9430),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-1465-6500",
                            Language = "English",
                            Name = "The Hidden Kingdom Beyond the Mountains",
                            PageCount = 470,
                            PublishedOn = new DateTime(2021, 11, 15, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9429),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9430)
                        },
                        new
                        {
                            Id = 32,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9486),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7326-9395",
                            Language = "English",
                            Name = "The Alchemist's Shadow",
                            PageCount = 128,
                            PublishedOn = new DateTime(2019, 6, 30, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9486),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9487)
                        },
                        new
                        {
                            Id = 33,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9514),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-2912-2275",
                            Language = "English",
                            Name = "The Painter's Paradox",
                            PageCount = 476,
                            PublishedOn = new DateTime(2017, 8, 11, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9513),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9514)
                        },
                        new
                        {
                            Id = 34,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9550),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-2597-9818",
                            Language = "English",
                            Name = "The Heirloom of Forgotten Times",
                            PageCount = 294,
                            PublishedOn = new DateTime(2021, 3, 12, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9550),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9551)
                        },
                        new
                        {
                            Id = 35,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9617),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-8668-9271",
                            Language = "English",
                            Name = "The Painter's Paradox",
                            PageCount = 378,
                            PublishedOn = new DateTime(2016, 2, 23, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9616),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9617)
                        },
                        new
                        {
                            Id = 36,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9653),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-1571-7795",
                            Language = "English",
                            Name = "Mysteries at the Edge of the Universe",
                            PageCount = 358,
                            PublishedOn = new DateTime(2022, 3, 21, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9653),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9654)
                        },
                        new
                        {
                            Id = 37,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9707),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7211-7106",
                            Language = "English",
                            Name = "The Hidden Kingdom Beyond the Mountains",
                            PageCount = 120,
                            PublishedOn = new DateTime(2017, 1, 28, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9706),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9707)
                        },
                        new
                        {
                            Id = 38,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9740),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-9693-4162",
                            Language = "English",
                            Name = "Mysteries at the Edge of the Universe",
                            PageCount = 351,
                            PublishedOn = new DateTime(2020, 11, 16, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9739),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9741)
                        },
                        new
                        {
                            Id = 39,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9764),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-3308-8242",
                            Language = "English",
                            Name = "Twilight of the Celestial Court",
                            PageCount = 159,
                            PublishedOn = new DateTime(2017, 5, 13, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9763),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9764)
                        },
                        new
                        {
                            Id = 40,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9806),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-8021-5544",
                            Language = "English",
                            Name = "Twilight of the Celestial Court",
                            PageCount = 316,
                            PublishedOn = new DateTime(2019, 1, 9, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9806),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9807)
                        },
                        new
                        {
                            Id = 41,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9862),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-9701-5884",
                            Language = "English",
                            Name = "Mysteries of the Ancient Library",
                            PageCount = 299,
                            PublishedOn = new DateTime(2018, 7, 19, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9861),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9862)
                        },
                        new
                        {
                            Id = 42,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9901),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-2912-2770",
                            Language = "English",
                            Name = "Voices from the Hollow Mountains",
                            PageCount = 476,
                            PublishedOn = new DateTime(2022, 8, 28, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9900),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9901)
                        },
                        new
                        {
                            Id = 43,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9929),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-1526-3261",
                            Language = "English",
                            Name = "The Magician's Reflection",
                            PageCount = 441,
                            PublishedOn = new DateTime(2021, 9, 20, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9929),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9930)
                        },
                        new
                        {
                            Id = 44,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 948, DateTimeKind.Local),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-2907-4196",
                            Language = "English",
                            Name = "The Enigma of the Crystal Towers",
                            PageCount = 253,
                            PublishedOn = new DateTime(2020, 6, 9, 22, 23, 48, 947, DateTimeKind.Local).AddTicks(9999),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 948, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 45,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 948, DateTimeKind.Local).AddTicks(49),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-6897-3493",
                            Language = "English",
                            Name = "The Oracle's Last Prophecy",
                            PageCount = 404,
                            PublishedOn = new DateTime(2014, 12, 14, 22, 23, 48, 948, DateTimeKind.Local).AddTicks(48),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 948, DateTimeKind.Local).AddTicks(49)
                        },
                        new
                        {
                            Id = 46,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 948, DateTimeKind.Local).AddTicks(96),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7287-3626",
                            Language = "English",
                            Name = "Secrets of the Jade Labyrinth",
                            PageCount = 106,
                            PublishedOn = new DateTime(2016, 8, 9, 22, 23, 48, 948, DateTimeKind.Local).AddTicks(95),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 948, DateTimeKind.Local).AddTicks(97)
                        },
                        new
                        {
                            Id = 47,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 948, DateTimeKind.Local).AddTicks(152),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-9123-1688",
                            Language = "English",
                            Name = "Mysteries at the Edge of the Universe",
                            PageCount = 221,
                            PublishedOn = new DateTime(2014, 2, 26, 22, 23, 48, 948, DateTimeKind.Local).AddTicks(151),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 948, DateTimeKind.Local).AddTicks(152)
                        },
                        new
                        {
                            Id = 48,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 948, DateTimeKind.Local).AddTicks(182),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-2552-7236",
                            Language = "English",
                            Name = "Twilight of the Celestial Court",
                            PageCount = 336,
                            PublishedOn = new DateTime(2014, 2, 3, 22, 23, 48, 948, DateTimeKind.Local).AddTicks(181),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 948, DateTimeKind.Local).AddTicks(182)
                        },
                        new
                        {
                            Id = 49,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 948, DateTimeKind.Local).AddTicks(243),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-2412-6771",
                            Language = "English",
                            Name = "Secrets of the Jade Labyrinth",
                            PageCount = 339,
                            PublishedOn = new DateTime(2016, 5, 7, 22, 23, 48, 948, DateTimeKind.Local).AddTicks(242),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 948, DateTimeKind.Local).AddTicks(244)
                        },
                        new
                        {
                            Id = 50,
                            Created = new DateTime(2023, 12, 3, 22, 23, 48, 948, DateTimeKind.Local).AddTicks(291),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7041-1487",
                            Language = "English",
                            Name = "The Meridian of Fate",
                            PageCount = 299,
                            PublishedOn = new DateTime(2022, 3, 20, 22, 23, 48, 948, DateTimeKind.Local).AddTicks(290),
                            Updated = new DateTime(2023, 12, 3, 22, 23, 48, 948, DateTimeKind.Local).AddTicks(291)
                        });
                });

            modelBuilder.Entity("Data.Models.BookGenre", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.HasKey("BookId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("BookGenre");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            GenreId = 22
                        },
                        new
                        {
                            BookId = 1,
                            GenreId = 40
                        },
                        new
                        {
                            BookId = 2,
                            GenreId = 9
                        },
                        new
                        {
                            BookId = 2,
                            GenreId = 19
                        },
                        new
                        {
                            BookId = 3,
                            GenreId = 41
                        },
                        new
                        {
                            BookId = 3,
                            GenreId = 5
                        },
                        new
                        {
                            BookId = 4,
                            GenreId = 45
                        },
                        new
                        {
                            BookId = 4,
                            GenreId = 40
                        },
                        new
                        {
                            BookId = 5,
                            GenreId = 47
                        },
                        new
                        {
                            BookId = 5,
                            GenreId = 36
                        },
                        new
                        {
                            BookId = 6,
                            GenreId = 7
                        },
                        new
                        {
                            BookId = 7,
                            GenreId = 9
                        },
                        new
                        {
                            BookId = 8,
                            GenreId = 21
                        },
                        new
                        {
                            BookId = 8,
                            GenreId = 9
                        },
                        new
                        {
                            BookId = 9,
                            GenreId = 33
                        },
                        new
                        {
                            BookId = 9,
                            GenreId = 36
                        },
                        new
                        {
                            BookId = 10,
                            GenreId = 40
                        },
                        new
                        {
                            BookId = 11,
                            GenreId = 44
                        },
                        new
                        {
                            BookId = 12,
                            GenreId = 2
                        },
                        new
                        {
                            BookId = 13,
                            GenreId = 24
                        },
                        new
                        {
                            BookId = 14,
                            GenreId = 15
                        },
                        new
                        {
                            BookId = 15,
                            GenreId = 22
                        },
                        new
                        {
                            BookId = 16,
                            GenreId = 34
                        },
                        new
                        {
                            BookId = 16,
                            GenreId = 14
                        },
                        new
                        {
                            BookId = 17,
                            GenreId = 44
                        },
                        new
                        {
                            BookId = 18,
                            GenreId = 40
                        },
                        new
                        {
                            BookId = 19,
                            GenreId = 25
                        },
                        new
                        {
                            BookId = 20,
                            GenreId = 38
                        },
                        new
                        {
                            BookId = 21,
                            GenreId = 22
                        },
                        new
                        {
                            BookId = 21,
                            GenreId = 30
                        },
                        new
                        {
                            BookId = 22,
                            GenreId = 36
                        },
                        new
                        {
                            BookId = 23,
                            GenreId = 33
                        },
                        new
                        {
                            BookId = 24,
                            GenreId = 23
                        },
                        new
                        {
                            BookId = 25,
                            GenreId = 48
                        },
                        new
                        {
                            BookId = 26,
                            GenreId = 45
                        },
                        new
                        {
                            BookId = 27,
                            GenreId = 43
                        },
                        new
                        {
                            BookId = 28,
                            GenreId = 7
                        },
                        new
                        {
                            BookId = 28,
                            GenreId = 5
                        },
                        new
                        {
                            BookId = 29,
                            GenreId = 7
                        },
                        new
                        {
                            BookId = 29,
                            GenreId = 12
                        },
                        new
                        {
                            BookId = 30,
                            GenreId = 10
                        },
                        new
                        {
                            BookId = 31,
                            GenreId = 47
                        },
                        new
                        {
                            BookId = 31,
                            GenreId = 6
                        },
                        new
                        {
                            BookId = 32,
                            GenreId = 30
                        },
                        new
                        {
                            BookId = 32,
                            GenreId = 27
                        },
                        new
                        {
                            BookId = 33,
                            GenreId = 30
                        },
                        new
                        {
                            BookId = 34,
                            GenreId = 7
                        },
                        new
                        {
                            BookId = 35,
                            GenreId = 15
                        },
                        new
                        {
                            BookId = 35,
                            GenreId = 34
                        },
                        new
                        {
                            BookId = 36,
                            GenreId = 49
                        },
                        new
                        {
                            BookId = 37,
                            GenreId = 10
                        },
                        new
                        {
                            BookId = 38,
                            GenreId = 22
                        },
                        new
                        {
                            BookId = 39,
                            GenreId = 4
                        },
                        new
                        {
                            BookId = 39,
                            GenreId = 9
                        },
                        new
                        {
                            BookId = 40,
                            GenreId = 28
                        },
                        new
                        {
                            BookId = 41,
                            GenreId = 30
                        },
                        new
                        {
                            BookId = 41,
                            GenreId = 29
                        },
                        new
                        {
                            BookId = 42,
                            GenreId = 3
                        },
                        new
                        {
                            BookId = 43,
                            GenreId = 15
                        },
                        new
                        {
                            BookId = 43,
                            GenreId = 28
                        },
                        new
                        {
                            BookId = 44,
                            GenreId = 47
                        },
                        new
                        {
                            BookId = 44,
                            GenreId = 33
                        },
                        new
                        {
                            BookId = 45,
                            GenreId = 8
                        },
                        new
                        {
                            BookId = 45,
                            GenreId = 22
                        },
                        new
                        {
                            BookId = 46,
                            GenreId = 50
                        },
                        new
                        {
                            BookId = 47,
                            GenreId = 8
                        },
                        new
                        {
                            BookId = 47,
                            GenreId = 22
                        },
                        new
                        {
                            BookId = 48,
                            GenreId = 35
                        },
                        new
                        {
                            BookId = 48,
                            GenreId = 23
                        },
                        new
                        {
                            BookId = 49,
                            GenreId = 16
                        },
                        new
                        {
                            BookId = 49,
                            GenreId = 45
                        },
                        new
                        {
                            BookId = 50,
                            GenreId = 24
                        });
                });

            modelBuilder.Entity("Data.Models.BookReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("ReviewedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReviewedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("BookReviews");
                });

            modelBuilder.Entity("Data.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Historical Fiction"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Young Adult"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Children’s Literature"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Literary Fiction"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Dystopian"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Crime"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Suspense"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Cyberpunk"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Magical Realism"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Gothic"
                        },
                        new
                        {
                            Id = 18,
                            Name = "War"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Post-Apocalyptic"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Western"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Satire"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Biography"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Autobiography"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Self-Help"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Travel"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Cooking"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Health & Fitness"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Graphic Novel"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Poetry"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Play"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Essays"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Journalism"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Steampunk"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Paranormal"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Urban Fantasy"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Epic"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Non-Fiction"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Contemporary"
                        },
                        new
                        {
                            Id = 39,
                            Name = "Classic"
                        },
                        new
                        {
                            Id = 40,
                            Name = "Humor"
                        },
                        new
                        {
                            Id = 41,
                            Name = "Memoir"
                        },
                        new
                        {
                            Id = 42,
                            Name = "Philosophy"
                        },
                        new
                        {
                            Id = 43,
                            Name = "Religion"
                        },
                        new
                        {
                            Id = 44,
                            Name = "True Crime"
                        },
                        new
                        {
                            Id = 45,
                            Name = "Academic"
                        },
                        new
                        {
                            Id = 46,
                            Name = "Self-Improvement"
                        },
                        new
                        {
                            Id = 47,
                            Name = "Chick Lit"
                        },
                        new
                        {
                            Id = 48,
                            Name = "LGBT Literature"
                        },
                        new
                        {
                            Id = 49,
                            Name = "Fairy Tales"
                        },
                        new
                        {
                            Id = 50,
                            Name = "Bildungsroman"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Data.Models.AuthorBook", b =>
                {
                    b.HasOne("Data.Models.Author", "Author")
                        .WithMany("AuthorBooks")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.Book", "Book")
                        .WithMany("AuthorBooks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("Data.Models.BookGenre", b =>
                {
                    b.HasOne("Data.Models.Book", "Book")
                        .WithMany("BookGenres")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.Genre", "Genre")
                        .WithMany("BookGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Data.Models.BookReview", b =>
                {
                    b.HasOne("Data.Models.Book", "Book")
                        .WithMany("BookReviews")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Models.Author", b =>
                {
                    b.Navigation("AuthorBooks");
                });

            modelBuilder.Entity("Data.Models.Book", b =>
                {
                    b.Navigation("AuthorBooks");

                    b.Navigation("BookGenres");

                    b.Navigation("BookReviews");
                });

            modelBuilder.Entity("Data.Models.Genre", b =>
                {
                    b.Navigation("BookGenres");
                });
#pragma warning restore 612, 618
        }
    }
}
