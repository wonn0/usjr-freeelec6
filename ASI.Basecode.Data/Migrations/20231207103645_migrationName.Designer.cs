// <auto-generated />
using System;
using ASI.Basecode.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASI.Basecode.Data.Migrations
{
    [DbContext(typeof(AsiBasecodeDBContext))]
    [Migration("20231207103645_migrationName")]
    partial class migrationName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ASI.Basecode.Data.Models.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ExpiresUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IssuedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("ASI.Basecode.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Data.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Jane",
                            LastName = "Austen"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "George",
                            LastName = "Orwell"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Haruki",
                            LastName = "Murakami"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Toni",
                            LastName = "Morrison"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Leo",
                            LastName = "Tolstoy"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Gabriel García",
                            LastName = "Márquez"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "J.K.",
                            LastName = "Rowling"
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Charles",
                            LastName = "Dickens"
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "Chimamanda Ngozi",
                            LastName = "Adichie"
                        },
                        new
                        {
                            Id = 10,
                            FirstName = "Ernest",
                            LastName = "Hemingway"
                        },
                        new
                        {
                            Id = 11,
                            FirstName = "Fyodor",
                            LastName = "Dostoevsky"
                        },
                        new
                        {
                            Id = 12,
                            FirstName = "Isabel",
                            LastName = "Allende"
                        },
                        new
                        {
                            Id = 13,
                            FirstName = "Mark",
                            LastName = "Twain"
                        },
                        new
                        {
                            Id = 14,
                            FirstName = "Virginia",
                            LastName = "Woolf"
                        },
                        new
                        {
                            Id = 15,
                            FirstName = "James",
                            LastName = "Baldwin"
                        },
                        new
                        {
                            Id = 16,
                            FirstName = "Agatha",
                            LastName = "Christie"
                        },
                        new
                        {
                            Id = 17,
                            FirstName = "J.R.R.",
                            LastName = "Tolkien"
                        },
                        new
                        {
                            Id = 18,
                            FirstName = "Margaret",
                            LastName = "Atwood"
                        },
                        new
                        {
                            Id = 19,
                            FirstName = "Kazuo",
                            LastName = "Ishiguro"
                        },
                        new
                        {
                            Id = 20,
                            FirstName = "Paulo",
                            LastName = "Coelho"
                        },
                        new
                        {
                            Id = 21,
                            FirstName = "Mary",
                            LastName = "Shelley"
                        },
                        new
                        {
                            Id = 22,
                            FirstName = "Salman",
                            LastName = "Rushdie"
                        },
                        new
                        {
                            Id = 23,
                            FirstName = "H.P.",
                            LastName = "Lovecraft"
                        },
                        new
                        {
                            Id = 24,
                            FirstName = "Emily",
                            LastName = "Brontë"
                        },
                        new
                        {
                            Id = 25,
                            FirstName = "Edgar Allan",
                            LastName = "Poe"
                        },
                        new
                        {
                            Id = 26,
                            FirstName = "Langston",
                            LastName = "Hughes"
                        },
                        new
                        {
                            Id = 27,
                            FirstName = "Khaled",
                            LastName = "Hosseini"
                        },
                        new
                        {
                            Id = 28,
                            FirstName = "Oscar",
                            LastName = "Wilde"
                        },
                        new
                        {
                            Id = 29,
                            FirstName = "Stephen",
                            LastName = "King"
                        },
                        new
                        {
                            Id = 30,
                            FirstName = "Maya",
                            LastName = "Angelou"
                        },
                        new
                        {
                            Id = 31,
                            FirstName = "Roald",
                            LastName = "Dahl"
                        },
                        new
                        {
                            Id = 32,
                            FirstName = "Dan",
                            LastName = "Brown"
                        },
                        new
                        {
                            Id = 33,
                            FirstName = "Neil",
                            LastName = "Gaiman"
                        },
                        new
                        {
                            Id = 34,
                            FirstName = "Sylvia",
                            LastName = "Plath"
                        },
                        new
                        {
                            Id = 35,
                            FirstName = "Ian",
                            LastName = "McEwan"
                        },
                        new
                        {
                            Id = 36,
                            FirstName = "Orhan",
                            LastName = "Pamuk"
                        },
                        new
                        {
                            Id = 37,
                            FirstName = "Zadie",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 38,
                            FirstName = "Alice",
                            LastName = "Walker"
                        },
                        new
                        {
                            Id = 39,
                            FirstName = "Kurt",
                            LastName = "Vonnegut"
                        },
                        new
                        {
                            Id = 40,
                            FirstName = "Louise",
                            LastName = "Erdrich"
                        },
                        new
                        {
                            Id = 41,
                            FirstName = "Cormac",
                            LastName = "McCarthy"
                        },
                        new
                        {
                            Id = 42,
                            FirstName = "Philip K.",
                            LastName = "Dick"
                        },
                        new
                        {
                            Id = 43,
                            FirstName = "John",
                            LastName = "Steinbeck"
                        },
                        new
                        {
                            Id = 44,
                            FirstName = "Herman",
                            LastName = "Melville"
                        },
                        new
                        {
                            Id = 45,
                            FirstName = "Charles",
                            LastName = "Bukowski"
                        },
                        new
                        {
                            Id = 46,
                            FirstName = "William",
                            LastName = "Faulkner"
                        },
                        new
                        {
                            Id = 47,
                            FirstName = "Ayn",
                            LastName = "Rand"
                        },
                        new
                        {
                            Id = 48,
                            FirstName = "Gustave",
                            LastName = "Flaubert"
                        },
                        new
                        {
                            Id = 49,
                            FirstName = "Ken",
                            LastName = "Follett"
                        },
                        new
                        {
                            Id = 50,
                            FirstName = "Arthur Conan",
                            LastName = "Doyle"
                        });
                });

            modelBuilder.Entity("Data.Models.AuthorBook", b =>
                {
                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.HasKey("AuthorId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("AuthorBook");

                    b.HasData(
                        new
                        {
                            AuthorId = 4,
                            BookId = 1
                        },
                        new
                        {
                            AuthorId = 28,
                            BookId = 2
                        },
                        new
                        {
                            AuthorId = 39,
                            BookId = 2
                        },
                        new
                        {
                            AuthorId = 37,
                            BookId = 3
                        },
                        new
                        {
                            AuthorId = 8,
                            BookId = 3
                        },
                        new
                        {
                            AuthorId = 50,
                            BookId = 4
                        },
                        new
                        {
                            AuthorId = 16,
                            BookId = 5
                        },
                        new
                        {
                            AuthorId = 46,
                            BookId = 6
                        },
                        new
                        {
                            AuthorId = 41,
                            BookId = 7
                        },
                        new
                        {
                            AuthorId = 28,
                            BookId = 8
                        },
                        new
                        {
                            AuthorId = 25,
                            BookId = 8
                        },
                        new
                        {
                            AuthorId = 14,
                            BookId = 8
                        },
                        new
                        {
                            AuthorId = 36,
                            BookId = 9
                        },
                        new
                        {
                            AuthorId = 47,
                            BookId = 10
                        },
                        new
                        {
                            AuthorId = 49,
                            BookId = 10
                        },
                        new
                        {
                            AuthorId = 27,
                            BookId = 10
                        },
                        new
                        {
                            AuthorId = 46,
                            BookId = 11
                        },
                        new
                        {
                            AuthorId = 16,
                            BookId = 11
                        },
                        new
                        {
                            AuthorId = 18,
                            BookId = 12
                        },
                        new
                        {
                            AuthorId = 33,
                            BookId = 13
                        },
                        new
                        {
                            AuthorId = 27,
                            BookId = 13
                        },
                        new
                        {
                            AuthorId = 37,
                            BookId = 14
                        },
                        new
                        {
                            AuthorId = 29,
                            BookId = 15
                        },
                        new
                        {
                            AuthorId = 50,
                            BookId = 15
                        },
                        new
                        {
                            AuthorId = 14,
                            BookId = 16
                        },
                        new
                        {
                            AuthorId = 6,
                            BookId = 16
                        },
                        new
                        {
                            AuthorId = 41,
                            BookId = 16
                        },
                        new
                        {
                            AuthorId = 31,
                            BookId = 17
                        },
                        new
                        {
                            AuthorId = 36,
                            BookId = 17
                        },
                        new
                        {
                            AuthorId = 22,
                            BookId = 18
                        },
                        new
                        {
                            AuthorId = 25,
                            BookId = 18
                        },
                        new
                        {
                            AuthorId = 17,
                            BookId = 19
                        },
                        new
                        {
                            AuthorId = 9,
                            BookId = 19
                        },
                        new
                        {
                            AuthorId = 35,
                            BookId = 19
                        },
                        new
                        {
                            AuthorId = 22,
                            BookId = 20
                        },
                        new
                        {
                            AuthorId = 10,
                            BookId = 20
                        },
                        new
                        {
                            AuthorId = 13,
                            BookId = 21
                        },
                        new
                        {
                            AuthorId = 1,
                            BookId = 21
                        },
                        new
                        {
                            AuthorId = 35,
                            BookId = 22
                        },
                        new
                        {
                            AuthorId = 26,
                            BookId = 22
                        },
                        new
                        {
                            AuthorId = 44,
                            BookId = 23
                        },
                        new
                        {
                            AuthorId = 41,
                            BookId = 24
                        },
                        new
                        {
                            AuthorId = 7,
                            BookId = 25
                        },
                        new
                        {
                            AuthorId = 46,
                            BookId = 25
                        },
                        new
                        {
                            AuthorId = 22,
                            BookId = 26
                        },
                        new
                        {
                            AuthorId = 23,
                            BookId = 26
                        },
                        new
                        {
                            AuthorId = 8,
                            BookId = 26
                        },
                        new
                        {
                            AuthorId = 38,
                            BookId = 27
                        },
                        new
                        {
                            AuthorId = 22,
                            BookId = 27
                        },
                        new
                        {
                            AuthorId = 6,
                            BookId = 27
                        },
                        new
                        {
                            AuthorId = 6,
                            BookId = 28
                        },
                        new
                        {
                            AuthorId = 28,
                            BookId = 28
                        },
                        new
                        {
                            AuthorId = 10,
                            BookId = 28
                        },
                        new
                        {
                            AuthorId = 14,
                            BookId = 29
                        },
                        new
                        {
                            AuthorId = 1,
                            BookId = 30
                        },
                        new
                        {
                            AuthorId = 25,
                            BookId = 31
                        },
                        new
                        {
                            AuthorId = 26,
                            BookId = 32
                        },
                        new
                        {
                            AuthorId = 9,
                            BookId = 32
                        },
                        new
                        {
                            AuthorId = 15,
                            BookId = 33
                        },
                        new
                        {
                            AuthorId = 30,
                            BookId = 33
                        },
                        new
                        {
                            AuthorId = 27,
                            BookId = 34
                        },
                        new
                        {
                            AuthorId = 21,
                            BookId = 34
                        },
                        new
                        {
                            AuthorId = 37,
                            BookId = 35
                        },
                        new
                        {
                            AuthorId = 6,
                            BookId = 35
                        },
                        new
                        {
                            AuthorId = 25,
                            BookId = 35
                        },
                        new
                        {
                            AuthorId = 31,
                            BookId = 36
                        },
                        new
                        {
                            AuthorId = 34,
                            BookId = 36
                        },
                        new
                        {
                            AuthorId = 1,
                            BookId = 36
                        },
                        new
                        {
                            AuthorId = 4,
                            BookId = 37
                        },
                        new
                        {
                            AuthorId = 19,
                            BookId = 37
                        },
                        new
                        {
                            AuthorId = 29,
                            BookId = 38
                        },
                        new
                        {
                            AuthorId = 46,
                            BookId = 39
                        },
                        new
                        {
                            AuthorId = 9,
                            BookId = 40
                        },
                        new
                        {
                            AuthorId = 12,
                            BookId = 40
                        },
                        new
                        {
                            AuthorId = 14,
                            BookId = 40
                        },
                        new
                        {
                            AuthorId = 30,
                            BookId = 41
                        },
                        new
                        {
                            AuthorId = 27,
                            BookId = 41
                        },
                        new
                        {
                            AuthorId = 47,
                            BookId = 42
                        },
                        new
                        {
                            AuthorId = 36,
                            BookId = 42
                        },
                        new
                        {
                            AuthorId = 28,
                            BookId = 42
                        },
                        new
                        {
                            AuthorId = 23,
                            BookId = 43
                        },
                        new
                        {
                            AuthorId = 10,
                            BookId = 43
                        },
                        new
                        {
                            AuthorId = 36,
                            BookId = 44
                        },
                        new
                        {
                            AuthorId = 13,
                            BookId = 44
                        },
                        new
                        {
                            AuthorId = 30,
                            BookId = 44
                        },
                        new
                        {
                            AuthorId = 15,
                            BookId = 45
                        },
                        new
                        {
                            AuthorId = 47,
                            BookId = 45
                        },
                        new
                        {
                            AuthorId = 41,
                            BookId = 46
                        },
                        new
                        {
                            AuthorId = 11,
                            BookId = 46
                        },
                        new
                        {
                            AuthorId = 4,
                            BookId = 47
                        },
                        new
                        {
                            AuthorId = 40,
                            BookId = 47
                        },
                        new
                        {
                            AuthorId = 43,
                            BookId = 47
                        },
                        new
                        {
                            AuthorId = 12,
                            BookId = 48
                        },
                        new
                        {
                            AuthorId = 5,
                            BookId = 49
                        },
                        new
                        {
                            AuthorId = 9,
                            BookId = 50
                        },
                        new
                        {
                            AuthorId = 49,
                            BookId = 50
                        },
                        new
                        {
                            AuthorId = 34,
                            BookId = 50
                        });
                });

            modelBuilder.Entity("Data.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PageCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublishedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(3770),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-6789-7890",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSCBozk3sxY9-hx2apV246Aop5hzCKe1Yoe2I_bVICUPiXNu5IXSaeKY0rWJt5qOVEYMRo&usqp=CAU",
                            Language = "English",
                            Name = "The Last Voyage of the Star Sailor",
                            PageCount = 141,
                            PublishedOn = new DateTime(2020, 4, 1, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(3710),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(3770)
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(3910),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-5431-5846",
                            Image = "https://getcovers.com/wp-content/uploads/2022/01/cover-10-e1642585646366.jpeg",
                            Language = "English",
                            Name = "The Magician's Reflection",
                            PageCount = 101,
                            PublishedOn = new DateTime(2019, 3, 17, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(3910),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(3910)
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(3960),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7714-2476",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRSDQnigiVI5kU-UYO_Ourb8H5uaXUP-FYYZ7SFSqMSPTb3ZcCxg2rBwRqcINTKAp7uVNQ&usqp=CAU",
                            Language = "English",
                            Name = "The Scribe's Enigma",
                            PageCount = 490,
                            PublishedOn = new DateTime(2015, 1, 21, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(3960),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(3960)
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4000),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-9768-6022",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSCBozk3sxY9-hx2apV246Aop5hzCKe1Yoe2I_bVICUPiXNu5IXSaeKY0rWJt5qOVEYMRo&usqp=CAU",
                            Language = "English",
                            Name = "Dance of the Fireflies",
                            PageCount = 499,
                            PublishedOn = new DateTime(2019, 12, 5, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4000),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4000)
                        },
                        new
                        {
                            Id = 5,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4040),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-2702-9206",
                            Image = "https://d1csarkz8obe9u.cloudfront.net/posterpreviews/contemporary-fiction-night-time-book-cover-design-template-1be47835c3058eb42211574e0c4ed8bf_screen.jpg?ts=1698210220",
                            Language = "English",
                            Name = "Lost in the Whispering Forest",
                            PageCount = 403,
                            PublishedOn = new DateTime(2014, 12, 17, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4040),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4040)
                        },
                        new
                        {
                            Id = 6,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4080),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-1001-9239",
                            Image = "https://encrypted-tbn0.gstatic.com/images?qcd=tbn:ANd9GcRWlgwga9KKQCQo2tPQ1-vkIEdIFX9Dp7OJwg&usqp=CAU",
                            Language = "English",
                            Name = "The Painter's Paradox",
                            PageCount = 114,
                            PublishedOn = new DateTime(2020, 10, 2, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4080),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4080)
                        },
                        new
                        {
                            Id = 7,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4110),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-8228-3615",
                            Image = "https://1stwebdesigner.com/wp-content/uploads/2011/05/the-great-gatsby.jpg",
                            Language = "English",
                            Name = "Legends of the Celestial Atlas",
                            PageCount = 325,
                            PublishedOn = new DateTime(2022, 6, 11, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4110),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4110)
                        },
                        new
                        {
                            Id = 8,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4170),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7234-2964",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQjSjNwRh91T9hdJJ2YqZX8ZD3mO30cNsDgWg&usqp=CAU",
                            Language = "English",
                            Name = "The Ivory Tower of Secrets",
                            PageCount = 217,
                            PublishedOn = new DateTime(2022, 11, 5, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4170),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4180)
                        },
                        new
                        {
                            Id = 9,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4230),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-3684-1649",
                            Image = "https://1stwebdesigner.com/wp-content/uploads/2011/05/the-great-gatsby.jpg",
                            Language = "English",
                            Name = "The Labyrinth of Lost Souls",
                            PageCount = 264,
                            PublishedOn = new DateTime(2017, 8, 22, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4230),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4230)
                        },
                        new
                        {
                            Id = 10,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4260),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-4023-6072",
                            Image = "https://encrypted-tbn0.gstatic.com/images?qcd=tbn:ANd9GcRWlgwga9KKQCQo2tPQ1-vkIEdIFX9Dp7OJwg&usqp=CAU",
                            Language = "English",
                            Name = "The Hidden Kingdom Beyond the Mountains",
                            PageCount = 305,
                            PublishedOn = new DateTime(2016, 8, 6, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4260),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4260)
                        },
                        new
                        {
                            Id = 11,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4360),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-4002-3465",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcThlIbwUK0HrnP1xp7l7k5qXs2goRkaFH62Zg&usqp=CAU",
                            Language = "English",
                            Name = "The Hidden Kingdom Beyond the Mountains",
                            PageCount = 352,
                            PublishedOn = new DateTime(2022, 9, 5, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4350),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4360)
                        },
                        new
                        {
                            Id = 12,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4400),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-2702-8259",
                            Image = "https://1stwebdesigner.com/wp-content/uploads/2011/05/the-great-gatsby.jpg",
                            Language = "English",
                            Name = "Voices from the Hollow Mountains",
                            PageCount = 310,
                            PublishedOn = new DateTime(2021, 11, 9, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4400),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4400)
                        },
                        new
                        {
                            Id = 13,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4430),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-9289-2674",
                            Image = "https://1stwebdesigner.com/wp-content/uploads/2011/05/the-great-gatsby.jpg",
                            Language = "English",
                            Name = "The Secret of the Astral Plane",
                            PageCount = 489,
                            PublishedOn = new DateTime(2016, 5, 16, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4430),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4430)
                        },
                        new
                        {
                            Id = 14,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4460),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-2404-1624",
                            Image = "https://www.adobe.com/express/create/cover/media_1316972d23c5f2032e101572da69ae4aec3259fed.jpeg?width=400&format=jpeg&optimize=medium",
                            Language = "English",
                            Name = "Abyss of the Starry Depths",
                            PageCount = 476,
                            PublishedOn = new DateTime(2022, 3, 25, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4460),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4460)
                        },
                        new
                        {
                            Id = 15,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4490),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-3642-8588",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQjSjNwRh91T9hdJJ2YqZX8ZD3mO30cNsDgWg&usqp=CAU",
                            Language = "English",
                            Name = "The Emerald Conundrum",
                            PageCount = 334,
                            PublishedOn = new DateTime(2021, 12, 12, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4490),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4490)
                        },
                        new
                        {
                            Id = 16,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4570),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-8765-9619",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRSDQnigiVI5kU-UYO_Ourb8H5uaXUP-FYYZ7SFSqMSPTb3ZcCxg2rBwRqcINTKAp7uVNQ&usqp=CAU",
                            Language = "English",
                            Name = "The Heirloom of Forgotten Times",
                            PageCount = 160,
                            PublishedOn = new DateTime(2018, 11, 12, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4570),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4570)
                        },
                        new
                        {
                            Id = 17,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4620),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-4283-6260",
                            Image = "https://getcovers.com/wp-content/uploads/2022/01/cover-10-e1642585646366.jpeg",
                            Language = "English",
                            Name = "The Meridian of Fate",
                            PageCount = 293,
                            PublishedOn = new DateTime(2020, 4, 6, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4620),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4630)
                        },
                        new
                        {
                            Id = 18,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4680),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-4121-9565",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRSDQnigiVI5kU-UYO_Ourb8H5uaXUP-FYYZ7SFSqMSPTb3ZcCxg2rBwRqcINTKAp7uVNQ&usqp=CAU",
                            Language = "English",
                            Name = "Dreams of the Sunken City",
                            PageCount = 234,
                            PublishedOn = new DateTime(2016, 12, 18, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4670),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4680)
                        },
                        new
                        {
                            Id = 19,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4710),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7710-9488",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQjSjNwRh91T9hdJJ2YqZX8ZD3mO30cNsDgWg&usqp=CAU",
                            Language = "English",
                            Name = "Abyss of the Starry Depths",
                            PageCount = 233,
                            PublishedOn = new DateTime(2016, 6, 22, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4710),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4710)
                        },
                        new
                        {
                            Id = 20,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4770),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-3981-5883",
                            Image = "https://bukovero.com/wp-content/uploads/2016/07/Harry_Potter_and_the_Cursed_Child_Special_Rehearsal_Edition_Book_Cover.jpg",
                            Language = "English",
                            Name = "The Hidden Kingdom Beyond the Mountains",
                            PageCount = 119,
                            PublishedOn = new DateTime(2014, 8, 21, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4770),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4770)
                        },
                        new
                        {
                            Id = 21,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4830),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-2609-7864",
                            Image = "https://compote.slate.com/images/4262aedd-78f0-4669-a1b9-c7d08c67897a.jpeg?crop=693%2C1040%2Cx0%2Cy0",
                            Language = "English",
                            Name = "The Silver Key of Dreams",
                            PageCount = 268,
                            PublishedOn = new DateTime(2017, 5, 22, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4830),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4830)
                        },
                        new
                        {
                            Id = 22,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4930),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-8368-7668",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSCBozk3sxY9-hx2apV246Aop5hzCKe1Yoe2I_bVICUPiXNu5IXSaeKY0rWJt5qOVEYMRo&usqp=CAU",
                            Language = "English",
                            Name = "Veil of the Northern Lights",
                            PageCount = 185,
                            PublishedOn = new DateTime(2018, 8, 24, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4930),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4930)
                        },
                        new
                        {
                            Id = 23,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4970),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-3511-4184",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSCBozk3sxY9-hx2apV246Aop5hzCKe1Yoe2I_bVICUPiXNu5IXSaeKY0rWJt5qOVEYMRo&usqp=CAU",
                            Language = "English",
                            Name = "Dance of the Fireflies",
                            PageCount = 229,
                            PublishedOn = new DateTime(2016, 11, 6, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4970),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(4980)
                        },
                        new
                        {
                            Id = 24,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5000),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-3310-7469",
                            Image = "https://www.shutterstock.com/blog/wp-content/uploads/sites/5/2017/10/the-50-coolest-book-covers-47.jpg",
                            Language = "English",
                            Name = "The Garden of Timeless Secrets",
                            PageCount = 279,
                            PublishedOn = new DateTime(2021, 1, 13, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5000),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5000)
                        },
                        new
                        {
                            Id = 25,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5080),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-5850-5401",
                            Image = "https://i.guim.co.uk/img/media/af1ea48f1eeaab4300691b35f585d326e6ed24bb/0_0_784_1200/master/784.jpg?width=700&quality=85&auto=format&fit=max&s=07b76b55b36cf2f0b56086c33d9e2763",
                            Language = "English",
                            Name = "Lost in the Whispering Forest",
                            PageCount = 309,
                            PublishedOn = new DateTime(2021, 8, 6, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5080),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5080)
                        },
                        new
                        {
                            Id = 26,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5130),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-2093-3552",
                            Image = "https://getcovers.com/wp-content/uploads/2022/01/cover-10-e1642585646366.jpeg",
                            Language = "English",
                            Name = "Eclipses of the Past",
                            PageCount = 131,
                            PublishedOn = new DateTime(2021, 9, 22, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5130),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5130)
                        },
                        new
                        {
                            Id = 27,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5240),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7267-9681",
                            Image = "https://www.adobe.com/express/create/cover/media_1316972d23c5f2032e101572da69ae4aec3259fed.jpeg?width=400&format=jpeg&optimize=medium",
                            Language = "English",
                            Name = "The Garden of Timeless Secrets",
                            PageCount = 392,
                            PublishedOn = new DateTime(2015, 8, 25, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5240),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5240)
                        },
                        new
                        {
                            Id = 28,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5290),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-6315-6895",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRSDQnigiVI5kU-UYO_Ourb8H5uaXUP-FYYZ7SFSqMSPTb3ZcCxg2rBwRqcINTKAp7uVNQ&usqp=CAU",
                            Language = "English",
                            Name = "The Labyrinth of Lost Souls",
                            PageCount = 302,
                            PublishedOn = new DateTime(2020, 9, 28, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5280),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5290)
                        },
                        new
                        {
                            Id = 29,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5320),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-9639-4277",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcThlIbwUK0HrnP1xp7l7k5qXs2goRkaFH62Zg&usqp=CAU",
                            Language = "English",
                            Name = "Whispers from the Other Side",
                            PageCount = 408,
                            PublishedOn = new DateTime(2021, 7, 22, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5320),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5320)
                        },
                        new
                        {
                            Id = 30,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5360),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7327-7753",
                            Image = "https://getcovers.com/wp-content/uploads/2022/01/cover-10-e1642585646366.jpeg",
                            Language = "English",
                            Name = "Secrets of the Jade Labyrinth",
                            PageCount = 298,
                            PublishedOn = new DateTime(2021, 2, 26, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5360),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5360)
                        },
                        new
                        {
                            Id = 31,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5390),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-1235-2218",
                            Image = "https://d1csarkz8obe9u.cloudfront.net/posterpreviews/contemporary-fiction-night-time-book-cover-design-template-1be47835c3058eb42211574e0c4ed8bf_screen.jpg?ts=1698210220",
                            Language = "English",
                            Name = "The Enigma of the Crystal Towers",
                            PageCount = 110,
                            PublishedOn = new DateTime(2017, 6, 27, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5390),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5400)
                        },
                        new
                        {
                            Id = 32,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5430),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-9740-3252",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcThlIbwUK0HrnP1xp7l7k5qXs2goRkaFH62Zg&usqp=CAU",
                            Language = "English",
                            Name = "The Last Voyage of the Star Sailor",
                            PageCount = 365,
                            PublishedOn = new DateTime(2021, 3, 24, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5430),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5430)
                        },
                        new
                        {
                            Id = 33,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5490),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-6354-7306",
                            Image = "https://getcovers.com/wp-content/uploads/2022/01/cover-10-e1642585646366.jpeg",
                            Language = "English",
                            Name = "The Secret of the Astral Plane",
                            PageCount = 253,
                            PublishedOn = new DateTime(2020, 4, 29, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5490),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5490)
                        },
                        new
                        {
                            Id = 34,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5530),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-4438-7572",
                            Image = "https://i.guim.co.uk/img/media/af1ea48f1eeaab4300691b35f585d326e6ed24bb/0_0_784_1200/master/784.jpg?width=700&quality=85&auto=format&fit=max&s=07b76b55b36cf2f0b56086c33d9e2763",
                            Language = "English",
                            Name = "The Silver Key of Dreams",
                            PageCount = 456,
                            PublishedOn = new DateTime(2014, 11, 12, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5530),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5530)
                        },
                        new
                        {
                            Id = 35,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5570),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7584-9226",
                            Image = "https://www.adobe.com/express/create/cover/media_1e2dc95275528ac1678bc1a3f0ea5f348dc813591.jpeg?width=750&format=jpeg&optimize=medium",
                            Language = "English",
                            Name = "Chronicles of the Silver Mist",
                            PageCount = 228,
                            PublishedOn = new DateTime(2016, 2, 15, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5570),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5570)
                        },
                        new
                        {
                            Id = 36,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5600),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7432-2181",
                            Image = "https://encrypted-tbn0.gstatic.com/images?qcd=tbn:ANd9GcRWlgwga9KKQCQo2tPQ1-vkIEdIFX9Dp7OJwg&usqp=CAU",
                            Language = "English",
                            Name = "The Labyrinth of Lost Souls",
                            PageCount = 307,
                            PublishedOn = new DateTime(2017, 6, 27, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5600),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5600)
                        },
                        new
                        {
                            Id = 37,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5650),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-8614-8936",
                            Image = "https://d1csarkz8obe9u.cloudfront.net/posterpreviews/contemporary-fiction-night-time-book-cover-design-template-1be47835c3058eb42211574e0c4ed8bf_screen.jpg?ts=1698210220",
                            Language = "English",
                            Name = "Twilight of the Celestial Court",
                            PageCount = 463,
                            PublishedOn = new DateTime(2020, 8, 17, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5650),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5650)
                        },
                        new
                        {
                            Id = 38,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5710),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-5381-9686",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTP-NlVbe_m7VER_lfAVbKpyo2Shp9Wv6pLMg&usqp=CAU",
                            Language = "English",
                            Name = "The Alchemist's Shadow",
                            PageCount = 372,
                            PublishedOn = new DateTime(2020, 2, 3, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5710),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5710)
                        },
                        new
                        {
                            Id = 39,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5760),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-1961-6763",
                            Image = "https://1stwebdesigner.com/wp-content/uploads/2011/05/the-great-gatsby.jpg",
                            Language = "English",
                            Name = "The Ivory Tower of Secrets",
                            PageCount = 327,
                            PublishedOn = new DateTime(2018, 5, 12, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5760),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5760)
                        },
                        new
                        {
                            Id = 40,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5790),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-3762-1268",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSCBozk3sxY9-hx2apV246Aop5hzCKe1Yoe2I_bVICUPiXNu5IXSaeKY0rWJt5qOVEYMRo&usqp=CAU",
                            Language = "English",
                            Name = "Dance of the Fireflies",
                            PageCount = 458,
                            PublishedOn = new DateTime(2015, 9, 6, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5780),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5790)
                        },
                        new
                        {
                            Id = 41,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5830),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-6347-2850",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcThlIbwUK0HrnP1xp7l7k5qXs2goRkaFH62Zg&usqp=CAU",
                            Language = "English",
                            Name = "Chronicle of the Shattered Lands",
                            PageCount = 229,
                            PublishedOn = new DateTime(2019, 11, 10, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5830),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5830)
                        },
                        new
                        {
                            Id = 42,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5890),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7428-5408",
                            Image = "https://encrypted-tbn0.gstatic.com/images?qcd=tbn:ANd9GcRWlgwga9KKQCQo2tPQ1-vkIEdIFX9Dp7OJwg&usqp=CAU",
                            Language = "English",
                            Name = "The Dragon's Heir",
                            PageCount = 314,
                            PublishedOn = new DateTime(2020, 6, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5880),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5890)
                        },
                        new
                        {
                            Id = 43,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5930),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-8317-8845",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcThlIbwUK0HrnP1xp7l7k5qXs2goRkaFH62Zg&usqp=CAU",
                            Language = "English",
                            Name = "The Emerald Conundrum",
                            PageCount = 122,
                            PublishedOn = new DateTime(2017, 7, 28, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5930),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(5930)
                        },
                        new
                        {
                            Id = 44,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(6010),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-6145-3638",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRSDQnigiVI5kU-UYO_Ourb8H5uaXUP-FYYZ7SFSqMSPTb3ZcCxg2rBwRqcINTKAp7uVNQ&usqp=CAU",
                            Language = "English",
                            Name = "The Enigma of the Crystal Towers",
                            PageCount = 437,
                            PublishedOn = new DateTime(2019, 9, 21, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(6000),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(6010)
                        },
                        new
                        {
                            Id = 45,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(6060),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-8976-3850",
                            Image = "https://d1csarkz8obe9u.cloudfront.net/posterpreviews/contemporary-fiction-night-time-book-cover-design-template-1be47835c3058eb42211574e0c4ed8bf_screen.jpg?ts=1698210220",
                            Language = "English",
                            Name = "Mysteries at the Edge of the Universe",
                            PageCount = 402,
                            PublishedOn = new DateTime(2018, 4, 23, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(6060),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(6060)
                        },
                        new
                        {
                            Id = 46,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(6110),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-4328-2076",
                            Image = "https://i.guim.co.uk/img/media/af1ea48f1eeaab4300691b35f585d326e6ed24bb/0_0_784_1200/master/784.jpg?width=700&quality=85&auto=format&fit=max&s=07b76b55b36cf2f0b56086c33d9e2763",
                            Language = "English",
                            Name = "Shadows over Valoria",
                            PageCount = 451,
                            PublishedOn = new DateTime(2022, 2, 24, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(6100),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(6110)
                        },
                        new
                        {
                            Id = 47,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(6160),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-4971-2449",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTP-NlVbe_m7VER_lfAVbKpyo2Shp9Wv6pLMg&usqp=CAU",
                            Language = "English",
                            Name = "Whispers from the Other Side",
                            PageCount = 370,
                            PublishedOn = new DateTime(2014, 1, 1, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(6160),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(6160)
                        },
                        new
                        {
                            Id = 48,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(6210),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-1438-3387",
                            Image = "https://www.adobe.com/express/create/cover/media_1e2dc95275528ac1678bc1a3f0ea5f348dc813591.jpeg?width=750&format=jpeg&optimize=medium",
                            Language = "English",
                            Name = "Eclipses of the Past",
                            PageCount = 368,
                            PublishedOn = new DateTime(2015, 7, 1, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(6200),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(6210)
                        },
                        new
                        {
                            Id = 49,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(6230),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7943-4832",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSCBozk3sxY9-hx2apV246Aop5hzCKe1Yoe2I_bVICUPiXNu5IXSaeKY0rWJt5qOVEYMRo&usqp=CAU",
                            Language = "English",
                            Name = "Eclipses of the Past",
                            PageCount = 437,
                            PublishedOn = new DateTime(2019, 10, 19, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(6230),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(6230)
                        },
                        new
                        {
                            Id = 50,
                            Created = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(6270),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-8125-9412",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRSDQnigiVI5kU-UYO_Ourb8H5uaXUP-FYYZ7SFSqMSPTb3ZcCxg2rBwRqcINTKAp7uVNQ&usqp=CAU",
                            Language = "English",
                            Name = "The Ivory Tower of Secrets",
                            PageCount = 319,
                            PublishedOn = new DateTime(2018, 6, 15, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(6270),
                            Updated = new DateTime(2023, 12, 7, 18, 36, 45, 233, DateTimeKind.Local).AddTicks(6270)
                        });
                });

            modelBuilder.Entity("Data.Models.BookGenre", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.HasKey("BookId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("BookGenre");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            GenreId = 4
                        },
                        new
                        {
                            BookId = 1,
                            GenreId = 11
                        },
                        new
                        {
                            BookId = 2,
                            GenreId = 15
                        },
                        new
                        {
                            BookId = 3,
                            GenreId = 6
                        },
                        new
                        {
                            BookId = 3,
                            GenreId = 1
                        },
                        new
                        {
                            BookId = 4,
                            GenreId = 16
                        },
                        new
                        {
                            BookId = 5,
                            GenreId = 23
                        },
                        new
                        {
                            BookId = 5,
                            GenreId = 36
                        },
                        new
                        {
                            BookId = 6,
                            GenreId = 4
                        },
                        new
                        {
                            BookId = 7,
                            GenreId = 35
                        },
                        new
                        {
                            BookId = 8,
                            GenreId = 43
                        },
                        new
                        {
                            BookId = 8,
                            GenreId = 23
                        },
                        new
                        {
                            BookId = 9,
                            GenreId = 14
                        },
                        new
                        {
                            BookId = 10,
                            GenreId = 34
                        },
                        new
                        {
                            BookId = 11,
                            GenreId = 19
                        },
                        new
                        {
                            BookId = 12,
                            GenreId = 12
                        },
                        new
                        {
                            BookId = 13,
                            GenreId = 22
                        },
                        new
                        {
                            BookId = 14,
                            GenreId = 17
                        },
                        new
                        {
                            BookId = 15,
                            GenreId = 24
                        },
                        new
                        {
                            BookId = 15,
                            GenreId = 9
                        },
                        new
                        {
                            BookId = 16,
                            GenreId = 30
                        },
                        new
                        {
                            BookId = 16,
                            GenreId = 38
                        },
                        new
                        {
                            BookId = 17,
                            GenreId = 49
                        },
                        new
                        {
                            BookId = 17,
                            GenreId = 30
                        },
                        new
                        {
                            BookId = 18,
                            GenreId = 42
                        },
                        new
                        {
                            BookId = 19,
                            GenreId = 14
                        },
                        new
                        {
                            BookId = 19,
                            GenreId = 12
                        },
                        new
                        {
                            BookId = 20,
                            GenreId = 15
                        },
                        new
                        {
                            BookId = 20,
                            GenreId = 7
                        },
                        new
                        {
                            BookId = 21,
                            GenreId = 4
                        },
                        new
                        {
                            BookId = 21,
                            GenreId = 11
                        },
                        new
                        {
                            BookId = 22,
                            GenreId = 7
                        },
                        new
                        {
                            BookId = 23,
                            GenreId = 21
                        },
                        new
                        {
                            BookId = 24,
                            GenreId = 3
                        },
                        new
                        {
                            BookId = 24,
                            GenreId = 46
                        },
                        new
                        {
                            BookId = 25,
                            GenreId = 44
                        },
                        new
                        {
                            BookId = 25,
                            GenreId = 1
                        },
                        new
                        {
                            BookId = 26,
                            GenreId = 19
                        },
                        new
                        {
                            BookId = 26,
                            GenreId = 9
                        },
                        new
                        {
                            BookId = 27,
                            GenreId = 7
                        },
                        new
                        {
                            BookId = 28,
                            GenreId = 41
                        },
                        new
                        {
                            BookId = 29,
                            GenreId = 34
                        },
                        new
                        {
                            BookId = 29,
                            GenreId = 7
                        },
                        new
                        {
                            BookId = 30,
                            GenreId = 46
                        },
                        new
                        {
                            BookId = 30,
                            GenreId = 1
                        },
                        new
                        {
                            BookId = 31,
                            GenreId = 32
                        },
                        new
                        {
                            BookId = 31,
                            GenreId = 19
                        },
                        new
                        {
                            BookId = 32,
                            GenreId = 48
                        },
                        new
                        {
                            BookId = 32,
                            GenreId = 36
                        },
                        new
                        {
                            BookId = 33,
                            GenreId = 5
                        },
                        new
                        {
                            BookId = 34,
                            GenreId = 32
                        },
                        new
                        {
                            BookId = 35,
                            GenreId = 6
                        },
                        new
                        {
                            BookId = 35,
                            GenreId = 48
                        },
                        new
                        {
                            BookId = 36,
                            GenreId = 31
                        },
                        new
                        {
                            BookId = 37,
                            GenreId = 22
                        },
                        new
                        {
                            BookId = 37,
                            GenreId = 29
                        },
                        new
                        {
                            BookId = 38,
                            GenreId = 16
                        },
                        new
                        {
                            BookId = 39,
                            GenreId = 16
                        },
                        new
                        {
                            BookId = 40,
                            GenreId = 33
                        },
                        new
                        {
                            BookId = 41,
                            GenreId = 44
                        },
                        new
                        {
                            BookId = 41,
                            GenreId = 39
                        },
                        new
                        {
                            BookId = 42,
                            GenreId = 36
                        },
                        new
                        {
                            BookId = 43,
                            GenreId = 43
                        },
                        new
                        {
                            BookId = 43,
                            GenreId = 10
                        },
                        new
                        {
                            BookId = 44,
                            GenreId = 37
                        },
                        new
                        {
                            BookId = 44,
                            GenreId = 50
                        },
                        new
                        {
                            BookId = 45,
                            GenreId = 46
                        },
                        new
                        {
                            BookId = 45,
                            GenreId = 41
                        },
                        new
                        {
                            BookId = 46,
                            GenreId = 24
                        },
                        new
                        {
                            BookId = 46,
                            GenreId = 37
                        },
                        new
                        {
                            BookId = 47,
                            GenreId = 3
                        },
                        new
                        {
                            BookId = 47,
                            GenreId = 42
                        },
                        new
                        {
                            BookId = 48,
                            GenreId = 24
                        },
                        new
                        {
                            BookId = 49,
                            GenreId = 24
                        },
                        new
                        {
                            BookId = 50,
                            GenreId = 13
                        });
                });

            modelBuilder.Entity("Data.Models.BookReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("ReviewedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReviewedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("BookReviews");
                });

            modelBuilder.Entity("Data.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Historical Fiction"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Young Adult"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Children’s Literature"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Literary Fiction"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Dystopian"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Crime"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Suspense"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Cyberpunk"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Magical Realism"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Gothic"
                        },
                        new
                        {
                            Id = 18,
                            Name = "War"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Post-Apocalyptic"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Western"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Satire"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Biography"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Autobiography"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Self-Help"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Travel"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Cooking"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Health & Fitness"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Graphic Novel"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Poetry"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Play"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Essays"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Journalism"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Steampunk"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Paranormal"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Urban Fantasy"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Epic"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Non-Fiction"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Contemporary"
                        },
                        new
                        {
                            Id = 39,
                            Name = "Classic"
                        },
                        new
                        {
                            Id = 40,
                            Name = "Humor"
                        },
                        new
                        {
                            Id = 41,
                            Name = "Memoir"
                        },
                        new
                        {
                            Id = 42,
                            Name = "Philosophy"
                        },
                        new
                        {
                            Id = 43,
                            Name = "Religion"
                        },
                        new
                        {
                            Id = 44,
                            Name = "True Crime"
                        },
                        new
                        {
                            Id = 45,
                            Name = "Academic"
                        },
                        new
                        {
                            Id = 46,
                            Name = "Self-Improvement"
                        },
                        new
                        {
                            Id = 47,
                            Name = "Chick Lit"
                        },
                        new
                        {
                            Id = 48,
                            Name = "LGBT Literature"
                        },
                        new
                        {
                            Id = 49,
                            Name = "Fairy Tales"
                        },
                        new
                        {
                            Id = 50,
                            Name = "Bildungsroman"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Data.Models.AuthorBook", b =>
                {
                    b.HasOne("Data.Models.Author", "Author")
                        .WithMany("AuthorBooks")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.Book", "Book")
                        .WithMany("AuthorBooks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("Data.Models.BookGenre", b =>
                {
                    b.HasOne("Data.Models.Book", "Book")
                        .WithMany("BookGenres")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.Genre", "Genre")
                        .WithMany("BookGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Data.Models.BookReview", b =>
                {
                    b.HasOne("Data.Models.Book", "Book")
                        .WithMany("BookReviews")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Models.Author", b =>
                {
                    b.Navigation("AuthorBooks");
                });

            modelBuilder.Entity("Data.Models.Book", b =>
                {
                    b.Navigation("AuthorBooks");

                    b.Navigation("BookGenres");

                    b.Navigation("BookReviews");
                });

            modelBuilder.Entity("Data.Models.Genre", b =>
                {
                    b.Navigation("BookGenres");
                });
#pragma warning restore 612, 618
        }
    }
}
