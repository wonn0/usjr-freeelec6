// <auto-generated />
using System;
using ASI.Basecode.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASI.Basecode.Data.Migrations
{
    [DbContext(typeof(AsiBasecodeDBContext))]
    [Migration("20231203143203_seed2")]
    partial class seed2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ASI.Basecode.Data.Models.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ExpiresUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IssuedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("ASI.Basecode.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Data.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Jane",
                            LastName = "Austen"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "George",
                            LastName = "Orwell"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Haruki",
                            LastName = "Murakami"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Toni",
                            LastName = "Morrison"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Leo",
                            LastName = "Tolstoy"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Gabriel García",
                            LastName = "Márquez"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "J.K.",
                            LastName = "Rowling"
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Charles",
                            LastName = "Dickens"
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "Chimamanda Ngozi",
                            LastName = "Adichie"
                        },
                        new
                        {
                            Id = 10,
                            FirstName = "Ernest",
                            LastName = "Hemingway"
                        },
                        new
                        {
                            Id = 11,
                            FirstName = "Fyodor",
                            LastName = "Dostoevsky"
                        },
                        new
                        {
                            Id = 12,
                            FirstName = "Isabel",
                            LastName = "Allende"
                        },
                        new
                        {
                            Id = 13,
                            FirstName = "Mark",
                            LastName = "Twain"
                        },
                        new
                        {
                            Id = 14,
                            FirstName = "Virginia",
                            LastName = "Woolf"
                        },
                        new
                        {
                            Id = 15,
                            FirstName = "James",
                            LastName = "Baldwin"
                        },
                        new
                        {
                            Id = 16,
                            FirstName = "Agatha",
                            LastName = "Christie"
                        },
                        new
                        {
                            Id = 17,
                            FirstName = "J.R.R.",
                            LastName = "Tolkien"
                        },
                        new
                        {
                            Id = 18,
                            FirstName = "Margaret",
                            LastName = "Atwood"
                        },
                        new
                        {
                            Id = 19,
                            FirstName = "Kazuo",
                            LastName = "Ishiguro"
                        },
                        new
                        {
                            Id = 20,
                            FirstName = "Paulo",
                            LastName = "Coelho"
                        },
                        new
                        {
                            Id = 21,
                            FirstName = "Mary",
                            LastName = "Shelley"
                        },
                        new
                        {
                            Id = 22,
                            FirstName = "Salman",
                            LastName = "Rushdie"
                        },
                        new
                        {
                            Id = 23,
                            FirstName = "H.P.",
                            LastName = "Lovecraft"
                        },
                        new
                        {
                            Id = 24,
                            FirstName = "Emily",
                            LastName = "Brontë"
                        },
                        new
                        {
                            Id = 25,
                            FirstName = "Edgar Allan",
                            LastName = "Poe"
                        },
                        new
                        {
                            Id = 26,
                            FirstName = "Langston",
                            LastName = "Hughes"
                        },
                        new
                        {
                            Id = 27,
                            FirstName = "Khaled",
                            LastName = "Hosseini"
                        },
                        new
                        {
                            Id = 28,
                            FirstName = "Oscar",
                            LastName = "Wilde"
                        },
                        new
                        {
                            Id = 29,
                            FirstName = "Stephen",
                            LastName = "King"
                        },
                        new
                        {
                            Id = 30,
                            FirstName = "Maya",
                            LastName = "Angelou"
                        },
                        new
                        {
                            Id = 31,
                            FirstName = "Roald",
                            LastName = "Dahl"
                        },
                        new
                        {
                            Id = 32,
                            FirstName = "Dan",
                            LastName = "Brown"
                        },
                        new
                        {
                            Id = 33,
                            FirstName = "Neil",
                            LastName = "Gaiman"
                        },
                        new
                        {
                            Id = 34,
                            FirstName = "Sylvia",
                            LastName = "Plath"
                        },
                        new
                        {
                            Id = 35,
                            FirstName = "Ian",
                            LastName = "McEwan"
                        },
                        new
                        {
                            Id = 36,
                            FirstName = "Orhan",
                            LastName = "Pamuk"
                        },
                        new
                        {
                            Id = 37,
                            FirstName = "Zadie",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 38,
                            FirstName = "Alice",
                            LastName = "Walker"
                        },
                        new
                        {
                            Id = 39,
                            FirstName = "Kurt",
                            LastName = "Vonnegut"
                        },
                        new
                        {
                            Id = 40,
                            FirstName = "Louise",
                            LastName = "Erdrich"
                        },
                        new
                        {
                            Id = 41,
                            FirstName = "Cormac",
                            LastName = "McCarthy"
                        },
                        new
                        {
                            Id = 42,
                            FirstName = "Philip K.",
                            LastName = "Dick"
                        },
                        new
                        {
                            Id = 43,
                            FirstName = "John",
                            LastName = "Steinbeck"
                        },
                        new
                        {
                            Id = 44,
                            FirstName = "Herman",
                            LastName = "Melville"
                        },
                        new
                        {
                            Id = 45,
                            FirstName = "Charles",
                            LastName = "Bukowski"
                        },
                        new
                        {
                            Id = 46,
                            FirstName = "William",
                            LastName = "Faulkner"
                        },
                        new
                        {
                            Id = 47,
                            FirstName = "Ayn",
                            LastName = "Rand"
                        },
                        new
                        {
                            Id = 48,
                            FirstName = "Gustave",
                            LastName = "Flaubert"
                        },
                        new
                        {
                            Id = 49,
                            FirstName = "Ken",
                            LastName = "Follett"
                        },
                        new
                        {
                            Id = 50,
                            FirstName = "Arthur Conan",
                            LastName = "Doyle"
                        });
                });

            modelBuilder.Entity("Data.Models.AuthorBook", b =>
                {
                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.HasKey("AuthorId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("AuthorBook");

                    b.HasData(
                        new
                        {
                            AuthorId = 20,
                            BookId = 1
                        },
                        new
                        {
                            AuthorId = 21,
                            BookId = 1
                        },
                        new
                        {
                            AuthorId = 41,
                            BookId = 2
                        },
                        new
                        {
                            AuthorId = 43,
                            BookId = 2
                        },
                        new
                        {
                            AuthorId = 49,
                            BookId = 2
                        },
                        new
                        {
                            AuthorId = 14,
                            BookId = 3
                        },
                        new
                        {
                            AuthorId = 30,
                            BookId = 3
                        },
                        new
                        {
                            AuthorId = 38,
                            BookId = 3
                        },
                        new
                        {
                            AuthorId = 17,
                            BookId = 4
                        },
                        new
                        {
                            AuthorId = 37,
                            BookId = 4
                        },
                        new
                        {
                            AuthorId = 18,
                            BookId = 4
                        },
                        new
                        {
                            AuthorId = 49,
                            BookId = 5
                        },
                        new
                        {
                            AuthorId = 21,
                            BookId = 5
                        },
                        new
                        {
                            AuthorId = 12,
                            BookId = 5
                        },
                        new
                        {
                            AuthorId = 20,
                            BookId = 6
                        },
                        new
                        {
                            AuthorId = 25,
                            BookId = 7
                        },
                        new
                        {
                            AuthorId = 31,
                            BookId = 7
                        },
                        new
                        {
                            AuthorId = 37,
                            BookId = 8
                        },
                        new
                        {
                            AuthorId = 37,
                            BookId = 9
                        },
                        new
                        {
                            AuthorId = 15,
                            BookId = 10
                        },
                        new
                        {
                            AuthorId = 26,
                            BookId = 10
                        },
                        new
                        {
                            AuthorId = 41,
                            BookId = 10
                        },
                        new
                        {
                            AuthorId = 2,
                            BookId = 11
                        },
                        new
                        {
                            AuthorId = 49,
                            BookId = 11
                        },
                        new
                        {
                            AuthorId = 48,
                            BookId = 11
                        },
                        new
                        {
                            AuthorId = 36,
                            BookId = 12
                        },
                        new
                        {
                            AuthorId = 18,
                            BookId = 13
                        },
                        new
                        {
                            AuthorId = 31,
                            BookId = 13
                        },
                        new
                        {
                            AuthorId = 17,
                            BookId = 13
                        },
                        new
                        {
                            AuthorId = 34,
                            BookId = 14
                        },
                        new
                        {
                            AuthorId = 24,
                            BookId = 14
                        },
                        new
                        {
                            AuthorId = 16,
                            BookId = 15
                        },
                        new
                        {
                            AuthorId = 27,
                            BookId = 15
                        },
                        new
                        {
                            AuthorId = 19,
                            BookId = 15
                        },
                        new
                        {
                            AuthorId = 33,
                            BookId = 16
                        },
                        new
                        {
                            AuthorId = 34,
                            BookId = 16
                        },
                        new
                        {
                            AuthorId = 36,
                            BookId = 16
                        },
                        new
                        {
                            AuthorId = 37,
                            BookId = 17
                        },
                        new
                        {
                            AuthorId = 33,
                            BookId = 17
                        },
                        new
                        {
                            AuthorId = 3,
                            BookId = 18
                        },
                        new
                        {
                            AuthorId = 20,
                            BookId = 18
                        },
                        new
                        {
                            AuthorId = 13,
                            BookId = 18
                        },
                        new
                        {
                            AuthorId = 17,
                            BookId = 19
                        },
                        new
                        {
                            AuthorId = 41,
                            BookId = 19
                        },
                        new
                        {
                            AuthorId = 33,
                            BookId = 20
                        },
                        new
                        {
                            AuthorId = 14,
                            BookId = 20
                        },
                        new
                        {
                            AuthorId = 43,
                            BookId = 21
                        },
                        new
                        {
                            AuthorId = 16,
                            BookId = 21
                        },
                        new
                        {
                            AuthorId = 5,
                            BookId = 21
                        },
                        new
                        {
                            AuthorId = 41,
                            BookId = 22
                        },
                        new
                        {
                            AuthorId = 44,
                            BookId = 22
                        },
                        new
                        {
                            AuthorId = 28,
                            BookId = 22
                        },
                        new
                        {
                            AuthorId = 8,
                            BookId = 23
                        },
                        new
                        {
                            AuthorId = 19,
                            BookId = 23
                        },
                        new
                        {
                            AuthorId = 44,
                            BookId = 23
                        },
                        new
                        {
                            AuthorId = 33,
                            BookId = 24
                        },
                        new
                        {
                            AuthorId = 25,
                            BookId = 24
                        },
                        new
                        {
                            AuthorId = 1,
                            BookId = 25
                        },
                        new
                        {
                            AuthorId = 9,
                            BookId = 25
                        },
                        new
                        {
                            AuthorId = 12,
                            BookId = 25
                        },
                        new
                        {
                            AuthorId = 24,
                            BookId = 26
                        },
                        new
                        {
                            AuthorId = 3,
                            BookId = 26
                        },
                        new
                        {
                            AuthorId = 7,
                            BookId = 27
                        },
                        new
                        {
                            AuthorId = 2,
                            BookId = 28
                        },
                        new
                        {
                            AuthorId = 50,
                            BookId = 29
                        },
                        new
                        {
                            AuthorId = 48,
                            BookId = 30
                        },
                        new
                        {
                            AuthorId = 41,
                            BookId = 30
                        },
                        new
                        {
                            AuthorId = 29,
                            BookId = 30
                        },
                        new
                        {
                            AuthorId = 10,
                            BookId = 31
                        },
                        new
                        {
                            AuthorId = 23,
                            BookId = 31
                        },
                        new
                        {
                            AuthorId = 36,
                            BookId = 32
                        },
                        new
                        {
                            AuthorId = 1,
                            BookId = 32
                        },
                        new
                        {
                            AuthorId = 27,
                            BookId = 32
                        },
                        new
                        {
                            AuthorId = 26,
                            BookId = 33
                        },
                        new
                        {
                            AuthorId = 45,
                            BookId = 33
                        },
                        new
                        {
                            AuthorId = 29,
                            BookId = 34
                        },
                        new
                        {
                            AuthorId = 45,
                            BookId = 34
                        },
                        new
                        {
                            AuthorId = 17,
                            BookId = 34
                        },
                        new
                        {
                            AuthorId = 11,
                            BookId = 35
                        },
                        new
                        {
                            AuthorId = 31,
                            BookId = 35
                        },
                        new
                        {
                            AuthorId = 26,
                            BookId = 35
                        },
                        new
                        {
                            AuthorId = 29,
                            BookId = 36
                        },
                        new
                        {
                            AuthorId = 20,
                            BookId = 36
                        },
                        new
                        {
                            AuthorId = 6,
                            BookId = 36
                        },
                        new
                        {
                            AuthorId = 20,
                            BookId = 37
                        },
                        new
                        {
                            AuthorId = 15,
                            BookId = 37
                        },
                        new
                        {
                            AuthorId = 44,
                            BookId = 38
                        },
                        new
                        {
                            AuthorId = 46,
                            BookId = 38
                        },
                        new
                        {
                            AuthorId = 35,
                            BookId = 39
                        },
                        new
                        {
                            AuthorId = 3,
                            BookId = 39
                        },
                        new
                        {
                            AuthorId = 5,
                            BookId = 40
                        },
                        new
                        {
                            AuthorId = 13,
                            BookId = 40
                        },
                        new
                        {
                            AuthorId = 17,
                            BookId = 41
                        },
                        new
                        {
                            AuthorId = 28,
                            BookId = 42
                        },
                        new
                        {
                            AuthorId = 33,
                            BookId = 42
                        },
                        new
                        {
                            AuthorId = 22,
                            BookId = 42
                        },
                        new
                        {
                            AuthorId = 46,
                            BookId = 43
                        },
                        new
                        {
                            AuthorId = 28,
                            BookId = 44
                        },
                        new
                        {
                            AuthorId = 1,
                            BookId = 44
                        },
                        new
                        {
                            AuthorId = 4,
                            BookId = 45
                        },
                        new
                        {
                            AuthorId = 43,
                            BookId = 45
                        },
                        new
                        {
                            AuthorId = 31,
                            BookId = 46
                        },
                        new
                        {
                            AuthorId = 18,
                            BookId = 46
                        },
                        new
                        {
                            AuthorId = 4,
                            BookId = 47
                        },
                        new
                        {
                            AuthorId = 24,
                            BookId = 48
                        },
                        new
                        {
                            AuthorId = 49,
                            BookId = 48
                        },
                        new
                        {
                            AuthorId = 2,
                            BookId = 48
                        },
                        new
                        {
                            AuthorId = 25,
                            BookId = 49
                        },
                        new
                        {
                            AuthorId = 13,
                            BookId = 50
                        },
                        new
                        {
                            AuthorId = 50,
                            BookId = 50
                        },
                        new
                        {
                            AuthorId = 31,
                            BookId = 50
                        });
                });

            modelBuilder.Entity("Data.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PageCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublishedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1302),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7413-3994",
                            Language = "English",
                            Name = "Whispers of the Forgotten City",
                            PageCount = 360,
                            PublishedOn = new DateTime(2018, 1, 27, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1295),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1303)
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1466),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-8985-3845",
                            Language = "English",
                            Name = "Sands of the Forgotten Empire",
                            PageCount = 327,
                            PublishedOn = new DateTime(2018, 10, 13, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1466),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1467)
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1524),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-6794-5898",
                            Language = "English",
                            Name = "The Architect's Legacy",
                            PageCount = 243,
                            PublishedOn = new DateTime(2016, 4, 26, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1523),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1525)
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1556),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-1414-9548",
                            Language = "English",
                            Name = "Twilight of the Celestial Court",
                            PageCount = 364,
                            PublishedOn = new DateTime(2015, 1, 27, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1555),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1556)
                        },
                        new
                        {
                            Id = 5,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1647),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-4729-4324",
                            Language = "English",
                            Name = "The Alchemist's Shadow",
                            PageCount = 366,
                            PublishedOn = new DateTime(2019, 7, 24, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1646),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1648)
                        },
                        new
                        {
                            Id = 6,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1689),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-1693-8160",
                            Language = "English",
                            Name = "The Last Voyage of the Star Sailor",
                            PageCount = 246,
                            PublishedOn = new DateTime(2017, 2, 4, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1688),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1689)
                        },
                        new
                        {
                            Id = 7,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1714),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-8684-3720",
                            Language = "English",
                            Name = "Whispers of the Forgotten City",
                            PageCount = 387,
                            PublishedOn = new DateTime(2017, 5, 21, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1713),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1714)
                        },
                        new
                        {
                            Id = 8,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1776),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-6993-4285",
                            Language = "English",
                            Name = "The Midnight Carousel",
                            PageCount = 368,
                            PublishedOn = new DateTime(2019, 9, 26, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1775),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1776)
                        },
                        new
                        {
                            Id = 9,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1801),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7145-3614",
                            Language = "English",
                            Name = "The Secret of the Astral Plane",
                            PageCount = 140,
                            PublishedOn = new DateTime(2014, 4, 19, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1800),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1801)
                        },
                        new
                        {
                            Id = 10,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1833),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-1460-9594",
                            Language = "English",
                            Name = "In the Heart of the Storm",
                            PageCount = 177,
                            PublishedOn = new DateTime(2022, 3, 12, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1832),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1833)
                        },
                        new
                        {
                            Id = 11,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1900),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-6952-5832",
                            Language = "English",
                            Name = "Dreams of the Sunken City",
                            PageCount = 126,
                            PublishedOn = new DateTime(2022, 7, 24, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1899),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1901)
                        },
                        new
                        {
                            Id = 12,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1931),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7487-5357",
                            Language = "English",
                            Name = "Dance of the Fireflies",
                            PageCount = 461,
                            PublishedOn = new DateTime(2015, 10, 7, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1930),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1931)
                        },
                        new
                        {
                            Id = 13,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1955),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7759-4559",
                            Language = "English",
                            Name = "The Architect's Legacy",
                            PageCount = 428,
                            PublishedOn = new DateTime(2015, 6, 1, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1954),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(1955)
                        },
                        new
                        {
                            Id = 14,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2017),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-2655-4397",
                            Language = "English",
                            Name = "The Architect's Legacy",
                            PageCount = 159,
                            PublishedOn = new DateTime(2019, 8, 1, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2016),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2017)
                        },
                        new
                        {
                            Id = 15,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2058),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-3865-4478",
                            Language = "English",
                            Name = "Beyond the Shadow Realm",
                            PageCount = 471,
                            PublishedOn = new DateTime(2019, 7, 20, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2057),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2059)
                        },
                        new
                        {
                            Id = 16,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2121),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-9107-8300",
                            Language = "English",
                            Name = "The Rose of the Wastelands",
                            PageCount = 392,
                            PublishedOn = new DateTime(2020, 9, 22, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2120),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2121)
                        },
                        new
                        {
                            Id = 17,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2157),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-8237-8325",
                            Language = "English",
                            Name = "Sorrows of the Last Warlock",
                            PageCount = 297,
                            PublishedOn = new DateTime(2019, 3, 13, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2156),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2158)
                        },
                        new
                        {
                            Id = 18,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2211),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-5938-9180",
                            Language = "English",
                            Name = "The Hidden Kingdom Beyond the Mountains",
                            PageCount = 190,
                            PublishedOn = new DateTime(2015, 8, 30, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2211),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2212)
                        },
                        new
                        {
                            Id = 19,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2290),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-6532-2047",
                            Language = "English",
                            Name = "The Secret of the Astral Plane",
                            PageCount = 447,
                            PublishedOn = new DateTime(2017, 8, 14, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2289),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2291)
                        },
                        new
                        {
                            Id = 20,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2328),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-1232-1552",
                            Language = "English",
                            Name = "The Scribe's Enigma",
                            PageCount = 141,
                            PublishedOn = new DateTime(2020, 3, 29, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2327),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2328)
                        },
                        new
                        {
                            Id = 21,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2359),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-4866-3719",
                            Language = "English",
                            Name = "Mysteries of the Ancient Library",
                            PageCount = 459,
                            PublishedOn = new DateTime(2014, 5, 20, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2359),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2360)
                        },
                        new
                        {
                            Id = 22,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2410),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-9178-8353",
                            Language = "English",
                            Name = "Abyss of the Starry Depths",
                            PageCount = 251,
                            PublishedOn = new DateTime(2017, 10, 1, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2409),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2410)
                        },
                        new
                        {
                            Id = 23,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2456),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-5325-1641",
                            Language = "English",
                            Name = "The Oracle's Last Prophecy",
                            PageCount = 496,
                            PublishedOn = new DateTime(2022, 11, 9, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2455),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2457)
                        },
                        new
                        {
                            Id = 24,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2489),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-1986-9974",
                            Language = "English",
                            Name = "Ghosts of the Ancient Manor",
                            PageCount = 337,
                            PublishedOn = new DateTime(2015, 12, 18, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2488),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2489)
                        },
                        new
                        {
                            Id = 25,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2546),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-9614-8594",
                            Language = "English",
                            Name = "The Emerald Conundrum",
                            PageCount = 407,
                            PublishedOn = new DateTime(2017, 10, 15, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2545),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2547)
                        },
                        new
                        {
                            Id = 26,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2597),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-9433-1664",
                            Language = "English",
                            Name = "The Scribe's Enigma",
                            PageCount = 323,
                            PublishedOn = new DateTime(2016, 6, 19, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2597),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2598)
                        },
                        new
                        {
                            Id = 27,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2627),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-9248-3384",
                            Language = "English",
                            Name = "Ghosts of the Ancient Manor",
                            PageCount = 362,
                            PublishedOn = new DateTime(2017, 10, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2626),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2628)
                        },
                        new
                        {
                            Id = 28,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2675),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-3241-3081",
                            Language = "English",
                            Name = "The Architect's Legacy",
                            PageCount = 439,
                            PublishedOn = new DateTime(2016, 8, 11, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2675),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2676)
                        },
                        new
                        {
                            Id = 29,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2704),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-1310-5697",
                            Language = "English",
                            Name = "Voices from the Hollow Mountains",
                            PageCount = 468,
                            PublishedOn = new DateTime(2021, 3, 5, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2703),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2704)
                        },
                        new
                        {
                            Id = 30,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2728),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-2114-4767",
                            Language = "English",
                            Name = "Chronicles of the Silver Mist",
                            PageCount = 459,
                            PublishedOn = new DateTime(2014, 5, 8, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2728),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2729)
                        },
                        new
                        {
                            Id = 31,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2781),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7644-1515",
                            Language = "English",
                            Name = "Lost in the Whispering Forest",
                            PageCount = 494,
                            PublishedOn = new DateTime(2021, 4, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2781),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2782)
                        },
                        new
                        {
                            Id = 32,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2809),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7122-3931",
                            Language = "English",
                            Name = "Echoes in the Starless Sky",
                            PageCount = 230,
                            PublishedOn = new DateTime(2015, 10, 4, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2808),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2809)
                        },
                        new
                        {
                            Id = 33,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2859),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-5155-3880",
                            Language = "English",
                            Name = "The Rose of the Wastelands",
                            PageCount = 258,
                            PublishedOn = new DateTime(2021, 5, 13, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2858),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2860)
                        },
                        new
                        {
                            Id = 34,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2917),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-9426-1124",
                            Language = "English",
                            Name = "The Meridian of Fate",
                            PageCount = 152,
                            PublishedOn = new DateTime(2021, 3, 17, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2917),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2918)
                        },
                        new
                        {
                            Id = 35,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2953),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7088-1114",
                            Language = "English",
                            Name = "Lost in the Whispering Forest",
                            PageCount = 172,
                            PublishedOn = new DateTime(2022, 6, 14, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2952),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2953)
                        },
                        new
                        {
                            Id = 36,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2983),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-1151-9301",
                            Language = "English",
                            Name = "The Alchemist's Shadow",
                            PageCount = 185,
                            PublishedOn = new DateTime(2019, 11, 1, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2982),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(2983)
                        },
                        new
                        {
                            Id = 37,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3041),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-4167-7284",
                            Language = "English",
                            Name = "Sands of the Forgotten Empire",
                            PageCount = 295,
                            PublishedOn = new DateTime(2016, 2, 23, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3040),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3041)
                        },
                        new
                        {
                            Id = 38,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3070),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-5932-3310",
                            Language = "English",
                            Name = "The Midnight Carousel",
                            PageCount = 456,
                            PublishedOn = new DateTime(2022, 12, 2, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3069),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3070)
                        },
                        new
                        {
                            Id = 39,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3109),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-1432-6484",
                            Language = "English",
                            Name = "The Heirloom of Forgotten Times",
                            PageCount = 375,
                            PublishedOn = new DateTime(2021, 12, 30, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3109),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3110)
                        },
                        new
                        {
                            Id = 40,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3158),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7202-8132",
                            Language = "English",
                            Name = "The Dragon's Heir",
                            PageCount = 217,
                            PublishedOn = new DateTime(2018, 8, 5, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3157),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3158)
                        },
                        new
                        {
                            Id = 41,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3190),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-9417-1674",
                            Language = "English",
                            Name = "The Magician's Reflection",
                            PageCount = 159,
                            PublishedOn = new DateTime(2014, 8, 24, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3189),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3190)
                        },
                        new
                        {
                            Id = 42,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3221),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-7062-1579",
                            Language = "English",
                            Name = "The Heirloom of Forgotten Times",
                            PageCount = 454,
                            PublishedOn = new DateTime(2013, 12, 17, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3221),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3222)
                        },
                        new
                        {
                            Id = 43,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3308),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-4557-6752",
                            Language = "English",
                            Name = "The Ivory Tower of Secrets",
                            PageCount = 461,
                            PublishedOn = new DateTime(2015, 3, 4, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3307),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3308)
                        },
                        new
                        {
                            Id = 44,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3347),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-4178-2461",
                            Language = "English",
                            Name = "Abyss of the Starry Depths",
                            PageCount = 260,
                            PublishedOn = new DateTime(2019, 5, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3346),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3348)
                        },
                        new
                        {
                            Id = 45,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3382),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-4884-9224",
                            Language = "English",
                            Name = "Tales from the Sapphire Sea",
                            PageCount = 473,
                            PublishedOn = new DateTime(2019, 4, 23, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3382),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3383)
                        },
                        new
                        {
                            Id = 46,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3445),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-8995-9905",
                            Language = "English",
                            Name = "The Painter's Paradox",
                            PageCount = 284,
                            PublishedOn = new DateTime(2020, 11, 18, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3444),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3445)
                        },
                        new
                        {
                            Id = 47,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3483),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-5566-5612",
                            Language = "English",
                            Name = "Beneath the Crimson Moon",
                            PageCount = 471,
                            PublishedOn = new DateTime(2020, 8, 16, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3483),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3484)
                        },
                        new
                        {
                            Id = 48,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3507),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-2818-5737",
                            Language = "English",
                            Name = "The Oracle's Last Prophecy",
                            PageCount = 248,
                            PublishedOn = new DateTime(2021, 6, 4, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3506),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3507)
                        },
                        new
                        {
                            Id = 49,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3577),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-6701-4676",
                            Language = "English",
                            Name = "The Last Voyage of the Star Sailor",
                            PageCount = 110,
                            PublishedOn = new DateTime(2019, 4, 30, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3576),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3577)
                        },
                        new
                        {
                            Id = 50,
                            Created = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3607),
                            Description = "An engaging and compelling story about...",
                            ISBN = "ISBN-6542-3841",
                            Language = "English",
                            Name = "Mysteries of the Ancient Library",
                            PageCount = 481,
                            PublishedOn = new DateTime(2014, 6, 14, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3606),
                            Updated = new DateTime(2023, 12, 3, 22, 32, 2, 985, DateTimeKind.Local).AddTicks(3607)
                        });
                });

            modelBuilder.Entity("Data.Models.BookGenre", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.HasKey("BookId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("BookGenre");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            GenreId = 42
                        },
                        new
                        {
                            BookId = 2,
                            GenreId = 8
                        },
                        new
                        {
                            BookId = 2,
                            GenreId = 38
                        },
                        new
                        {
                            BookId = 3,
                            GenreId = 18
                        },
                        new
                        {
                            BookId = 4,
                            GenreId = 20
                        },
                        new
                        {
                            BookId = 4,
                            GenreId = 1
                        },
                        new
                        {
                            BookId = 5,
                            GenreId = 47
                        },
                        new
                        {
                            BookId = 5,
                            GenreId = 20
                        },
                        new
                        {
                            BookId = 6,
                            GenreId = 22
                        },
                        new
                        {
                            BookId = 7,
                            GenreId = 12
                        },
                        new
                        {
                            BookId = 8,
                            GenreId = 30
                        },
                        new
                        {
                            BookId = 9,
                            GenreId = 32
                        },
                        new
                        {
                            BookId = 9,
                            GenreId = 30
                        },
                        new
                        {
                            BookId = 10,
                            GenreId = 35
                        },
                        new
                        {
                            BookId = 10,
                            GenreId = 39
                        },
                        new
                        {
                            BookId = 11,
                            GenreId = 27
                        },
                        new
                        {
                            BookId = 12,
                            GenreId = 28
                        },
                        new
                        {
                            BookId = 13,
                            GenreId = 33
                        },
                        new
                        {
                            BookId = 14,
                            GenreId = 39
                        },
                        new
                        {
                            BookId = 14,
                            GenreId = 45
                        },
                        new
                        {
                            BookId = 15,
                            GenreId = 1
                        },
                        new
                        {
                            BookId = 15,
                            GenreId = 8
                        },
                        new
                        {
                            BookId = 16,
                            GenreId = 37
                        },
                        new
                        {
                            BookId = 17,
                            GenreId = 33
                        },
                        new
                        {
                            BookId = 17,
                            GenreId = 18
                        },
                        new
                        {
                            BookId = 18,
                            GenreId = 49
                        },
                        new
                        {
                            BookId = 18,
                            GenreId = 3
                        },
                        new
                        {
                            BookId = 19,
                            GenreId = 50
                        },
                        new
                        {
                            BookId = 19,
                            GenreId = 37
                        },
                        new
                        {
                            BookId = 20,
                            GenreId = 41
                        },
                        new
                        {
                            BookId = 21,
                            GenreId = 41
                        },
                        new
                        {
                            BookId = 22,
                            GenreId = 45
                        },
                        new
                        {
                            BookId = 22,
                            GenreId = 10
                        },
                        new
                        {
                            BookId = 23,
                            GenreId = 16
                        },
                        new
                        {
                            BookId = 23,
                            GenreId = 9
                        },
                        new
                        {
                            BookId = 24,
                            GenreId = 34
                        },
                        new
                        {
                            BookId = 24,
                            GenreId = 10
                        },
                        new
                        {
                            BookId = 25,
                            GenreId = 4
                        },
                        new
                        {
                            BookId = 25,
                            GenreId = 49
                        },
                        new
                        {
                            BookId = 26,
                            GenreId = 8
                        },
                        new
                        {
                            BookId = 27,
                            GenreId = 3
                        },
                        new
                        {
                            BookId = 27,
                            GenreId = 15
                        },
                        new
                        {
                            BookId = 28,
                            GenreId = 9
                        },
                        new
                        {
                            BookId = 28,
                            GenreId = 3
                        },
                        new
                        {
                            BookId = 29,
                            GenreId = 15
                        },
                        new
                        {
                            BookId = 30,
                            GenreId = 42
                        },
                        new
                        {
                            BookId = 31,
                            GenreId = 20
                        },
                        new
                        {
                            BookId = 32,
                            GenreId = 24
                        },
                        new
                        {
                            BookId = 32,
                            GenreId = 6
                        },
                        new
                        {
                            BookId = 33,
                            GenreId = 10
                        },
                        new
                        {
                            BookId = 34,
                            GenreId = 43
                        },
                        new
                        {
                            BookId = 35,
                            GenreId = 35
                        },
                        new
                        {
                            BookId = 36,
                            GenreId = 47
                        },
                        new
                        {
                            BookId = 37,
                            GenreId = 37
                        },
                        new
                        {
                            BookId = 38,
                            GenreId = 31
                        },
                        new
                        {
                            BookId = 38,
                            GenreId = 18
                        },
                        new
                        {
                            BookId = 39,
                            GenreId = 34
                        },
                        new
                        {
                            BookId = 40,
                            GenreId = 31
                        },
                        new
                        {
                            BookId = 41,
                            GenreId = 22
                        },
                        new
                        {
                            BookId = 41,
                            GenreId = 19
                        },
                        new
                        {
                            BookId = 42,
                            GenreId = 18
                        },
                        new
                        {
                            BookId = 42,
                            GenreId = 49
                        },
                        new
                        {
                            BookId = 43,
                            GenreId = 1
                        },
                        new
                        {
                            BookId = 43,
                            GenreId = 12
                        },
                        new
                        {
                            BookId = 44,
                            GenreId = 28
                        },
                        new
                        {
                            BookId = 45,
                            GenreId = 9
                        },
                        new
                        {
                            BookId = 45,
                            GenreId = 43
                        },
                        new
                        {
                            BookId = 46,
                            GenreId = 7
                        },
                        new
                        {
                            BookId = 47,
                            GenreId = 35
                        },
                        new
                        {
                            BookId = 48,
                            GenreId = 18
                        },
                        new
                        {
                            BookId = 48,
                            GenreId = 29
                        },
                        new
                        {
                            BookId = 49,
                            GenreId = 42
                        },
                        new
                        {
                            BookId = 49,
                            GenreId = 6
                        },
                        new
                        {
                            BookId = 50,
                            GenreId = 43
                        });
                });

            modelBuilder.Entity("Data.Models.BookReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("ReviewedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReviewedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("BookReviews");
                });

            modelBuilder.Entity("Data.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Historical Fiction"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Young Adult"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Children’s Literature"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Literary Fiction"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Dystopian"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Crime"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Suspense"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Cyberpunk"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Magical Realism"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Gothic"
                        },
                        new
                        {
                            Id = 18,
                            Name = "War"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Post-Apocalyptic"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Western"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Satire"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Biography"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Autobiography"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Self-Help"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Travel"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Cooking"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Health & Fitness"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Graphic Novel"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Poetry"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Play"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Essays"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Journalism"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Steampunk"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Paranormal"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Urban Fantasy"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Epic"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Non-Fiction"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Contemporary"
                        },
                        new
                        {
                            Id = 39,
                            Name = "Classic"
                        },
                        new
                        {
                            Id = 40,
                            Name = "Humor"
                        },
                        new
                        {
                            Id = 41,
                            Name = "Memoir"
                        },
                        new
                        {
                            Id = 42,
                            Name = "Philosophy"
                        },
                        new
                        {
                            Id = 43,
                            Name = "Religion"
                        },
                        new
                        {
                            Id = 44,
                            Name = "True Crime"
                        },
                        new
                        {
                            Id = 45,
                            Name = "Academic"
                        },
                        new
                        {
                            Id = 46,
                            Name = "Self-Improvement"
                        },
                        new
                        {
                            Id = 47,
                            Name = "Chick Lit"
                        },
                        new
                        {
                            Id = 48,
                            Name = "LGBT Literature"
                        },
                        new
                        {
                            Id = 49,
                            Name = "Fairy Tales"
                        },
                        new
                        {
                            Id = 50,
                            Name = "Bildungsroman"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Data.Models.AuthorBook", b =>
                {
                    b.HasOne("Data.Models.Author", "Author")
                        .WithMany("AuthorBooks")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.Book", "Book")
                        .WithMany("AuthorBooks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("Data.Models.BookGenre", b =>
                {
                    b.HasOne("Data.Models.Book", "Book")
                        .WithMany("BookGenres")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.Genre", "Genre")
                        .WithMany("BookGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Data.Models.BookReview", b =>
                {
                    b.HasOne("Data.Models.Book", "Book")
                        .WithMany("BookReviews")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Models.Author", b =>
                {
                    b.Navigation("AuthorBooks");
                });

            modelBuilder.Entity("Data.Models.Book", b =>
                {
                    b.Navigation("AuthorBooks");

                    b.Navigation("BookGenres");

                    b.Navigation("BookReviews");
                });

            modelBuilder.Entity("Data.Models.Genre", b =>
                {
                    b.Navigation("BookGenres");
                });
#pragma warning restore 612, 618
        }
    }
}
